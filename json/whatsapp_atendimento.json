{
  "name": "WhatsApp Atendimento Cl√≠nica",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-whatsapp",
      "name": "WhatsApp Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "// Extrair dados da mensagem que o Backend encaminhou (j√° com clientId)\\nconst body = $input.first().json.body;\\n\\n// O backend que enviou o clientId e o objeto original da mensagem do Venom-Bot\\nconst clientId = body.clientId; // Este √© o id_clinica\\nconst message = body.message; // Este √© o objeto 'data' original do Venom-Bot\\n\\nlet phone;\\nlet messageText;\\nlet contactName = 'Paciente';\\n\\n// Extrai os campos do objeto 'message' recebido do backend\\nphone = message.from ? message.from.split('@')[0] : 'N/A'; // Remove @c.us\\nmessageText = message.body;\\ncontactName = message.pushname || message.from; // Usa pushname ou o n√∫mero como nome\\n\\nreturn [\\n  {\\n    json: {\\n      clientId: clientId, // ID da Cl√≠nica (importante para todas as chamadas ao backend)\\n      phone: phone,\\n      name: contactName,\\n      message_text: messageText,\\n      message_id: message.id || 'N/A',\\n      timestamp: message.t || Date.now() / 1000\\n    }\\n  }\\n];"
      },
      "id": "process-message",
      "name": "Processar Mensagem",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "url": "http://host.docker.internal:4000/api/ai/analyzeMessage",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": [
          {
            "name": "Authorization",
            "value": "Bearer {{ $env.BACKEND_API_TOKEN }}"
          }
        ],
        "sendBody": true,
        "bodyParameters": [  
          {
            "name": "clientId",
            "value": "={{ $('Processar Mensagem').first().json.clientId }}"
          },
          {
            "name": "messageText",
            "value": "={{ $('Processar Mensagem').first().json.message_text }}"
          },
          {
            "name": "systemPrompt",
            "value": "Voc√™ √© um assistente virtual da Cl√≠nica {{ $env.CLINIC_NAME || 'Sua Cl√≠nica' }}. Suas fun√ß√µes s√£o:\\n1. Responder d√∫vidas sobre hor√°rios, procedimentos e localiza√ß√£o\\n2. Identificar se o paciente quer agendar consulta\\n3. Fornecer informa√ß√µes gerais sobre sa√∫de\\n4. Ser sempre educado e profissional\\n\\nRegras:\\n- N√£o forne√ßa diagn√≥sticos m√©dicos\\n- Sempre sugira consulta presencial para quest√µes de sa√∫de\\n- Seja claro e objetivo nas respostas\\n- Use linguagem acess√≠vel\\n- Se identificar claramente a inten√ß√£o de agendamento de consulta, responda *exatamente* com a palavra-chave: 'AGENDAR_CONSULTA'\\n- Se n√£o conseguir atender ou identificar a inten√ß√£o, responda com: 'DESVIAR_HUMANO'\\n\\nInforma√ß√µes da cl√≠nica:\\n- Hor√°rio: Segunda a Sexta, 8h √†s 18h\\n- Endere√ßo: [ENDERE√áO_CLINICA - EX: Rua das Rosas, 450, Centro, Chapec√≥, SC]\\n- Telefone: {{ $env.CLINIC_PHONE || '(XX) XXXXX-XXXX' }}"
          }
        ],
        "options": {}
      },
      "id": "chamar-ia-para-analise",
      "name": "Chamar IA para An√°lise",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [680, 300],
      "credentials": {
        "httpHeaderAuth": {
          "id": "hLqrUhAwdSuSf2LS",
          "name": "AuthBackendClinica"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.response }}",
              "rightValue": "AGENDAR_CONSULTA",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "verificar-intencao-agendamento",
      "name": "Verificar Inten√ß√£o Agendamento",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [900, 200]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.response }}",
              "rightValue": "DESVIAR_HUMANO",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "verificar-intencao-desviar-humano",
      "name": "Verificar Inten√ß√£o Desviar Humano",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [900, 400]
    },
    {
      "parameters": {
        "url": "http://host.docker.internal:4000/api/agenda/disponibilidade",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": [
          {
            "name": "Authorization",
            "value": "Bearer {{ $env.BACKEND_API_TOKEN }}"
          }
        ],
        "sendQuery": true,
        "queryParameters": [  
          {
            "name": "clientId",
            "value": "={{ $('Processar Mensagem').first().json.clientId }}"
          },
          {
            "name": "dataInicio",
            "value": "={{ new Date().toISOString().split('T')[0] }}"
          },
          {
            "name": "dataFim",
            "value": "={{ new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0] }}"
          },
          {
            "name": "disponivelParaAgendamento",
            "value": "true"
          }
        ],
        "options": {}
      },
      "id": "verificar-disponibilidade",
      "name": "Verificar Disponibilidade",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1120, 100],
      "credentials": {
        "httpHeaderAuth": {
          "id": "hLqrUhAwdSuSf2LS",
          "name": "AuthBackendClinica"
        }
      }
    },
    {
      "parameters": {
        "url": "http://host.docker.internal:4000/api/whatsapp/sendMessage",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": [
          {
            "name": "Authorization",
            "value": "Bearer {{ $env.BACKEND_API_TOKEN }}"
          }
        ],
        "sendBody": true,
        "bodyParameters": [  
          {
            "name": "clientId",
            "value": "={{ $('Processar Mensagem').first().json.clientId }}"
          },
          {
            "name": "to",
            "value": "={{ $('Processar Mensagem').first().json.phone }}"
          },
          {
            "name": "message",
            "value": "={{ $node['Chamar IA para An√°lise'].json.response }}"
          }
        ],
        "options": {}
      },
      "id": "enviar-resposta-geral",
      "name": "Enviar Resposta Geral",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1120, 300],
      "credentials": {
        "httpHeaderAuth": {
          "id": "hLqrUhAwdSuSf2LS",
          "name": "AuthBackendClinica"
        }
      }
    },
    {
      "parameters": {
        "url": "http://host.docker.internal:4000/api/whatsapp/sendMessage",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": [
          {
            "name": "Authorization",
            "value": "Bearer {{ $env.BACKEND_API_TOKEN }}"
          }
        ],
        "sendBody": true,
        "bodyParameters": [  
          {
            "name": "clientId",
            "value": "={{ $('Processar Mensagem').first().json.clientId }}"
          },
          {
            "name": "to",
            "value": "={{ $('Processar Mensagem').first().json.phone }}"
          },
          {
            "name": "message",
            "value": "√ìtimo! Vou te ajudar a agendar sua consulta. Temos os seguintes hor√°rios dispon√≠veis:\\n\\n{{ ($json.data && $json.data.length > 0) ? $json.data.map(h => `üìÖ ${new Date(h.data).toLocaleDateString('pt-BR')} √†s ${h.hora_inicio.substring(0, 5)} - Dr(a). ${h.profissional_nome}`).join('\\n') : 'Nenhum hor√°rio dispon√≠vel no momento.' }}\\n\\nPara confirmar, por favor, me informe:\\n1Ô∏è‚É£ Qual hor√°rio prefere (Ex: 10:00)?\\n2Ô∏è‚É£ Com qual profissional (Ex: Dr. Jo√£o)?\\n3Ô∏è‚É£ Seu nome completo\\n4Ô∏è‚É£ Seu CPF (apenas n√∫meros)"
          }
        ],
        "options": {}
      },
      "id": "enviar-opcoes-agendamento",
      "name": "Enviar Op√ß√µes Agendamento",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1340, 100],
      "credentials": {
        "httpHeaderAuth": {
          "id": "hLqrUhAwdSuSf2LS",
          "name": "AuthBackendClinica"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "OK"
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "url": "http://host.docker.internal:4000/api/whatsapp/sendMessage",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": [
          {
            "name": "Authorization",
            "value": "Bearer {{ $env.BACKEND_API_TOKEN }}"
          }
        ],
        "sendBody": true,
        "bodyParameters": [  
          {
            "name": "clientId",
            "value": "={{ $('Processar Mensagem').first().json.clientId }}"
          },
          {
            "name": "to",
            "value": "={{ $('Processar Mensagem').first().json.phone }}"
          },
          {
            "name": "message",
            "value": "Desculpe, n√£o consegui entender completamente. Por favor, reformule sua pergunta ou aguarde que um atendente humano entrar√° em contato em hor√°rio comercial. Agrade√ßo a sua compreens√£o."
          }
        ],
        "options": {}
      },
      "id": "enviar-fallback-humano",
      "name": "Enviar Fallback Humano",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1120, 500],
      "credentials": {
        "httpHeaderAuth": {
          "id": "hLqrUhAwdSuSf2LS",
          "name": "AuthBackendClinica"
        }
      }
    }
  ],
  "connections": {
    "WhatsApp Webhook": {
      "main": [
        [
          {
            "node": "Processar Mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Processar Mensagem": {
      "main": [
        [
          {
            "node": "Chamar IA para An√°lise",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chamar IA para An√°lise": {
      "main": [
        [
          {
            "node": "Verificar Inten√ß√£o Agendamento",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificar Inten√ß√£o Desviar Humano",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Inten√ß√£o Agendamento": {
      "main": [
        [
          {
            "node": "Verificar Disponibilidade",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "else": [
        [
          {
            "node": "Enviar Resposta Geral",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Inten√ß√£o Desviar Humano": {
      "main": [
        [
          {
            "node": "Enviar Fallback Humano",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "else": [
        [
          {
            "node": "Enviar Resposta Geral",
            "type": "else",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Disponibilidade": {
      "main": [
        [
          {
            "node": "Enviar Op√ß√µes Agendamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Resposta Geral": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Op√ß√µes Agendamento": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Fallback Humano": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}