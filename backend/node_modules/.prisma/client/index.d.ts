
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Clinica
 * 
 */
export type Clinica = $Result.DefaultSelection<Prisma.$ClinicaPayload>
/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Paciente
 * 
 */
export type Paciente = $Result.DefaultSelection<Prisma.$PacientePayload>
/**
 * Model ProfissionalDaSaude
 * 
 */
export type ProfissionalDaSaude = $Result.DefaultSelection<Prisma.$ProfissionalDaSaudePayload>
/**
 * Model Consulta
 * 
 */
export type Consulta = $Result.DefaultSelection<Prisma.$ConsultaPayload>
/**
 * Model Avaliacao
 * 
 */
export type Avaliacao = $Result.DefaultSelection<Prisma.$AvaliacaoPayload>
/**
 * Model Procedimento
 * 
 */
export type Procedimento = $Result.DefaultSelection<Prisma.$ProcedimentoPayload>
/**
 * Model ConsultaProcedimento
 * 
 */
export type ConsultaProcedimento = $Result.DefaultSelection<Prisma.$ConsultaProcedimentoPayload>
/**
 * Model Agenda
 * 
 */
export type Agenda = $Result.DefaultSelection<Prisma.$AgendaPayload>
/**
 * Model ControleOperacional
 * 
 */
export type ControleOperacional = $Result.DefaultSelection<Prisma.$ControleOperacionalPayload>
/**
 * Model InteracaoRobo
 * 
 */
export type InteracaoRobo = $Result.DefaultSelection<Prisma.$InteracaoRoboPayload>
/**
 * Model Convenio
 * 
 */
export type Convenio = $Result.DefaultSelection<Prisma.$ConvenioPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Clinicas
 * const clinicas = await prisma.clinica.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Clinicas
   * const clinicas = await prisma.clinica.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.clinica`: Exposes CRUD operations for the **Clinica** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clinicas
    * const clinicas = await prisma.clinica.findMany()
    * ```
    */
  get clinica(): Prisma.ClinicaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.paciente`: Exposes CRUD operations for the **Paciente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pacientes
    * const pacientes = await prisma.paciente.findMany()
    * ```
    */
  get paciente(): Prisma.PacienteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.profissionalDaSaude`: Exposes CRUD operations for the **ProfissionalDaSaude** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProfissionalDaSaudes
    * const profissionalDaSaudes = await prisma.profissionalDaSaude.findMany()
    * ```
    */
  get profissionalDaSaude(): Prisma.ProfissionalDaSaudeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.consulta`: Exposes CRUD operations for the **Consulta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Consultas
    * const consultas = await prisma.consulta.findMany()
    * ```
    */
  get consulta(): Prisma.ConsultaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.avaliacao`: Exposes CRUD operations for the **Avaliacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Avaliacaos
    * const avaliacaos = await prisma.avaliacao.findMany()
    * ```
    */
  get avaliacao(): Prisma.AvaliacaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.procedimento`: Exposes CRUD operations for the **Procedimento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Procedimentos
    * const procedimentos = await prisma.procedimento.findMany()
    * ```
    */
  get procedimento(): Prisma.ProcedimentoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.consultaProcedimento`: Exposes CRUD operations for the **ConsultaProcedimento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ConsultaProcedimentos
    * const consultaProcedimentos = await prisma.consultaProcedimento.findMany()
    * ```
    */
  get consultaProcedimento(): Prisma.ConsultaProcedimentoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.agenda`: Exposes CRUD operations for the **Agenda** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Agenda
    * const agenda = await prisma.agenda.findMany()
    * ```
    */
  get agenda(): Prisma.AgendaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.controleOperacional`: Exposes CRUD operations for the **ControleOperacional** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ControleOperacionals
    * const controleOperacionals = await prisma.controleOperacional.findMany()
    * ```
    */
  get controleOperacional(): Prisma.ControleOperacionalDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.interacaoRobo`: Exposes CRUD operations for the **InteracaoRobo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InteracaoRobos
    * const interacaoRobos = await prisma.interacaoRobo.findMany()
    * ```
    */
  get interacaoRobo(): Prisma.InteracaoRoboDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.convenio`: Exposes CRUD operations for the **Convenio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Convenios
    * const convenios = await prisma.convenio.findMany()
    * ```
    */
  get convenio(): Prisma.ConvenioDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.10.1
   * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Clinica: 'Clinica',
    Usuario: 'Usuario',
    Paciente: 'Paciente',
    ProfissionalDaSaude: 'ProfissionalDaSaude',
    Consulta: 'Consulta',
    Avaliacao: 'Avaliacao',
    Procedimento: 'Procedimento',
    ConsultaProcedimento: 'ConsultaProcedimento',
    Agenda: 'Agenda',
    ControleOperacional: 'ControleOperacional',
    InteracaoRobo: 'InteracaoRobo',
    Convenio: 'Convenio'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "clinica" | "usuario" | "paciente" | "profissionalDaSaude" | "consulta" | "avaliacao" | "procedimento" | "consultaProcedimento" | "agenda" | "controleOperacional" | "interacaoRobo" | "convenio"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Clinica: {
        payload: Prisma.$ClinicaPayload<ExtArgs>
        fields: Prisma.ClinicaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClinicaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClinicaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClinicaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClinicaPayload>
          }
          findFirst: {
            args: Prisma.ClinicaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClinicaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClinicaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClinicaPayload>
          }
          findMany: {
            args: Prisma.ClinicaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClinicaPayload>[]
          }
          create: {
            args: Prisma.ClinicaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClinicaPayload>
          }
          createMany: {
            args: Prisma.ClinicaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClinicaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClinicaPayload>[]
          }
          delete: {
            args: Prisma.ClinicaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClinicaPayload>
          }
          update: {
            args: Prisma.ClinicaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClinicaPayload>
          }
          deleteMany: {
            args: Prisma.ClinicaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClinicaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClinicaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClinicaPayload>[]
          }
          upsert: {
            args: Prisma.ClinicaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClinicaPayload>
          }
          aggregate: {
            args: Prisma.ClinicaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClinica>
          }
          groupBy: {
            args: Prisma.ClinicaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClinicaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClinicaCountArgs<ExtArgs>
            result: $Utils.Optional<ClinicaCountAggregateOutputType> | number
          }
        }
      }
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Paciente: {
        payload: Prisma.$PacientePayload<ExtArgs>
        fields: Prisma.PacienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PacienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PacientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PacienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PacientePayload>
          }
          findFirst: {
            args: Prisma.PacienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PacientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PacienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PacientePayload>
          }
          findMany: {
            args: Prisma.PacienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PacientePayload>[]
          }
          create: {
            args: Prisma.PacienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PacientePayload>
          }
          createMany: {
            args: Prisma.PacienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PacienteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PacientePayload>[]
          }
          delete: {
            args: Prisma.PacienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PacientePayload>
          }
          update: {
            args: Prisma.PacienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PacientePayload>
          }
          deleteMany: {
            args: Prisma.PacienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PacienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PacienteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PacientePayload>[]
          }
          upsert: {
            args: Prisma.PacienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PacientePayload>
          }
          aggregate: {
            args: Prisma.PacienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaciente>
          }
          groupBy: {
            args: Prisma.PacienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<PacienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.PacienteCountArgs<ExtArgs>
            result: $Utils.Optional<PacienteCountAggregateOutputType> | number
          }
        }
      }
      ProfissionalDaSaude: {
        payload: Prisma.$ProfissionalDaSaudePayload<ExtArgs>
        fields: Prisma.ProfissionalDaSaudeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProfissionalDaSaudeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfissionalDaSaudePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProfissionalDaSaudeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfissionalDaSaudePayload>
          }
          findFirst: {
            args: Prisma.ProfissionalDaSaudeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfissionalDaSaudePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProfissionalDaSaudeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfissionalDaSaudePayload>
          }
          findMany: {
            args: Prisma.ProfissionalDaSaudeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfissionalDaSaudePayload>[]
          }
          create: {
            args: Prisma.ProfissionalDaSaudeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfissionalDaSaudePayload>
          }
          createMany: {
            args: Prisma.ProfissionalDaSaudeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProfissionalDaSaudeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfissionalDaSaudePayload>[]
          }
          delete: {
            args: Prisma.ProfissionalDaSaudeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfissionalDaSaudePayload>
          }
          update: {
            args: Prisma.ProfissionalDaSaudeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfissionalDaSaudePayload>
          }
          deleteMany: {
            args: Prisma.ProfissionalDaSaudeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProfissionalDaSaudeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProfissionalDaSaudeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfissionalDaSaudePayload>[]
          }
          upsert: {
            args: Prisma.ProfissionalDaSaudeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfissionalDaSaudePayload>
          }
          aggregate: {
            args: Prisma.ProfissionalDaSaudeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfissionalDaSaude>
          }
          groupBy: {
            args: Prisma.ProfissionalDaSaudeGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfissionalDaSaudeGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProfissionalDaSaudeCountArgs<ExtArgs>
            result: $Utils.Optional<ProfissionalDaSaudeCountAggregateOutputType> | number
          }
        }
      }
      Consulta: {
        payload: Prisma.$ConsultaPayload<ExtArgs>
        fields: Prisma.ConsultaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConsultaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConsultaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaPayload>
          }
          findFirst: {
            args: Prisma.ConsultaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConsultaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaPayload>
          }
          findMany: {
            args: Prisma.ConsultaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaPayload>[]
          }
          create: {
            args: Prisma.ConsultaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaPayload>
          }
          createMany: {
            args: Prisma.ConsultaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConsultaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaPayload>[]
          }
          delete: {
            args: Prisma.ConsultaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaPayload>
          }
          update: {
            args: Prisma.ConsultaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaPayload>
          }
          deleteMany: {
            args: Prisma.ConsultaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConsultaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ConsultaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaPayload>[]
          }
          upsert: {
            args: Prisma.ConsultaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaPayload>
          }
          aggregate: {
            args: Prisma.ConsultaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConsulta>
          }
          groupBy: {
            args: Prisma.ConsultaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConsultaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConsultaCountArgs<ExtArgs>
            result: $Utils.Optional<ConsultaCountAggregateOutputType> | number
          }
        }
      }
      Avaliacao: {
        payload: Prisma.$AvaliacaoPayload<ExtArgs>
        fields: Prisma.AvaliacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AvaliacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AvaliacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          findFirst: {
            args: Prisma.AvaliacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AvaliacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          findMany: {
            args: Prisma.AvaliacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>[]
          }
          create: {
            args: Prisma.AvaliacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          createMany: {
            args: Prisma.AvaliacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AvaliacaoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>[]
          }
          delete: {
            args: Prisma.AvaliacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          update: {
            args: Prisma.AvaliacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          deleteMany: {
            args: Prisma.AvaliacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AvaliacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AvaliacaoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>[]
          }
          upsert: {
            args: Prisma.AvaliacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvaliacaoPayload>
          }
          aggregate: {
            args: Prisma.AvaliacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAvaliacao>
          }
          groupBy: {
            args: Prisma.AvaliacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<AvaliacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AvaliacaoCountArgs<ExtArgs>
            result: $Utils.Optional<AvaliacaoCountAggregateOutputType> | number
          }
        }
      }
      Procedimento: {
        payload: Prisma.$ProcedimentoPayload<ExtArgs>
        fields: Prisma.ProcedimentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProcedimentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcedimentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProcedimentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcedimentoPayload>
          }
          findFirst: {
            args: Prisma.ProcedimentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcedimentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProcedimentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcedimentoPayload>
          }
          findMany: {
            args: Prisma.ProcedimentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcedimentoPayload>[]
          }
          create: {
            args: Prisma.ProcedimentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcedimentoPayload>
          }
          createMany: {
            args: Prisma.ProcedimentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProcedimentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcedimentoPayload>[]
          }
          delete: {
            args: Prisma.ProcedimentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcedimentoPayload>
          }
          update: {
            args: Prisma.ProcedimentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcedimentoPayload>
          }
          deleteMany: {
            args: Prisma.ProcedimentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProcedimentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProcedimentoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcedimentoPayload>[]
          }
          upsert: {
            args: Prisma.ProcedimentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProcedimentoPayload>
          }
          aggregate: {
            args: Prisma.ProcedimentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProcedimento>
          }
          groupBy: {
            args: Prisma.ProcedimentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProcedimentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProcedimentoCountArgs<ExtArgs>
            result: $Utils.Optional<ProcedimentoCountAggregateOutputType> | number
          }
        }
      }
      ConsultaProcedimento: {
        payload: Prisma.$ConsultaProcedimentoPayload<ExtArgs>
        fields: Prisma.ConsultaProcedimentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConsultaProcedimentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaProcedimentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConsultaProcedimentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaProcedimentoPayload>
          }
          findFirst: {
            args: Prisma.ConsultaProcedimentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaProcedimentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConsultaProcedimentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaProcedimentoPayload>
          }
          findMany: {
            args: Prisma.ConsultaProcedimentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaProcedimentoPayload>[]
          }
          create: {
            args: Prisma.ConsultaProcedimentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaProcedimentoPayload>
          }
          createMany: {
            args: Prisma.ConsultaProcedimentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConsultaProcedimentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaProcedimentoPayload>[]
          }
          delete: {
            args: Prisma.ConsultaProcedimentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaProcedimentoPayload>
          }
          update: {
            args: Prisma.ConsultaProcedimentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaProcedimentoPayload>
          }
          deleteMany: {
            args: Prisma.ConsultaProcedimentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConsultaProcedimentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ConsultaProcedimentoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaProcedimentoPayload>[]
          }
          upsert: {
            args: Prisma.ConsultaProcedimentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultaProcedimentoPayload>
          }
          aggregate: {
            args: Prisma.ConsultaProcedimentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConsultaProcedimento>
          }
          groupBy: {
            args: Prisma.ConsultaProcedimentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConsultaProcedimentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConsultaProcedimentoCountArgs<ExtArgs>
            result: $Utils.Optional<ConsultaProcedimentoCountAggregateOutputType> | number
          }
        }
      }
      Agenda: {
        payload: Prisma.$AgendaPayload<ExtArgs>
        fields: Prisma.AgendaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgendaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgendaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgendaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgendaPayload>
          }
          findFirst: {
            args: Prisma.AgendaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgendaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgendaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgendaPayload>
          }
          findMany: {
            args: Prisma.AgendaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgendaPayload>[]
          }
          create: {
            args: Prisma.AgendaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgendaPayload>
          }
          createMany: {
            args: Prisma.AgendaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgendaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgendaPayload>[]
          }
          delete: {
            args: Prisma.AgendaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgendaPayload>
          }
          update: {
            args: Prisma.AgendaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgendaPayload>
          }
          deleteMany: {
            args: Prisma.AgendaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgendaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AgendaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgendaPayload>[]
          }
          upsert: {
            args: Prisma.AgendaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgendaPayload>
          }
          aggregate: {
            args: Prisma.AgendaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgenda>
          }
          groupBy: {
            args: Prisma.AgendaGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgendaGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgendaCountArgs<ExtArgs>
            result: $Utils.Optional<AgendaCountAggregateOutputType> | number
          }
        }
      }
      ControleOperacional: {
        payload: Prisma.$ControleOperacionalPayload<ExtArgs>
        fields: Prisma.ControleOperacionalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ControleOperacionalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ControleOperacionalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ControleOperacionalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ControleOperacionalPayload>
          }
          findFirst: {
            args: Prisma.ControleOperacionalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ControleOperacionalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ControleOperacionalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ControleOperacionalPayload>
          }
          findMany: {
            args: Prisma.ControleOperacionalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ControleOperacionalPayload>[]
          }
          create: {
            args: Prisma.ControleOperacionalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ControleOperacionalPayload>
          }
          createMany: {
            args: Prisma.ControleOperacionalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ControleOperacionalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ControleOperacionalPayload>[]
          }
          delete: {
            args: Prisma.ControleOperacionalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ControleOperacionalPayload>
          }
          update: {
            args: Prisma.ControleOperacionalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ControleOperacionalPayload>
          }
          deleteMany: {
            args: Prisma.ControleOperacionalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ControleOperacionalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ControleOperacionalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ControleOperacionalPayload>[]
          }
          upsert: {
            args: Prisma.ControleOperacionalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ControleOperacionalPayload>
          }
          aggregate: {
            args: Prisma.ControleOperacionalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateControleOperacional>
          }
          groupBy: {
            args: Prisma.ControleOperacionalGroupByArgs<ExtArgs>
            result: $Utils.Optional<ControleOperacionalGroupByOutputType>[]
          }
          count: {
            args: Prisma.ControleOperacionalCountArgs<ExtArgs>
            result: $Utils.Optional<ControleOperacionalCountAggregateOutputType> | number
          }
        }
      }
      InteracaoRobo: {
        payload: Prisma.$InteracaoRoboPayload<ExtArgs>
        fields: Prisma.InteracaoRoboFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InteracaoRoboFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteracaoRoboPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InteracaoRoboFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteracaoRoboPayload>
          }
          findFirst: {
            args: Prisma.InteracaoRoboFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteracaoRoboPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InteracaoRoboFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteracaoRoboPayload>
          }
          findMany: {
            args: Prisma.InteracaoRoboFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteracaoRoboPayload>[]
          }
          create: {
            args: Prisma.InteracaoRoboCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteracaoRoboPayload>
          }
          createMany: {
            args: Prisma.InteracaoRoboCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InteracaoRoboCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteracaoRoboPayload>[]
          }
          delete: {
            args: Prisma.InteracaoRoboDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteracaoRoboPayload>
          }
          update: {
            args: Prisma.InteracaoRoboUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteracaoRoboPayload>
          }
          deleteMany: {
            args: Prisma.InteracaoRoboDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InteracaoRoboUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InteracaoRoboUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteracaoRoboPayload>[]
          }
          upsert: {
            args: Prisma.InteracaoRoboUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InteracaoRoboPayload>
          }
          aggregate: {
            args: Prisma.InteracaoRoboAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInteracaoRobo>
          }
          groupBy: {
            args: Prisma.InteracaoRoboGroupByArgs<ExtArgs>
            result: $Utils.Optional<InteracaoRoboGroupByOutputType>[]
          }
          count: {
            args: Prisma.InteracaoRoboCountArgs<ExtArgs>
            result: $Utils.Optional<InteracaoRoboCountAggregateOutputType> | number
          }
        }
      }
      Convenio: {
        payload: Prisma.$ConvenioPayload<ExtArgs>
        fields: Prisma.ConvenioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConvenioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConvenioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConvenioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConvenioPayload>
          }
          findFirst: {
            args: Prisma.ConvenioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConvenioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConvenioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConvenioPayload>
          }
          findMany: {
            args: Prisma.ConvenioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConvenioPayload>[]
          }
          create: {
            args: Prisma.ConvenioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConvenioPayload>
          }
          createMany: {
            args: Prisma.ConvenioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConvenioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConvenioPayload>[]
          }
          delete: {
            args: Prisma.ConvenioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConvenioPayload>
          }
          update: {
            args: Prisma.ConvenioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConvenioPayload>
          }
          deleteMany: {
            args: Prisma.ConvenioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConvenioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ConvenioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConvenioPayload>[]
          }
          upsert: {
            args: Prisma.ConvenioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConvenioPayload>
          }
          aggregate: {
            args: Prisma.ConvenioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConvenio>
          }
          groupBy: {
            args: Prisma.ConvenioGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConvenioGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConvenioCountArgs<ExtArgs>
            result: $Utils.Optional<ConvenioCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    clinica?: ClinicaOmit
    usuario?: UsuarioOmit
    paciente?: PacienteOmit
    profissionalDaSaude?: ProfissionalDaSaudeOmit
    consulta?: ConsultaOmit
    avaliacao?: AvaliacaoOmit
    procedimento?: ProcedimentoOmit
    consultaProcedimento?: ConsultaProcedimentoOmit
    agenda?: AgendaOmit
    controleOperacional?: ControleOperacionalOmit
    interacaoRobo?: InteracaoRoboOmit
    convenio?: ConvenioOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ClinicaCountOutputType
   */

  export type ClinicaCountOutputType = {
    usuarios: number
    profissionais: number
    pacientes: number
    consultas: number
    procedimentos: number
    agendas: number
    avaliacoes: number
    controle_operacional: number
    interacao_robo: number
    convenios: number
  }

  export type ClinicaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | ClinicaCountOutputTypeCountUsuariosArgs
    profissionais?: boolean | ClinicaCountOutputTypeCountProfissionaisArgs
    pacientes?: boolean | ClinicaCountOutputTypeCountPacientesArgs
    consultas?: boolean | ClinicaCountOutputTypeCountConsultasArgs
    procedimentos?: boolean | ClinicaCountOutputTypeCountProcedimentosArgs
    agendas?: boolean | ClinicaCountOutputTypeCountAgendasArgs
    avaliacoes?: boolean | ClinicaCountOutputTypeCountAvaliacoesArgs
    controle_operacional?: boolean | ClinicaCountOutputTypeCountControle_operacionalArgs
    interacao_robo?: boolean | ClinicaCountOutputTypeCountInteracao_roboArgs
    convenios?: boolean | ClinicaCountOutputTypeCountConveniosArgs
  }

  // Custom InputTypes
  /**
   * ClinicaCountOutputType without action
   */
  export type ClinicaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClinicaCountOutputType
     */
    select?: ClinicaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClinicaCountOutputType without action
   */
  export type ClinicaCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }

  /**
   * ClinicaCountOutputType without action
   */
  export type ClinicaCountOutputTypeCountProfissionaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfissionalDaSaudeWhereInput
  }

  /**
   * ClinicaCountOutputType without action
   */
  export type ClinicaCountOutputTypeCountPacientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PacienteWhereInput
  }

  /**
   * ClinicaCountOutputType without action
   */
  export type ClinicaCountOutputTypeCountConsultasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConsultaWhereInput
  }

  /**
   * ClinicaCountOutputType without action
   */
  export type ClinicaCountOutputTypeCountProcedimentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProcedimentoWhereInput
  }

  /**
   * ClinicaCountOutputType without action
   */
  export type ClinicaCountOutputTypeCountAgendasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgendaWhereInput
  }

  /**
   * ClinicaCountOutputType without action
   */
  export type ClinicaCountOutputTypeCountAvaliacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliacaoWhereInput
  }

  /**
   * ClinicaCountOutputType without action
   */
  export type ClinicaCountOutputTypeCountControle_operacionalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ControleOperacionalWhereInput
  }

  /**
   * ClinicaCountOutputType without action
   */
  export type ClinicaCountOutputTypeCountInteracao_roboArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InteracaoRoboWhereInput
  }

  /**
   * ClinicaCountOutputType without action
   */
  export type ClinicaCountOutputTypeCountConveniosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConvenioWhereInput
  }


  /**
   * Count Type PacienteCountOutputType
   */

  export type PacienteCountOutputType = {
    consultas: number
    interacao_robo: number
  }

  export type PacienteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultas?: boolean | PacienteCountOutputTypeCountConsultasArgs
    interacao_robo?: boolean | PacienteCountOutputTypeCountInteracao_roboArgs
  }

  // Custom InputTypes
  /**
   * PacienteCountOutputType without action
   */
  export type PacienteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PacienteCountOutputType
     */
    select?: PacienteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PacienteCountOutputType without action
   */
  export type PacienteCountOutputTypeCountConsultasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConsultaWhereInput
  }

  /**
   * PacienteCountOutputType without action
   */
  export type PacienteCountOutputTypeCountInteracao_roboArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InteracaoRoboWhereInput
  }


  /**
   * Count Type ProfissionalDaSaudeCountOutputType
   */

  export type ProfissionalDaSaudeCountOutputType = {
    consultas: number
    agenda: number
  }

  export type ProfissionalDaSaudeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultas?: boolean | ProfissionalDaSaudeCountOutputTypeCountConsultasArgs
    agenda?: boolean | ProfissionalDaSaudeCountOutputTypeCountAgendaArgs
  }

  // Custom InputTypes
  /**
   * ProfissionalDaSaudeCountOutputType without action
   */
  export type ProfissionalDaSaudeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaudeCountOutputType
     */
    select?: ProfissionalDaSaudeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProfissionalDaSaudeCountOutputType without action
   */
  export type ProfissionalDaSaudeCountOutputTypeCountConsultasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConsultaWhereInput
  }

  /**
   * ProfissionalDaSaudeCountOutputType without action
   */
  export type ProfissionalDaSaudeCountOutputTypeCountAgendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgendaWhereInput
  }


  /**
   * Count Type ConsultaCountOutputType
   */

  export type ConsultaCountOutputType = {
    procedimentos: number
    avaliacoes: number
  }

  export type ConsultaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    procedimentos?: boolean | ConsultaCountOutputTypeCountProcedimentosArgs
    avaliacoes?: boolean | ConsultaCountOutputTypeCountAvaliacoesArgs
  }

  // Custom InputTypes
  /**
   * ConsultaCountOutputType without action
   */
  export type ConsultaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaCountOutputType
     */
    select?: ConsultaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ConsultaCountOutputType without action
   */
  export type ConsultaCountOutputTypeCountProcedimentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConsultaProcedimentoWhereInput
  }

  /**
   * ConsultaCountOutputType without action
   */
  export type ConsultaCountOutputTypeCountAvaliacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliacaoWhereInput
  }


  /**
   * Count Type ProcedimentoCountOutputType
   */

  export type ProcedimentoCountOutputType = {
    consultas: number
  }

  export type ProcedimentoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultas?: boolean | ProcedimentoCountOutputTypeCountConsultasArgs
  }

  // Custom InputTypes
  /**
   * ProcedimentoCountOutputType without action
   */
  export type ProcedimentoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProcedimentoCountOutputType
     */
    select?: ProcedimentoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProcedimentoCountOutputType without action
   */
  export type ProcedimentoCountOutputTypeCountConsultasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConsultaProcedimentoWhereInput
  }


  /**
   * Count Type ConvenioCountOutputType
   */

  export type ConvenioCountOutputType = {
    consultas: number
    interacoes_robo: number
  }

  export type ConvenioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultas?: boolean | ConvenioCountOutputTypeCountConsultasArgs
    interacoes_robo?: boolean | ConvenioCountOutputTypeCountInteracoes_roboArgs
  }

  // Custom InputTypes
  /**
   * ConvenioCountOutputType without action
   */
  export type ConvenioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConvenioCountOutputType
     */
    select?: ConvenioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ConvenioCountOutputType without action
   */
  export type ConvenioCountOutputTypeCountConsultasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConsultaWhereInput
  }

  /**
   * ConvenioCountOutputType without action
   */
  export type ConvenioCountOutputTypeCountInteracoes_roboArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InteracaoRoboWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Clinica
   */

  export type AggregateClinica = {
    _count: ClinicaCountAggregateOutputType | null
    _avg: ClinicaAvgAggregateOutputType | null
    _sum: ClinicaSumAggregateOutputType | null
    _min: ClinicaMinAggregateOutputType | null
    _max: ClinicaMaxAggregateOutputType | null
  }

  export type ClinicaAvgAggregateOutputType = {
    id_clinica: number | null
  }

  export type ClinicaSumAggregateOutputType = {
    id_clinica: number | null
  }

  export type ClinicaMinAggregateOutputType = {
    id_clinica: number | null
    nome_clinica: string | null
    telefone: string | null
    email: string | null
    cnpj: string | null
    razao_social: string | null
    cep: string | null
    logradouro: string | null
    numero: string | null
    complemento: string | null
    bairro: string | null
    cidade: string | null
    uf: string | null
    codigo_ibge: string | null
    plano: string | null
    ativo: boolean | null
    criado_em: Date | null
  }

  export type ClinicaMaxAggregateOutputType = {
    id_clinica: number | null
    nome_clinica: string | null
    telefone: string | null
    email: string | null
    cnpj: string | null
    razao_social: string | null
    cep: string | null
    logradouro: string | null
    numero: string | null
    complemento: string | null
    bairro: string | null
    cidade: string | null
    uf: string | null
    codigo_ibge: string | null
    plano: string | null
    ativo: boolean | null
    criado_em: Date | null
  }

  export type ClinicaCountAggregateOutputType = {
    id_clinica: number
    nome_clinica: number
    telefone: number
    email: number
    cnpj: number
    razao_social: number
    cep: number
    logradouro: number
    numero: number
    complemento: number
    bairro: number
    cidade: number
    uf: number
    codigo_ibge: number
    plano: number
    ativo: number
    criado_em: number
    _all: number
  }


  export type ClinicaAvgAggregateInputType = {
    id_clinica?: true
  }

  export type ClinicaSumAggregateInputType = {
    id_clinica?: true
  }

  export type ClinicaMinAggregateInputType = {
    id_clinica?: true
    nome_clinica?: true
    telefone?: true
    email?: true
    cnpj?: true
    razao_social?: true
    cep?: true
    logradouro?: true
    numero?: true
    complemento?: true
    bairro?: true
    cidade?: true
    uf?: true
    codigo_ibge?: true
    plano?: true
    ativo?: true
    criado_em?: true
  }

  export type ClinicaMaxAggregateInputType = {
    id_clinica?: true
    nome_clinica?: true
    telefone?: true
    email?: true
    cnpj?: true
    razao_social?: true
    cep?: true
    logradouro?: true
    numero?: true
    complemento?: true
    bairro?: true
    cidade?: true
    uf?: true
    codigo_ibge?: true
    plano?: true
    ativo?: true
    criado_em?: true
  }

  export type ClinicaCountAggregateInputType = {
    id_clinica?: true
    nome_clinica?: true
    telefone?: true
    email?: true
    cnpj?: true
    razao_social?: true
    cep?: true
    logradouro?: true
    numero?: true
    complemento?: true
    bairro?: true
    cidade?: true
    uf?: true
    codigo_ibge?: true
    plano?: true
    ativo?: true
    criado_em?: true
    _all?: true
  }

  export type ClinicaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clinica to aggregate.
     */
    where?: ClinicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clinicas to fetch.
     */
    orderBy?: ClinicaOrderByWithRelationInput | ClinicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClinicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clinicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clinicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clinicas
    **/
    _count?: true | ClinicaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClinicaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClinicaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClinicaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClinicaMaxAggregateInputType
  }

  export type GetClinicaAggregateType<T extends ClinicaAggregateArgs> = {
        [P in keyof T & keyof AggregateClinica]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClinica[P]>
      : GetScalarType<T[P], AggregateClinica[P]>
  }




  export type ClinicaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClinicaWhereInput
    orderBy?: ClinicaOrderByWithAggregationInput | ClinicaOrderByWithAggregationInput[]
    by: ClinicaScalarFieldEnum[] | ClinicaScalarFieldEnum
    having?: ClinicaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClinicaCountAggregateInputType | true
    _avg?: ClinicaAvgAggregateInputType
    _sum?: ClinicaSumAggregateInputType
    _min?: ClinicaMinAggregateInputType
    _max?: ClinicaMaxAggregateInputType
  }

  export type ClinicaGroupByOutputType = {
    id_clinica: number
    nome_clinica: string
    telefone: string | null
    email: string | null
    cnpj: string | null
    razao_social: string | null
    cep: string | null
    logradouro: string | null
    numero: string | null
    complemento: string | null
    bairro: string | null
    cidade: string | null
    uf: string | null
    codigo_ibge: string | null
    plano: string
    ativo: boolean
    criado_em: Date
    _count: ClinicaCountAggregateOutputType | null
    _avg: ClinicaAvgAggregateOutputType | null
    _sum: ClinicaSumAggregateOutputType | null
    _min: ClinicaMinAggregateOutputType | null
    _max: ClinicaMaxAggregateOutputType | null
  }

  type GetClinicaGroupByPayload<T extends ClinicaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClinicaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClinicaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClinicaGroupByOutputType[P]>
            : GetScalarType<T[P], ClinicaGroupByOutputType[P]>
        }
      >
    >


  export type ClinicaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_clinica?: boolean
    nome_clinica?: boolean
    telefone?: boolean
    email?: boolean
    cnpj?: boolean
    razao_social?: boolean
    cep?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    uf?: boolean
    codigo_ibge?: boolean
    plano?: boolean
    ativo?: boolean
    criado_em?: boolean
    usuarios?: boolean | Clinica$usuariosArgs<ExtArgs>
    profissionais?: boolean | Clinica$profissionaisArgs<ExtArgs>
    pacientes?: boolean | Clinica$pacientesArgs<ExtArgs>
    consultas?: boolean | Clinica$consultasArgs<ExtArgs>
    procedimentos?: boolean | Clinica$procedimentosArgs<ExtArgs>
    agendas?: boolean | Clinica$agendasArgs<ExtArgs>
    avaliacoes?: boolean | Clinica$avaliacoesArgs<ExtArgs>
    controle_operacional?: boolean | Clinica$controle_operacionalArgs<ExtArgs>
    interacao_robo?: boolean | Clinica$interacao_roboArgs<ExtArgs>
    convenios?: boolean | Clinica$conveniosArgs<ExtArgs>
    _count?: boolean | ClinicaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clinica"]>

  export type ClinicaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_clinica?: boolean
    nome_clinica?: boolean
    telefone?: boolean
    email?: boolean
    cnpj?: boolean
    razao_social?: boolean
    cep?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    uf?: boolean
    codigo_ibge?: boolean
    plano?: boolean
    ativo?: boolean
    criado_em?: boolean
  }, ExtArgs["result"]["clinica"]>

  export type ClinicaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_clinica?: boolean
    nome_clinica?: boolean
    telefone?: boolean
    email?: boolean
    cnpj?: boolean
    razao_social?: boolean
    cep?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    uf?: boolean
    codigo_ibge?: boolean
    plano?: boolean
    ativo?: boolean
    criado_em?: boolean
  }, ExtArgs["result"]["clinica"]>

  export type ClinicaSelectScalar = {
    id_clinica?: boolean
    nome_clinica?: boolean
    telefone?: boolean
    email?: boolean
    cnpj?: boolean
    razao_social?: boolean
    cep?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    uf?: boolean
    codigo_ibge?: boolean
    plano?: boolean
    ativo?: boolean
    criado_em?: boolean
  }

  export type ClinicaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_clinica" | "nome_clinica" | "telefone" | "email" | "cnpj" | "razao_social" | "cep" | "logradouro" | "numero" | "complemento" | "bairro" | "cidade" | "uf" | "codigo_ibge" | "plano" | "ativo" | "criado_em", ExtArgs["result"]["clinica"]>
  export type ClinicaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Clinica$usuariosArgs<ExtArgs>
    profissionais?: boolean | Clinica$profissionaisArgs<ExtArgs>
    pacientes?: boolean | Clinica$pacientesArgs<ExtArgs>
    consultas?: boolean | Clinica$consultasArgs<ExtArgs>
    procedimentos?: boolean | Clinica$procedimentosArgs<ExtArgs>
    agendas?: boolean | Clinica$agendasArgs<ExtArgs>
    avaliacoes?: boolean | Clinica$avaliacoesArgs<ExtArgs>
    controle_operacional?: boolean | Clinica$controle_operacionalArgs<ExtArgs>
    interacao_robo?: boolean | Clinica$interacao_roboArgs<ExtArgs>
    convenios?: boolean | Clinica$conveniosArgs<ExtArgs>
    _count?: boolean | ClinicaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClinicaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ClinicaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ClinicaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Clinica"
    objects: {
      usuarios: Prisma.$UsuarioPayload<ExtArgs>[]
      profissionais: Prisma.$ProfissionalDaSaudePayload<ExtArgs>[]
      pacientes: Prisma.$PacientePayload<ExtArgs>[]
      consultas: Prisma.$ConsultaPayload<ExtArgs>[]
      procedimentos: Prisma.$ProcedimentoPayload<ExtArgs>[]
      agendas: Prisma.$AgendaPayload<ExtArgs>[]
      avaliacoes: Prisma.$AvaliacaoPayload<ExtArgs>[]
      controle_operacional: Prisma.$ControleOperacionalPayload<ExtArgs>[]
      interacao_robo: Prisma.$InteracaoRoboPayload<ExtArgs>[]
      convenios: Prisma.$ConvenioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_clinica: number
      nome_clinica: string
      telefone: string | null
      email: string | null
      cnpj: string | null
      razao_social: string | null
      cep: string | null
      logradouro: string | null
      numero: string | null
      complemento: string | null
      bairro: string | null
      cidade: string | null
      uf: string | null
      codigo_ibge: string | null
      plano: string
      ativo: boolean
      criado_em: Date
    }, ExtArgs["result"]["clinica"]>
    composites: {}
  }

  type ClinicaGetPayload<S extends boolean | null | undefined | ClinicaDefaultArgs> = $Result.GetResult<Prisma.$ClinicaPayload, S>

  type ClinicaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClinicaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClinicaCountAggregateInputType | true
    }

  export interface ClinicaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Clinica'], meta: { name: 'Clinica' } }
    /**
     * Find zero or one Clinica that matches the filter.
     * @param {ClinicaFindUniqueArgs} args - Arguments to find a Clinica
     * @example
     * // Get one Clinica
     * const clinica = await prisma.clinica.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClinicaFindUniqueArgs>(args: SelectSubset<T, ClinicaFindUniqueArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Clinica that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClinicaFindUniqueOrThrowArgs} args - Arguments to find a Clinica
     * @example
     * // Get one Clinica
     * const clinica = await prisma.clinica.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClinicaFindUniqueOrThrowArgs>(args: SelectSubset<T, ClinicaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Clinica that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClinicaFindFirstArgs} args - Arguments to find a Clinica
     * @example
     * // Get one Clinica
     * const clinica = await prisma.clinica.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClinicaFindFirstArgs>(args?: SelectSubset<T, ClinicaFindFirstArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Clinica that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClinicaFindFirstOrThrowArgs} args - Arguments to find a Clinica
     * @example
     * // Get one Clinica
     * const clinica = await prisma.clinica.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClinicaFindFirstOrThrowArgs>(args?: SelectSubset<T, ClinicaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clinicas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClinicaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clinicas
     * const clinicas = await prisma.clinica.findMany()
     * 
     * // Get first 10 Clinicas
     * const clinicas = await prisma.clinica.findMany({ take: 10 })
     * 
     * // Only select the `id_clinica`
     * const clinicaWithId_clinicaOnly = await prisma.clinica.findMany({ select: { id_clinica: true } })
     * 
     */
    findMany<T extends ClinicaFindManyArgs>(args?: SelectSubset<T, ClinicaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Clinica.
     * @param {ClinicaCreateArgs} args - Arguments to create a Clinica.
     * @example
     * // Create one Clinica
     * const Clinica = await prisma.clinica.create({
     *   data: {
     *     // ... data to create a Clinica
     *   }
     * })
     * 
     */
    create<T extends ClinicaCreateArgs>(args: SelectSubset<T, ClinicaCreateArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clinicas.
     * @param {ClinicaCreateManyArgs} args - Arguments to create many Clinicas.
     * @example
     * // Create many Clinicas
     * const clinica = await prisma.clinica.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClinicaCreateManyArgs>(args?: SelectSubset<T, ClinicaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clinicas and returns the data saved in the database.
     * @param {ClinicaCreateManyAndReturnArgs} args - Arguments to create many Clinicas.
     * @example
     * // Create many Clinicas
     * const clinica = await prisma.clinica.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clinicas and only return the `id_clinica`
     * const clinicaWithId_clinicaOnly = await prisma.clinica.createManyAndReturn({
     *   select: { id_clinica: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClinicaCreateManyAndReturnArgs>(args?: SelectSubset<T, ClinicaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Clinica.
     * @param {ClinicaDeleteArgs} args - Arguments to delete one Clinica.
     * @example
     * // Delete one Clinica
     * const Clinica = await prisma.clinica.delete({
     *   where: {
     *     // ... filter to delete one Clinica
     *   }
     * })
     * 
     */
    delete<T extends ClinicaDeleteArgs>(args: SelectSubset<T, ClinicaDeleteArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Clinica.
     * @param {ClinicaUpdateArgs} args - Arguments to update one Clinica.
     * @example
     * // Update one Clinica
     * const clinica = await prisma.clinica.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClinicaUpdateArgs>(args: SelectSubset<T, ClinicaUpdateArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clinicas.
     * @param {ClinicaDeleteManyArgs} args - Arguments to filter Clinicas to delete.
     * @example
     * // Delete a few Clinicas
     * const { count } = await prisma.clinica.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClinicaDeleteManyArgs>(args?: SelectSubset<T, ClinicaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clinicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClinicaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clinicas
     * const clinica = await prisma.clinica.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClinicaUpdateManyArgs>(args: SelectSubset<T, ClinicaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clinicas and returns the data updated in the database.
     * @param {ClinicaUpdateManyAndReturnArgs} args - Arguments to update many Clinicas.
     * @example
     * // Update many Clinicas
     * const clinica = await prisma.clinica.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clinicas and only return the `id_clinica`
     * const clinicaWithId_clinicaOnly = await prisma.clinica.updateManyAndReturn({
     *   select: { id_clinica: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClinicaUpdateManyAndReturnArgs>(args: SelectSubset<T, ClinicaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Clinica.
     * @param {ClinicaUpsertArgs} args - Arguments to update or create a Clinica.
     * @example
     * // Update or create a Clinica
     * const clinica = await prisma.clinica.upsert({
     *   create: {
     *     // ... data to create a Clinica
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Clinica we want to update
     *   }
     * })
     */
    upsert<T extends ClinicaUpsertArgs>(args: SelectSubset<T, ClinicaUpsertArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clinicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClinicaCountArgs} args - Arguments to filter Clinicas to count.
     * @example
     * // Count the number of Clinicas
     * const count = await prisma.clinica.count({
     *   where: {
     *     // ... the filter for the Clinicas we want to count
     *   }
     * })
    **/
    count<T extends ClinicaCountArgs>(
      args?: Subset<T, ClinicaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClinicaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Clinica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClinicaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClinicaAggregateArgs>(args: Subset<T, ClinicaAggregateArgs>): Prisma.PrismaPromise<GetClinicaAggregateType<T>>

    /**
     * Group by Clinica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClinicaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClinicaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClinicaGroupByArgs['orderBy'] }
        : { orderBy?: ClinicaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClinicaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClinicaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Clinica model
   */
  readonly fields: ClinicaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Clinica.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClinicaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends Clinica$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Clinica$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    profissionais<T extends Clinica$profissionaisArgs<ExtArgs> = {}>(args?: Subset<T, Clinica$profissionaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pacientes<T extends Clinica$pacientesArgs<ExtArgs> = {}>(args?: Subset<T, Clinica$pacientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    consultas<T extends Clinica$consultasArgs<ExtArgs> = {}>(args?: Subset<T, Clinica$consultasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    procedimentos<T extends Clinica$procedimentosArgs<ExtArgs> = {}>(args?: Subset<T, Clinica$procedimentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProcedimentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    agendas<T extends Clinica$agendasArgs<ExtArgs> = {}>(args?: Subset<T, Clinica$agendasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    avaliacoes<T extends Clinica$avaliacoesArgs<ExtArgs> = {}>(args?: Subset<T, Clinica$avaliacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    controle_operacional<T extends Clinica$controle_operacionalArgs<ExtArgs> = {}>(args?: Subset<T, Clinica$controle_operacionalArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ControleOperacionalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    interacao_robo<T extends Clinica$interacao_roboArgs<ExtArgs> = {}>(args?: Subset<T, Clinica$interacao_roboArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    convenios<T extends Clinica$conveniosArgs<ExtArgs> = {}>(args?: Subset<T, Clinica$conveniosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Clinica model
   */
  interface ClinicaFieldRefs {
    readonly id_clinica: FieldRef<"Clinica", 'Int'>
    readonly nome_clinica: FieldRef<"Clinica", 'String'>
    readonly telefone: FieldRef<"Clinica", 'String'>
    readonly email: FieldRef<"Clinica", 'String'>
    readonly cnpj: FieldRef<"Clinica", 'String'>
    readonly razao_social: FieldRef<"Clinica", 'String'>
    readonly cep: FieldRef<"Clinica", 'String'>
    readonly logradouro: FieldRef<"Clinica", 'String'>
    readonly numero: FieldRef<"Clinica", 'String'>
    readonly complemento: FieldRef<"Clinica", 'String'>
    readonly bairro: FieldRef<"Clinica", 'String'>
    readonly cidade: FieldRef<"Clinica", 'String'>
    readonly uf: FieldRef<"Clinica", 'String'>
    readonly codigo_ibge: FieldRef<"Clinica", 'String'>
    readonly plano: FieldRef<"Clinica", 'String'>
    readonly ativo: FieldRef<"Clinica", 'Boolean'>
    readonly criado_em: FieldRef<"Clinica", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Clinica findUnique
   */
  export type ClinicaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clinica
     */
    select?: ClinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clinica
     */
    omit?: ClinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClinicaInclude<ExtArgs> | null
    /**
     * Filter, which Clinica to fetch.
     */
    where: ClinicaWhereUniqueInput
  }

  /**
   * Clinica findUniqueOrThrow
   */
  export type ClinicaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clinica
     */
    select?: ClinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clinica
     */
    omit?: ClinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClinicaInclude<ExtArgs> | null
    /**
     * Filter, which Clinica to fetch.
     */
    where: ClinicaWhereUniqueInput
  }

  /**
   * Clinica findFirst
   */
  export type ClinicaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clinica
     */
    select?: ClinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clinica
     */
    omit?: ClinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClinicaInclude<ExtArgs> | null
    /**
     * Filter, which Clinica to fetch.
     */
    where?: ClinicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clinicas to fetch.
     */
    orderBy?: ClinicaOrderByWithRelationInput | ClinicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clinicas.
     */
    cursor?: ClinicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clinicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clinicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clinicas.
     */
    distinct?: ClinicaScalarFieldEnum | ClinicaScalarFieldEnum[]
  }

  /**
   * Clinica findFirstOrThrow
   */
  export type ClinicaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clinica
     */
    select?: ClinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clinica
     */
    omit?: ClinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClinicaInclude<ExtArgs> | null
    /**
     * Filter, which Clinica to fetch.
     */
    where?: ClinicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clinicas to fetch.
     */
    orderBy?: ClinicaOrderByWithRelationInput | ClinicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clinicas.
     */
    cursor?: ClinicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clinicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clinicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clinicas.
     */
    distinct?: ClinicaScalarFieldEnum | ClinicaScalarFieldEnum[]
  }

  /**
   * Clinica findMany
   */
  export type ClinicaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clinica
     */
    select?: ClinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clinica
     */
    omit?: ClinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClinicaInclude<ExtArgs> | null
    /**
     * Filter, which Clinicas to fetch.
     */
    where?: ClinicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clinicas to fetch.
     */
    orderBy?: ClinicaOrderByWithRelationInput | ClinicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clinicas.
     */
    cursor?: ClinicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clinicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clinicas.
     */
    skip?: number
    distinct?: ClinicaScalarFieldEnum | ClinicaScalarFieldEnum[]
  }

  /**
   * Clinica create
   */
  export type ClinicaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clinica
     */
    select?: ClinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clinica
     */
    omit?: ClinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClinicaInclude<ExtArgs> | null
    /**
     * The data needed to create a Clinica.
     */
    data: XOR<ClinicaCreateInput, ClinicaUncheckedCreateInput>
  }

  /**
   * Clinica createMany
   */
  export type ClinicaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clinicas.
     */
    data: ClinicaCreateManyInput | ClinicaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Clinica createManyAndReturn
   */
  export type ClinicaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clinica
     */
    select?: ClinicaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Clinica
     */
    omit?: ClinicaOmit<ExtArgs> | null
    /**
     * The data used to create many Clinicas.
     */
    data: ClinicaCreateManyInput | ClinicaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Clinica update
   */
  export type ClinicaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clinica
     */
    select?: ClinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clinica
     */
    omit?: ClinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClinicaInclude<ExtArgs> | null
    /**
     * The data needed to update a Clinica.
     */
    data: XOR<ClinicaUpdateInput, ClinicaUncheckedUpdateInput>
    /**
     * Choose, which Clinica to update.
     */
    where: ClinicaWhereUniqueInput
  }

  /**
   * Clinica updateMany
   */
  export type ClinicaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clinicas.
     */
    data: XOR<ClinicaUpdateManyMutationInput, ClinicaUncheckedUpdateManyInput>
    /**
     * Filter which Clinicas to update
     */
    where?: ClinicaWhereInput
    /**
     * Limit how many Clinicas to update.
     */
    limit?: number
  }

  /**
   * Clinica updateManyAndReturn
   */
  export type ClinicaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clinica
     */
    select?: ClinicaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Clinica
     */
    omit?: ClinicaOmit<ExtArgs> | null
    /**
     * The data used to update Clinicas.
     */
    data: XOR<ClinicaUpdateManyMutationInput, ClinicaUncheckedUpdateManyInput>
    /**
     * Filter which Clinicas to update
     */
    where?: ClinicaWhereInput
    /**
     * Limit how many Clinicas to update.
     */
    limit?: number
  }

  /**
   * Clinica upsert
   */
  export type ClinicaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clinica
     */
    select?: ClinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clinica
     */
    omit?: ClinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClinicaInclude<ExtArgs> | null
    /**
     * The filter to search for the Clinica to update in case it exists.
     */
    where: ClinicaWhereUniqueInput
    /**
     * In case the Clinica found by the `where` argument doesn't exist, create a new Clinica with this data.
     */
    create: XOR<ClinicaCreateInput, ClinicaUncheckedCreateInput>
    /**
     * In case the Clinica was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClinicaUpdateInput, ClinicaUncheckedUpdateInput>
  }

  /**
   * Clinica delete
   */
  export type ClinicaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clinica
     */
    select?: ClinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clinica
     */
    omit?: ClinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClinicaInclude<ExtArgs> | null
    /**
     * Filter which Clinica to delete.
     */
    where: ClinicaWhereUniqueInput
  }

  /**
   * Clinica deleteMany
   */
  export type ClinicaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clinicas to delete
     */
    where?: ClinicaWhereInput
    /**
     * Limit how many Clinicas to delete.
     */
    limit?: number
  }

  /**
   * Clinica.usuarios
   */
  export type Clinica$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Clinica.profissionais
   */
  export type Clinica$profissionaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeInclude<ExtArgs> | null
    where?: ProfissionalDaSaudeWhereInput
    orderBy?: ProfissionalDaSaudeOrderByWithRelationInput | ProfissionalDaSaudeOrderByWithRelationInput[]
    cursor?: ProfissionalDaSaudeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProfissionalDaSaudeScalarFieldEnum | ProfissionalDaSaudeScalarFieldEnum[]
  }

  /**
   * Clinica.pacientes
   */
  export type Clinica$pacientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paciente
     */
    select?: PacienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Paciente
     */
    omit?: PacienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PacienteInclude<ExtArgs> | null
    where?: PacienteWhereInput
    orderBy?: PacienteOrderByWithRelationInput | PacienteOrderByWithRelationInput[]
    cursor?: PacienteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PacienteScalarFieldEnum | PacienteScalarFieldEnum[]
  }

  /**
   * Clinica.consultas
   */
  export type Clinica$consultasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
    where?: ConsultaWhereInput
    orderBy?: ConsultaOrderByWithRelationInput | ConsultaOrderByWithRelationInput[]
    cursor?: ConsultaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConsultaScalarFieldEnum | ConsultaScalarFieldEnum[]
  }

  /**
   * Clinica.procedimentos
   */
  export type Clinica$procedimentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Procedimento
     */
    select?: ProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Procedimento
     */
    omit?: ProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcedimentoInclude<ExtArgs> | null
    where?: ProcedimentoWhereInput
    orderBy?: ProcedimentoOrderByWithRelationInput | ProcedimentoOrderByWithRelationInput[]
    cursor?: ProcedimentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProcedimentoScalarFieldEnum | ProcedimentoScalarFieldEnum[]
  }

  /**
   * Clinica.agendas
   */
  export type Clinica$agendasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaInclude<ExtArgs> | null
    where?: AgendaWhereInput
    orderBy?: AgendaOrderByWithRelationInput | AgendaOrderByWithRelationInput[]
    cursor?: AgendaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgendaScalarFieldEnum | AgendaScalarFieldEnum[]
  }

  /**
   * Clinica.avaliacoes
   */
  export type Clinica$avaliacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    where?: AvaliacaoWhereInput
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    cursor?: AvaliacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Clinica.controle_operacional
   */
  export type Clinica$controle_operacionalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ControleOperacional
     */
    select?: ControleOperacionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ControleOperacional
     */
    omit?: ControleOperacionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ControleOperacionalInclude<ExtArgs> | null
    where?: ControleOperacionalWhereInput
    orderBy?: ControleOperacionalOrderByWithRelationInput | ControleOperacionalOrderByWithRelationInput[]
    cursor?: ControleOperacionalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ControleOperacionalScalarFieldEnum | ControleOperacionalScalarFieldEnum[]
  }

  /**
   * Clinica.interacao_robo
   */
  export type Clinica$interacao_roboArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboInclude<ExtArgs> | null
    where?: InteracaoRoboWhereInput
    orderBy?: InteracaoRoboOrderByWithRelationInput | InteracaoRoboOrderByWithRelationInput[]
    cursor?: InteracaoRoboWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InteracaoRoboScalarFieldEnum | InteracaoRoboScalarFieldEnum[]
  }

  /**
   * Clinica.convenios
   */
  export type Clinica$conveniosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioInclude<ExtArgs> | null
    where?: ConvenioWhereInput
    orderBy?: ConvenioOrderByWithRelationInput | ConvenioOrderByWithRelationInput[]
    cursor?: ConvenioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConvenioScalarFieldEnum | ConvenioScalarFieldEnum[]
  }

  /**
   * Clinica without action
   */
  export type ClinicaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clinica
     */
    select?: ClinicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Clinica
     */
    omit?: ClinicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClinicaInclude<ExtArgs> | null
  }


  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id_usuario: number | null
    id_clinica: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id_usuario: number | null
    id_clinica: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id_usuario: number | null
    nome: string | null
    email: string | null
    senha: string | null
    tipo: string | null
    ativo: boolean | null
    criado_em: Date | null
    id_clinica: number | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id_usuario: number | null
    nome: string | null
    email: string | null
    senha: string | null
    tipo: string | null
    ativo: boolean | null
    criado_em: Date | null
    id_clinica: number | null
  }

  export type UsuarioCountAggregateOutputType = {
    id_usuario: number
    nome: number
    email: number
    senha: number
    tipo: number
    ativo: number
    criado_em: number
    id_clinica: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id_usuario?: true
    id_clinica?: true
  }

  export type UsuarioSumAggregateInputType = {
    id_usuario?: true
    id_clinica?: true
  }

  export type UsuarioMinAggregateInputType = {
    id_usuario?: true
    nome?: true
    email?: true
    senha?: true
    tipo?: true
    ativo?: true
    criado_em?: true
    id_clinica?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id_usuario?: true
    nome?: true
    email?: true
    senha?: true
    tipo?: true
    ativo?: true
    criado_em?: true
    id_clinica?: true
  }

  export type UsuarioCountAggregateInputType = {
    id_usuario?: true
    nome?: true
    email?: true
    senha?: true
    tipo?: true
    ativo?: true
    criado_em?: true
    id_clinica?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id_usuario: number
    nome: string
    email: string
    senha: string
    tipo: string
    ativo: boolean
    criado_em: Date
    id_clinica: number
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    tipo?: boolean
    ativo?: boolean
    criado_em?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    profissional?: boolean | Usuario$profissionalArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    tipo?: boolean
    ativo?: boolean
    criado_em?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    tipo?: boolean
    ativo?: boolean
    criado_em?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id_usuario?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    tipo?: boolean
    ativo?: boolean
    criado_em?: boolean
    id_clinica?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_usuario" | "nome" | "email" | "senha" | "tipo" | "ativo" | "criado_em" | "id_clinica", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    profissional?: boolean | Usuario$profissionalArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      clinica: Prisma.$ClinicaPayload<ExtArgs>
      profissional: Prisma.$ProfissionalDaSaudePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: number
      nome: string
      email: string
      senha: string
      tipo: string
      ativo: boolean
      criado_em: Date
      id_clinica: number
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.findMany({ select: { id_usuario: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id_usuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id_usuario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clinica<T extends ClinicaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClinicaDefaultArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    profissional<T extends Usuario$profissionalArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$profissionalArgs<ExtArgs>>): Prisma__ProfissionalDaSaudeClient<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly id_usuario: FieldRef<"Usuario", 'Int'>
    readonly nome: FieldRef<"Usuario", 'String'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly senha: FieldRef<"Usuario", 'String'>
    readonly tipo: FieldRef<"Usuario", 'String'>
    readonly ativo: FieldRef<"Usuario", 'Boolean'>
    readonly criado_em: FieldRef<"Usuario", 'DateTime'>
    readonly id_clinica: FieldRef<"Usuario", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.profissional
   */
  export type Usuario$profissionalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeInclude<ExtArgs> | null
    where?: ProfissionalDaSaudeWhereInput
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Paciente
   */

  export type AggregatePaciente = {
    _count: PacienteCountAggregateOutputType | null
    _avg: PacienteAvgAggregateOutputType | null
    _sum: PacienteSumAggregateOutputType | null
    _min: PacienteMinAggregateOutputType | null
    _max: PacienteMaxAggregateOutputType | null
  }

  export type PacienteAvgAggregateOutputType = {
    id_paciente: number | null
    id_clinica: number | null
  }

  export type PacienteSumAggregateOutputType = {
    id_paciente: number | null
    id_clinica: number | null
  }

  export type PacienteMinAggregateOutputType = {
    id_paciente: number | null
    cpf: string | null
    nome: string | null
    data_nascimento: Date | null
    email: string | null
    telefone: string | null
    codigo_ibge: string | null
    cep: string | null
    logradouro: string | null
    numero: string | null
    complemento: string | null
    bairro: string | null
    cidade: string | null
    uf: string | null
    senha: string | null
    ativo: boolean | null
    id_clinica: number | null
  }

  export type PacienteMaxAggregateOutputType = {
    id_paciente: number | null
    cpf: string | null
    nome: string | null
    data_nascimento: Date | null
    email: string | null
    telefone: string | null
    codigo_ibge: string | null
    cep: string | null
    logradouro: string | null
    numero: string | null
    complemento: string | null
    bairro: string | null
    cidade: string | null
    uf: string | null
    senha: string | null
    ativo: boolean | null
    id_clinica: number | null
  }

  export type PacienteCountAggregateOutputType = {
    id_paciente: number
    cpf: number
    nome: number
    data_nascimento: number
    email: number
    telefone: number
    codigo_ibge: number
    cep: number
    logradouro: number
    numero: number
    complemento: number
    bairro: number
    cidade: number
    uf: number
    senha: number
    ativo: number
    id_clinica: number
    _all: number
  }


  export type PacienteAvgAggregateInputType = {
    id_paciente?: true
    id_clinica?: true
  }

  export type PacienteSumAggregateInputType = {
    id_paciente?: true
    id_clinica?: true
  }

  export type PacienteMinAggregateInputType = {
    id_paciente?: true
    cpf?: true
    nome?: true
    data_nascimento?: true
    email?: true
    telefone?: true
    codigo_ibge?: true
    cep?: true
    logradouro?: true
    numero?: true
    complemento?: true
    bairro?: true
    cidade?: true
    uf?: true
    senha?: true
    ativo?: true
    id_clinica?: true
  }

  export type PacienteMaxAggregateInputType = {
    id_paciente?: true
    cpf?: true
    nome?: true
    data_nascimento?: true
    email?: true
    telefone?: true
    codigo_ibge?: true
    cep?: true
    logradouro?: true
    numero?: true
    complemento?: true
    bairro?: true
    cidade?: true
    uf?: true
    senha?: true
    ativo?: true
    id_clinica?: true
  }

  export type PacienteCountAggregateInputType = {
    id_paciente?: true
    cpf?: true
    nome?: true
    data_nascimento?: true
    email?: true
    telefone?: true
    codigo_ibge?: true
    cep?: true
    logradouro?: true
    numero?: true
    complemento?: true
    bairro?: true
    cidade?: true
    uf?: true
    senha?: true
    ativo?: true
    id_clinica?: true
    _all?: true
  }

  export type PacienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Paciente to aggregate.
     */
    where?: PacienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pacientes to fetch.
     */
    orderBy?: PacienteOrderByWithRelationInput | PacienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PacienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pacientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pacientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pacientes
    **/
    _count?: true | PacienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PacienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PacienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PacienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PacienteMaxAggregateInputType
  }

  export type GetPacienteAggregateType<T extends PacienteAggregateArgs> = {
        [P in keyof T & keyof AggregatePaciente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaciente[P]>
      : GetScalarType<T[P], AggregatePaciente[P]>
  }




  export type PacienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PacienteWhereInput
    orderBy?: PacienteOrderByWithAggregationInput | PacienteOrderByWithAggregationInput[]
    by: PacienteScalarFieldEnum[] | PacienteScalarFieldEnum
    having?: PacienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PacienteCountAggregateInputType | true
    _avg?: PacienteAvgAggregateInputType
    _sum?: PacienteSumAggregateInputType
    _min?: PacienteMinAggregateInputType
    _max?: PacienteMaxAggregateInputType
  }

  export type PacienteGroupByOutputType = {
    id_paciente: number
    cpf: string
    nome: string
    data_nascimento: Date
    email: string
    telefone: string
    codigo_ibge: string | null
    cep: string | null
    logradouro: string | null
    numero: string | null
    complemento: string | null
    bairro: string | null
    cidade: string | null
    uf: string | null
    senha: string | null
    ativo: boolean
    id_clinica: number
    _count: PacienteCountAggregateOutputType | null
    _avg: PacienteAvgAggregateOutputType | null
    _sum: PacienteSumAggregateOutputType | null
    _min: PacienteMinAggregateOutputType | null
    _max: PacienteMaxAggregateOutputType | null
  }

  type GetPacienteGroupByPayload<T extends PacienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PacienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PacienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PacienteGroupByOutputType[P]>
            : GetScalarType<T[P], PacienteGroupByOutputType[P]>
        }
      >
    >


  export type PacienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_paciente?: boolean
    cpf?: boolean
    nome?: boolean
    data_nascimento?: boolean
    email?: boolean
    telefone?: boolean
    codigo_ibge?: boolean
    cep?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    uf?: boolean
    senha?: boolean
    ativo?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    consultas?: boolean | Paciente$consultasArgs<ExtArgs>
    interacao_robo?: boolean | Paciente$interacao_roboArgs<ExtArgs>
    _count?: boolean | PacienteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paciente"]>

  export type PacienteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_paciente?: boolean
    cpf?: boolean
    nome?: boolean
    data_nascimento?: boolean
    email?: boolean
    telefone?: boolean
    codigo_ibge?: boolean
    cep?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    uf?: boolean
    senha?: boolean
    ativo?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paciente"]>

  export type PacienteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_paciente?: boolean
    cpf?: boolean
    nome?: boolean
    data_nascimento?: boolean
    email?: boolean
    telefone?: boolean
    codigo_ibge?: boolean
    cep?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    uf?: boolean
    senha?: boolean
    ativo?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paciente"]>

  export type PacienteSelectScalar = {
    id_paciente?: boolean
    cpf?: boolean
    nome?: boolean
    data_nascimento?: boolean
    email?: boolean
    telefone?: boolean
    codigo_ibge?: boolean
    cep?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cidade?: boolean
    uf?: boolean
    senha?: boolean
    ativo?: boolean
    id_clinica?: boolean
  }

  export type PacienteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_paciente" | "cpf" | "nome" | "data_nascimento" | "email" | "telefone" | "codigo_ibge" | "cep" | "logradouro" | "numero" | "complemento" | "bairro" | "cidade" | "uf" | "senha" | "ativo" | "id_clinica", ExtArgs["result"]["paciente"]>
  export type PacienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    consultas?: boolean | Paciente$consultasArgs<ExtArgs>
    interacao_robo?: boolean | Paciente$interacao_roboArgs<ExtArgs>
    _count?: boolean | PacienteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PacienteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }
  export type PacienteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }

  export type $PacientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Paciente"
    objects: {
      clinica: Prisma.$ClinicaPayload<ExtArgs>
      consultas: Prisma.$ConsultaPayload<ExtArgs>[]
      interacao_robo: Prisma.$InteracaoRoboPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_paciente: number
      cpf: string
      nome: string
      data_nascimento: Date
      email: string
      telefone: string
      codigo_ibge: string | null
      cep: string | null
      logradouro: string | null
      numero: string | null
      complemento: string | null
      bairro: string | null
      cidade: string | null
      uf: string | null
      senha: string | null
      ativo: boolean
      id_clinica: number
    }, ExtArgs["result"]["paciente"]>
    composites: {}
  }

  type PacienteGetPayload<S extends boolean | null | undefined | PacienteDefaultArgs> = $Result.GetResult<Prisma.$PacientePayload, S>

  type PacienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PacienteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PacienteCountAggregateInputType | true
    }

  export interface PacienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Paciente'], meta: { name: 'Paciente' } }
    /**
     * Find zero or one Paciente that matches the filter.
     * @param {PacienteFindUniqueArgs} args - Arguments to find a Paciente
     * @example
     * // Get one Paciente
     * const paciente = await prisma.paciente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PacienteFindUniqueArgs>(args: SelectSubset<T, PacienteFindUniqueArgs<ExtArgs>>): Prisma__PacienteClient<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Paciente that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PacienteFindUniqueOrThrowArgs} args - Arguments to find a Paciente
     * @example
     * // Get one Paciente
     * const paciente = await prisma.paciente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PacienteFindUniqueOrThrowArgs>(args: SelectSubset<T, PacienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PacienteClient<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Paciente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PacienteFindFirstArgs} args - Arguments to find a Paciente
     * @example
     * // Get one Paciente
     * const paciente = await prisma.paciente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PacienteFindFirstArgs>(args?: SelectSubset<T, PacienteFindFirstArgs<ExtArgs>>): Prisma__PacienteClient<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Paciente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PacienteFindFirstOrThrowArgs} args - Arguments to find a Paciente
     * @example
     * // Get one Paciente
     * const paciente = await prisma.paciente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PacienteFindFirstOrThrowArgs>(args?: SelectSubset<T, PacienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__PacienteClient<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pacientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PacienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pacientes
     * const pacientes = await prisma.paciente.findMany()
     * 
     * // Get first 10 Pacientes
     * const pacientes = await prisma.paciente.findMany({ take: 10 })
     * 
     * // Only select the `id_paciente`
     * const pacienteWithId_pacienteOnly = await prisma.paciente.findMany({ select: { id_paciente: true } })
     * 
     */
    findMany<T extends PacienteFindManyArgs>(args?: SelectSubset<T, PacienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Paciente.
     * @param {PacienteCreateArgs} args - Arguments to create a Paciente.
     * @example
     * // Create one Paciente
     * const Paciente = await prisma.paciente.create({
     *   data: {
     *     // ... data to create a Paciente
     *   }
     * })
     * 
     */
    create<T extends PacienteCreateArgs>(args: SelectSubset<T, PacienteCreateArgs<ExtArgs>>): Prisma__PacienteClient<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pacientes.
     * @param {PacienteCreateManyArgs} args - Arguments to create many Pacientes.
     * @example
     * // Create many Pacientes
     * const paciente = await prisma.paciente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PacienteCreateManyArgs>(args?: SelectSubset<T, PacienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pacientes and returns the data saved in the database.
     * @param {PacienteCreateManyAndReturnArgs} args - Arguments to create many Pacientes.
     * @example
     * // Create many Pacientes
     * const paciente = await prisma.paciente.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pacientes and only return the `id_paciente`
     * const pacienteWithId_pacienteOnly = await prisma.paciente.createManyAndReturn({
     *   select: { id_paciente: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PacienteCreateManyAndReturnArgs>(args?: SelectSubset<T, PacienteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Paciente.
     * @param {PacienteDeleteArgs} args - Arguments to delete one Paciente.
     * @example
     * // Delete one Paciente
     * const Paciente = await prisma.paciente.delete({
     *   where: {
     *     // ... filter to delete one Paciente
     *   }
     * })
     * 
     */
    delete<T extends PacienteDeleteArgs>(args: SelectSubset<T, PacienteDeleteArgs<ExtArgs>>): Prisma__PacienteClient<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Paciente.
     * @param {PacienteUpdateArgs} args - Arguments to update one Paciente.
     * @example
     * // Update one Paciente
     * const paciente = await prisma.paciente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PacienteUpdateArgs>(args: SelectSubset<T, PacienteUpdateArgs<ExtArgs>>): Prisma__PacienteClient<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pacientes.
     * @param {PacienteDeleteManyArgs} args - Arguments to filter Pacientes to delete.
     * @example
     * // Delete a few Pacientes
     * const { count } = await prisma.paciente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PacienteDeleteManyArgs>(args?: SelectSubset<T, PacienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pacientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PacienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pacientes
     * const paciente = await prisma.paciente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PacienteUpdateManyArgs>(args: SelectSubset<T, PacienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pacientes and returns the data updated in the database.
     * @param {PacienteUpdateManyAndReturnArgs} args - Arguments to update many Pacientes.
     * @example
     * // Update many Pacientes
     * const paciente = await prisma.paciente.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pacientes and only return the `id_paciente`
     * const pacienteWithId_pacienteOnly = await prisma.paciente.updateManyAndReturn({
     *   select: { id_paciente: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PacienteUpdateManyAndReturnArgs>(args: SelectSubset<T, PacienteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Paciente.
     * @param {PacienteUpsertArgs} args - Arguments to update or create a Paciente.
     * @example
     * // Update or create a Paciente
     * const paciente = await prisma.paciente.upsert({
     *   create: {
     *     // ... data to create a Paciente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Paciente we want to update
     *   }
     * })
     */
    upsert<T extends PacienteUpsertArgs>(args: SelectSubset<T, PacienteUpsertArgs<ExtArgs>>): Prisma__PacienteClient<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pacientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PacienteCountArgs} args - Arguments to filter Pacientes to count.
     * @example
     * // Count the number of Pacientes
     * const count = await prisma.paciente.count({
     *   where: {
     *     // ... the filter for the Pacientes we want to count
     *   }
     * })
    **/
    count<T extends PacienteCountArgs>(
      args?: Subset<T, PacienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PacienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Paciente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PacienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PacienteAggregateArgs>(args: Subset<T, PacienteAggregateArgs>): Prisma.PrismaPromise<GetPacienteAggregateType<T>>

    /**
     * Group by Paciente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PacienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PacienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PacienteGroupByArgs['orderBy'] }
        : { orderBy?: PacienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PacienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPacienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Paciente model
   */
  readonly fields: PacienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Paciente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PacienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clinica<T extends ClinicaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClinicaDefaultArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    consultas<T extends Paciente$consultasArgs<ExtArgs> = {}>(args?: Subset<T, Paciente$consultasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    interacao_robo<T extends Paciente$interacao_roboArgs<ExtArgs> = {}>(args?: Subset<T, Paciente$interacao_roboArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Paciente model
   */
  interface PacienteFieldRefs {
    readonly id_paciente: FieldRef<"Paciente", 'Int'>
    readonly cpf: FieldRef<"Paciente", 'String'>
    readonly nome: FieldRef<"Paciente", 'String'>
    readonly data_nascimento: FieldRef<"Paciente", 'DateTime'>
    readonly email: FieldRef<"Paciente", 'String'>
    readonly telefone: FieldRef<"Paciente", 'String'>
    readonly codigo_ibge: FieldRef<"Paciente", 'String'>
    readonly cep: FieldRef<"Paciente", 'String'>
    readonly logradouro: FieldRef<"Paciente", 'String'>
    readonly numero: FieldRef<"Paciente", 'String'>
    readonly complemento: FieldRef<"Paciente", 'String'>
    readonly bairro: FieldRef<"Paciente", 'String'>
    readonly cidade: FieldRef<"Paciente", 'String'>
    readonly uf: FieldRef<"Paciente", 'String'>
    readonly senha: FieldRef<"Paciente", 'String'>
    readonly ativo: FieldRef<"Paciente", 'Boolean'>
    readonly id_clinica: FieldRef<"Paciente", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Paciente findUnique
   */
  export type PacienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paciente
     */
    select?: PacienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Paciente
     */
    omit?: PacienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PacienteInclude<ExtArgs> | null
    /**
     * Filter, which Paciente to fetch.
     */
    where: PacienteWhereUniqueInput
  }

  /**
   * Paciente findUniqueOrThrow
   */
  export type PacienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paciente
     */
    select?: PacienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Paciente
     */
    omit?: PacienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PacienteInclude<ExtArgs> | null
    /**
     * Filter, which Paciente to fetch.
     */
    where: PacienteWhereUniqueInput
  }

  /**
   * Paciente findFirst
   */
  export type PacienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paciente
     */
    select?: PacienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Paciente
     */
    omit?: PacienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PacienteInclude<ExtArgs> | null
    /**
     * Filter, which Paciente to fetch.
     */
    where?: PacienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pacientes to fetch.
     */
    orderBy?: PacienteOrderByWithRelationInput | PacienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pacientes.
     */
    cursor?: PacienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pacientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pacientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pacientes.
     */
    distinct?: PacienteScalarFieldEnum | PacienteScalarFieldEnum[]
  }

  /**
   * Paciente findFirstOrThrow
   */
  export type PacienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paciente
     */
    select?: PacienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Paciente
     */
    omit?: PacienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PacienteInclude<ExtArgs> | null
    /**
     * Filter, which Paciente to fetch.
     */
    where?: PacienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pacientes to fetch.
     */
    orderBy?: PacienteOrderByWithRelationInput | PacienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pacientes.
     */
    cursor?: PacienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pacientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pacientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pacientes.
     */
    distinct?: PacienteScalarFieldEnum | PacienteScalarFieldEnum[]
  }

  /**
   * Paciente findMany
   */
  export type PacienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paciente
     */
    select?: PacienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Paciente
     */
    omit?: PacienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PacienteInclude<ExtArgs> | null
    /**
     * Filter, which Pacientes to fetch.
     */
    where?: PacienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pacientes to fetch.
     */
    orderBy?: PacienteOrderByWithRelationInput | PacienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pacientes.
     */
    cursor?: PacienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pacientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pacientes.
     */
    skip?: number
    distinct?: PacienteScalarFieldEnum | PacienteScalarFieldEnum[]
  }

  /**
   * Paciente create
   */
  export type PacienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paciente
     */
    select?: PacienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Paciente
     */
    omit?: PacienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PacienteInclude<ExtArgs> | null
    /**
     * The data needed to create a Paciente.
     */
    data: XOR<PacienteCreateInput, PacienteUncheckedCreateInput>
  }

  /**
   * Paciente createMany
   */
  export type PacienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pacientes.
     */
    data: PacienteCreateManyInput | PacienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Paciente createManyAndReturn
   */
  export type PacienteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paciente
     */
    select?: PacienteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Paciente
     */
    omit?: PacienteOmit<ExtArgs> | null
    /**
     * The data used to create many Pacientes.
     */
    data: PacienteCreateManyInput | PacienteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PacienteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Paciente update
   */
  export type PacienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paciente
     */
    select?: PacienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Paciente
     */
    omit?: PacienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PacienteInclude<ExtArgs> | null
    /**
     * The data needed to update a Paciente.
     */
    data: XOR<PacienteUpdateInput, PacienteUncheckedUpdateInput>
    /**
     * Choose, which Paciente to update.
     */
    where: PacienteWhereUniqueInput
  }

  /**
   * Paciente updateMany
   */
  export type PacienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pacientes.
     */
    data: XOR<PacienteUpdateManyMutationInput, PacienteUncheckedUpdateManyInput>
    /**
     * Filter which Pacientes to update
     */
    where?: PacienteWhereInput
    /**
     * Limit how many Pacientes to update.
     */
    limit?: number
  }

  /**
   * Paciente updateManyAndReturn
   */
  export type PacienteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paciente
     */
    select?: PacienteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Paciente
     */
    omit?: PacienteOmit<ExtArgs> | null
    /**
     * The data used to update Pacientes.
     */
    data: XOR<PacienteUpdateManyMutationInput, PacienteUncheckedUpdateManyInput>
    /**
     * Filter which Pacientes to update
     */
    where?: PacienteWhereInput
    /**
     * Limit how many Pacientes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PacienteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Paciente upsert
   */
  export type PacienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paciente
     */
    select?: PacienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Paciente
     */
    omit?: PacienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PacienteInclude<ExtArgs> | null
    /**
     * The filter to search for the Paciente to update in case it exists.
     */
    where: PacienteWhereUniqueInput
    /**
     * In case the Paciente found by the `where` argument doesn't exist, create a new Paciente with this data.
     */
    create: XOR<PacienteCreateInput, PacienteUncheckedCreateInput>
    /**
     * In case the Paciente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PacienteUpdateInput, PacienteUncheckedUpdateInput>
  }

  /**
   * Paciente delete
   */
  export type PacienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paciente
     */
    select?: PacienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Paciente
     */
    omit?: PacienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PacienteInclude<ExtArgs> | null
    /**
     * Filter which Paciente to delete.
     */
    where: PacienteWhereUniqueInput
  }

  /**
   * Paciente deleteMany
   */
  export type PacienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pacientes to delete
     */
    where?: PacienteWhereInput
    /**
     * Limit how many Pacientes to delete.
     */
    limit?: number
  }

  /**
   * Paciente.consultas
   */
  export type Paciente$consultasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
    where?: ConsultaWhereInput
    orderBy?: ConsultaOrderByWithRelationInput | ConsultaOrderByWithRelationInput[]
    cursor?: ConsultaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConsultaScalarFieldEnum | ConsultaScalarFieldEnum[]
  }

  /**
   * Paciente.interacao_robo
   */
  export type Paciente$interacao_roboArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboInclude<ExtArgs> | null
    where?: InteracaoRoboWhereInput
    orderBy?: InteracaoRoboOrderByWithRelationInput | InteracaoRoboOrderByWithRelationInput[]
    cursor?: InteracaoRoboWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InteracaoRoboScalarFieldEnum | InteracaoRoboScalarFieldEnum[]
  }

  /**
   * Paciente without action
   */
  export type PacienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paciente
     */
    select?: PacienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Paciente
     */
    omit?: PacienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PacienteInclude<ExtArgs> | null
  }


  /**
   * Model ProfissionalDaSaude
   */

  export type AggregateProfissionalDaSaude = {
    _count: ProfissionalDaSaudeCountAggregateOutputType | null
    _avg: ProfissionalDaSaudeAvgAggregateOutputType | null
    _sum: ProfissionalDaSaudeSumAggregateOutputType | null
    _min: ProfissionalDaSaudeMinAggregateOutputType | null
    _max: ProfissionalDaSaudeMaxAggregateOutputType | null
  }

  export type ProfissionalDaSaudeAvgAggregateOutputType = {
    id_profissional_saude: number | null
    id_clinica: number | null
    usuario_id: number | null
  }

  export type ProfissionalDaSaudeSumAggregateOutputType = {
    id_profissional_saude: number | null
    id_clinica: number | null
    usuario_id: number | null
  }

  export type ProfissionalDaSaudeMinAggregateOutputType = {
    id_profissional_saude: number | null
    nome_profissional: string | null
    imagem_profissional: string | null
    data_nascimento: Date | null
    cpf: string | null
    conselho: string | null
    numero_conselho: string | null
    uf_conselho: string | null
    rqe: string | null
    telefone: string | null
    email: string | null
    telemedicina: boolean | null
    especialidade: string | null
    ativo: boolean | null
    id_clinica: number | null
    usuario_id: number | null
  }

  export type ProfissionalDaSaudeMaxAggregateOutputType = {
    id_profissional_saude: number | null
    nome_profissional: string | null
    imagem_profissional: string | null
    data_nascimento: Date | null
    cpf: string | null
    conselho: string | null
    numero_conselho: string | null
    uf_conselho: string | null
    rqe: string | null
    telefone: string | null
    email: string | null
    telemedicina: boolean | null
    especialidade: string | null
    ativo: boolean | null
    id_clinica: number | null
    usuario_id: number | null
  }

  export type ProfissionalDaSaudeCountAggregateOutputType = {
    id_profissional_saude: number
    nome_profissional: number
    imagem_profissional: number
    data_nascimento: number
    cpf: number
    conselho: number
    numero_conselho: number
    uf_conselho: number
    rqe: number
    telefone: number
    email: number
    telemedicina: number
    especialidade: number
    ativo: number
    id_clinica: number
    usuario_id: number
    _all: number
  }


  export type ProfissionalDaSaudeAvgAggregateInputType = {
    id_profissional_saude?: true
    id_clinica?: true
    usuario_id?: true
  }

  export type ProfissionalDaSaudeSumAggregateInputType = {
    id_profissional_saude?: true
    id_clinica?: true
    usuario_id?: true
  }

  export type ProfissionalDaSaudeMinAggregateInputType = {
    id_profissional_saude?: true
    nome_profissional?: true
    imagem_profissional?: true
    data_nascimento?: true
    cpf?: true
    conselho?: true
    numero_conselho?: true
    uf_conselho?: true
    rqe?: true
    telefone?: true
    email?: true
    telemedicina?: true
    especialidade?: true
    ativo?: true
    id_clinica?: true
    usuario_id?: true
  }

  export type ProfissionalDaSaudeMaxAggregateInputType = {
    id_profissional_saude?: true
    nome_profissional?: true
    imagem_profissional?: true
    data_nascimento?: true
    cpf?: true
    conselho?: true
    numero_conselho?: true
    uf_conselho?: true
    rqe?: true
    telefone?: true
    email?: true
    telemedicina?: true
    especialidade?: true
    ativo?: true
    id_clinica?: true
    usuario_id?: true
  }

  export type ProfissionalDaSaudeCountAggregateInputType = {
    id_profissional_saude?: true
    nome_profissional?: true
    imagem_profissional?: true
    data_nascimento?: true
    cpf?: true
    conselho?: true
    numero_conselho?: true
    uf_conselho?: true
    rqe?: true
    telefone?: true
    email?: true
    telemedicina?: true
    especialidade?: true
    ativo?: true
    id_clinica?: true
    usuario_id?: true
    _all?: true
  }

  export type ProfissionalDaSaudeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProfissionalDaSaude to aggregate.
     */
    where?: ProfissionalDaSaudeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProfissionalDaSaudes to fetch.
     */
    orderBy?: ProfissionalDaSaudeOrderByWithRelationInput | ProfissionalDaSaudeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProfissionalDaSaudeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProfissionalDaSaudes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProfissionalDaSaudes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProfissionalDaSaudes
    **/
    _count?: true | ProfissionalDaSaudeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProfissionalDaSaudeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProfissionalDaSaudeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfissionalDaSaudeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfissionalDaSaudeMaxAggregateInputType
  }

  export type GetProfissionalDaSaudeAggregateType<T extends ProfissionalDaSaudeAggregateArgs> = {
        [P in keyof T & keyof AggregateProfissionalDaSaude]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfissionalDaSaude[P]>
      : GetScalarType<T[P], AggregateProfissionalDaSaude[P]>
  }




  export type ProfissionalDaSaudeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfissionalDaSaudeWhereInput
    orderBy?: ProfissionalDaSaudeOrderByWithAggregationInput | ProfissionalDaSaudeOrderByWithAggregationInput[]
    by: ProfissionalDaSaudeScalarFieldEnum[] | ProfissionalDaSaudeScalarFieldEnum
    having?: ProfissionalDaSaudeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfissionalDaSaudeCountAggregateInputType | true
    _avg?: ProfissionalDaSaudeAvgAggregateInputType
    _sum?: ProfissionalDaSaudeSumAggregateInputType
    _min?: ProfissionalDaSaudeMinAggregateInputType
    _max?: ProfissionalDaSaudeMaxAggregateInputType
  }

  export type ProfissionalDaSaudeGroupByOutputType = {
    id_profissional_saude: number
    nome_profissional: string
    imagem_profissional: string | null
    data_nascimento: Date
    cpf: string
    conselho: string | null
    numero_conselho: string | null
    uf_conselho: string | null
    rqe: string | null
    telefone: string
    email: string
    telemedicina: boolean
    especialidade: string | null
    ativo: boolean
    id_clinica: number
    usuario_id: number | null
    _count: ProfissionalDaSaudeCountAggregateOutputType | null
    _avg: ProfissionalDaSaudeAvgAggregateOutputType | null
    _sum: ProfissionalDaSaudeSumAggregateOutputType | null
    _min: ProfissionalDaSaudeMinAggregateOutputType | null
    _max: ProfissionalDaSaudeMaxAggregateOutputType | null
  }

  type GetProfissionalDaSaudeGroupByPayload<T extends ProfissionalDaSaudeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfissionalDaSaudeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfissionalDaSaudeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfissionalDaSaudeGroupByOutputType[P]>
            : GetScalarType<T[P], ProfissionalDaSaudeGroupByOutputType[P]>
        }
      >
    >


  export type ProfissionalDaSaudeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_profissional_saude?: boolean
    nome_profissional?: boolean
    imagem_profissional?: boolean
    data_nascimento?: boolean
    cpf?: boolean
    conselho?: boolean
    numero_conselho?: boolean
    uf_conselho?: boolean
    rqe?: boolean
    telefone?: boolean
    email?: boolean
    telemedicina?: boolean
    especialidade?: boolean
    ativo?: boolean
    id_clinica?: boolean
    usuario_id?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    usuario?: boolean | ProfissionalDaSaude$usuarioArgs<ExtArgs>
    consultas?: boolean | ProfissionalDaSaude$consultasArgs<ExtArgs>
    agenda?: boolean | ProfissionalDaSaude$agendaArgs<ExtArgs>
    _count?: boolean | ProfissionalDaSaudeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profissionalDaSaude"]>

  export type ProfissionalDaSaudeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_profissional_saude?: boolean
    nome_profissional?: boolean
    imagem_profissional?: boolean
    data_nascimento?: boolean
    cpf?: boolean
    conselho?: boolean
    numero_conselho?: boolean
    uf_conselho?: boolean
    rqe?: boolean
    telefone?: boolean
    email?: boolean
    telemedicina?: boolean
    especialidade?: boolean
    ativo?: boolean
    id_clinica?: boolean
    usuario_id?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    usuario?: boolean | ProfissionalDaSaude$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["profissionalDaSaude"]>

  export type ProfissionalDaSaudeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_profissional_saude?: boolean
    nome_profissional?: boolean
    imagem_profissional?: boolean
    data_nascimento?: boolean
    cpf?: boolean
    conselho?: boolean
    numero_conselho?: boolean
    uf_conselho?: boolean
    rqe?: boolean
    telefone?: boolean
    email?: boolean
    telemedicina?: boolean
    especialidade?: boolean
    ativo?: boolean
    id_clinica?: boolean
    usuario_id?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    usuario?: boolean | ProfissionalDaSaude$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["profissionalDaSaude"]>

  export type ProfissionalDaSaudeSelectScalar = {
    id_profissional_saude?: boolean
    nome_profissional?: boolean
    imagem_profissional?: boolean
    data_nascimento?: boolean
    cpf?: boolean
    conselho?: boolean
    numero_conselho?: boolean
    uf_conselho?: boolean
    rqe?: boolean
    telefone?: boolean
    email?: boolean
    telemedicina?: boolean
    especialidade?: boolean
    ativo?: boolean
    id_clinica?: boolean
    usuario_id?: boolean
  }

  export type ProfissionalDaSaudeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_profissional_saude" | "nome_profissional" | "imagem_profissional" | "data_nascimento" | "cpf" | "conselho" | "numero_conselho" | "uf_conselho" | "rqe" | "telefone" | "email" | "telemedicina" | "especialidade" | "ativo" | "id_clinica" | "usuario_id", ExtArgs["result"]["profissionalDaSaude"]>
  export type ProfissionalDaSaudeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    usuario?: boolean | ProfissionalDaSaude$usuarioArgs<ExtArgs>
    consultas?: boolean | ProfissionalDaSaude$consultasArgs<ExtArgs>
    agenda?: boolean | ProfissionalDaSaude$agendaArgs<ExtArgs>
    _count?: boolean | ProfissionalDaSaudeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProfissionalDaSaudeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    usuario?: boolean | ProfissionalDaSaude$usuarioArgs<ExtArgs>
  }
  export type ProfissionalDaSaudeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    usuario?: boolean | ProfissionalDaSaude$usuarioArgs<ExtArgs>
  }

  export type $ProfissionalDaSaudePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProfissionalDaSaude"
    objects: {
      clinica: Prisma.$ClinicaPayload<ExtArgs>
      usuario: Prisma.$UsuarioPayload<ExtArgs> | null
      consultas: Prisma.$ConsultaPayload<ExtArgs>[]
      agenda: Prisma.$AgendaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_profissional_saude: number
      nome_profissional: string
      imagem_profissional: string | null
      data_nascimento: Date
      cpf: string
      conselho: string | null
      numero_conselho: string | null
      uf_conselho: string | null
      rqe: string | null
      telefone: string
      email: string
      telemedicina: boolean
      especialidade: string | null
      ativo: boolean
      id_clinica: number
      usuario_id: number | null
    }, ExtArgs["result"]["profissionalDaSaude"]>
    composites: {}
  }

  type ProfissionalDaSaudeGetPayload<S extends boolean | null | undefined | ProfissionalDaSaudeDefaultArgs> = $Result.GetResult<Prisma.$ProfissionalDaSaudePayload, S>

  type ProfissionalDaSaudeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProfissionalDaSaudeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProfissionalDaSaudeCountAggregateInputType | true
    }

  export interface ProfissionalDaSaudeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProfissionalDaSaude'], meta: { name: 'ProfissionalDaSaude' } }
    /**
     * Find zero or one ProfissionalDaSaude that matches the filter.
     * @param {ProfissionalDaSaudeFindUniqueArgs} args - Arguments to find a ProfissionalDaSaude
     * @example
     * // Get one ProfissionalDaSaude
     * const profissionalDaSaude = await prisma.profissionalDaSaude.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProfissionalDaSaudeFindUniqueArgs>(args: SelectSubset<T, ProfissionalDaSaudeFindUniqueArgs<ExtArgs>>): Prisma__ProfissionalDaSaudeClient<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProfissionalDaSaude that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProfissionalDaSaudeFindUniqueOrThrowArgs} args - Arguments to find a ProfissionalDaSaude
     * @example
     * // Get one ProfissionalDaSaude
     * const profissionalDaSaude = await prisma.profissionalDaSaude.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProfissionalDaSaudeFindUniqueOrThrowArgs>(args: SelectSubset<T, ProfissionalDaSaudeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProfissionalDaSaudeClient<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProfissionalDaSaude that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfissionalDaSaudeFindFirstArgs} args - Arguments to find a ProfissionalDaSaude
     * @example
     * // Get one ProfissionalDaSaude
     * const profissionalDaSaude = await prisma.profissionalDaSaude.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProfissionalDaSaudeFindFirstArgs>(args?: SelectSubset<T, ProfissionalDaSaudeFindFirstArgs<ExtArgs>>): Prisma__ProfissionalDaSaudeClient<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProfissionalDaSaude that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfissionalDaSaudeFindFirstOrThrowArgs} args - Arguments to find a ProfissionalDaSaude
     * @example
     * // Get one ProfissionalDaSaude
     * const profissionalDaSaude = await prisma.profissionalDaSaude.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProfissionalDaSaudeFindFirstOrThrowArgs>(args?: SelectSubset<T, ProfissionalDaSaudeFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProfissionalDaSaudeClient<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProfissionalDaSaudes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfissionalDaSaudeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProfissionalDaSaudes
     * const profissionalDaSaudes = await prisma.profissionalDaSaude.findMany()
     * 
     * // Get first 10 ProfissionalDaSaudes
     * const profissionalDaSaudes = await prisma.profissionalDaSaude.findMany({ take: 10 })
     * 
     * // Only select the `id_profissional_saude`
     * const profissionalDaSaudeWithId_profissional_saudeOnly = await prisma.profissionalDaSaude.findMany({ select: { id_profissional_saude: true } })
     * 
     */
    findMany<T extends ProfissionalDaSaudeFindManyArgs>(args?: SelectSubset<T, ProfissionalDaSaudeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProfissionalDaSaude.
     * @param {ProfissionalDaSaudeCreateArgs} args - Arguments to create a ProfissionalDaSaude.
     * @example
     * // Create one ProfissionalDaSaude
     * const ProfissionalDaSaude = await prisma.profissionalDaSaude.create({
     *   data: {
     *     // ... data to create a ProfissionalDaSaude
     *   }
     * })
     * 
     */
    create<T extends ProfissionalDaSaudeCreateArgs>(args: SelectSubset<T, ProfissionalDaSaudeCreateArgs<ExtArgs>>): Prisma__ProfissionalDaSaudeClient<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProfissionalDaSaudes.
     * @param {ProfissionalDaSaudeCreateManyArgs} args - Arguments to create many ProfissionalDaSaudes.
     * @example
     * // Create many ProfissionalDaSaudes
     * const profissionalDaSaude = await prisma.profissionalDaSaude.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProfissionalDaSaudeCreateManyArgs>(args?: SelectSubset<T, ProfissionalDaSaudeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProfissionalDaSaudes and returns the data saved in the database.
     * @param {ProfissionalDaSaudeCreateManyAndReturnArgs} args - Arguments to create many ProfissionalDaSaudes.
     * @example
     * // Create many ProfissionalDaSaudes
     * const profissionalDaSaude = await prisma.profissionalDaSaude.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProfissionalDaSaudes and only return the `id_profissional_saude`
     * const profissionalDaSaudeWithId_profissional_saudeOnly = await prisma.profissionalDaSaude.createManyAndReturn({
     *   select: { id_profissional_saude: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProfissionalDaSaudeCreateManyAndReturnArgs>(args?: SelectSubset<T, ProfissionalDaSaudeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProfissionalDaSaude.
     * @param {ProfissionalDaSaudeDeleteArgs} args - Arguments to delete one ProfissionalDaSaude.
     * @example
     * // Delete one ProfissionalDaSaude
     * const ProfissionalDaSaude = await prisma.profissionalDaSaude.delete({
     *   where: {
     *     // ... filter to delete one ProfissionalDaSaude
     *   }
     * })
     * 
     */
    delete<T extends ProfissionalDaSaudeDeleteArgs>(args: SelectSubset<T, ProfissionalDaSaudeDeleteArgs<ExtArgs>>): Prisma__ProfissionalDaSaudeClient<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProfissionalDaSaude.
     * @param {ProfissionalDaSaudeUpdateArgs} args - Arguments to update one ProfissionalDaSaude.
     * @example
     * // Update one ProfissionalDaSaude
     * const profissionalDaSaude = await prisma.profissionalDaSaude.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProfissionalDaSaudeUpdateArgs>(args: SelectSubset<T, ProfissionalDaSaudeUpdateArgs<ExtArgs>>): Prisma__ProfissionalDaSaudeClient<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProfissionalDaSaudes.
     * @param {ProfissionalDaSaudeDeleteManyArgs} args - Arguments to filter ProfissionalDaSaudes to delete.
     * @example
     * // Delete a few ProfissionalDaSaudes
     * const { count } = await prisma.profissionalDaSaude.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProfissionalDaSaudeDeleteManyArgs>(args?: SelectSubset<T, ProfissionalDaSaudeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProfissionalDaSaudes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfissionalDaSaudeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProfissionalDaSaudes
     * const profissionalDaSaude = await prisma.profissionalDaSaude.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProfissionalDaSaudeUpdateManyArgs>(args: SelectSubset<T, ProfissionalDaSaudeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProfissionalDaSaudes and returns the data updated in the database.
     * @param {ProfissionalDaSaudeUpdateManyAndReturnArgs} args - Arguments to update many ProfissionalDaSaudes.
     * @example
     * // Update many ProfissionalDaSaudes
     * const profissionalDaSaude = await prisma.profissionalDaSaude.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProfissionalDaSaudes and only return the `id_profissional_saude`
     * const profissionalDaSaudeWithId_profissional_saudeOnly = await prisma.profissionalDaSaude.updateManyAndReturn({
     *   select: { id_profissional_saude: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProfissionalDaSaudeUpdateManyAndReturnArgs>(args: SelectSubset<T, ProfissionalDaSaudeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProfissionalDaSaude.
     * @param {ProfissionalDaSaudeUpsertArgs} args - Arguments to update or create a ProfissionalDaSaude.
     * @example
     * // Update or create a ProfissionalDaSaude
     * const profissionalDaSaude = await prisma.profissionalDaSaude.upsert({
     *   create: {
     *     // ... data to create a ProfissionalDaSaude
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProfissionalDaSaude we want to update
     *   }
     * })
     */
    upsert<T extends ProfissionalDaSaudeUpsertArgs>(args: SelectSubset<T, ProfissionalDaSaudeUpsertArgs<ExtArgs>>): Prisma__ProfissionalDaSaudeClient<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProfissionalDaSaudes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfissionalDaSaudeCountArgs} args - Arguments to filter ProfissionalDaSaudes to count.
     * @example
     * // Count the number of ProfissionalDaSaudes
     * const count = await prisma.profissionalDaSaude.count({
     *   where: {
     *     // ... the filter for the ProfissionalDaSaudes we want to count
     *   }
     * })
    **/
    count<T extends ProfissionalDaSaudeCountArgs>(
      args?: Subset<T, ProfissionalDaSaudeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfissionalDaSaudeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProfissionalDaSaude.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfissionalDaSaudeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfissionalDaSaudeAggregateArgs>(args: Subset<T, ProfissionalDaSaudeAggregateArgs>): Prisma.PrismaPromise<GetProfissionalDaSaudeAggregateType<T>>

    /**
     * Group by ProfissionalDaSaude.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfissionalDaSaudeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProfissionalDaSaudeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProfissionalDaSaudeGroupByArgs['orderBy'] }
        : { orderBy?: ProfissionalDaSaudeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProfissionalDaSaudeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfissionalDaSaudeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProfissionalDaSaude model
   */
  readonly fields: ProfissionalDaSaudeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProfissionalDaSaude.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProfissionalDaSaudeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clinica<T extends ClinicaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClinicaDefaultArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends ProfissionalDaSaude$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, ProfissionalDaSaude$usuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    consultas<T extends ProfissionalDaSaude$consultasArgs<ExtArgs> = {}>(args?: Subset<T, ProfissionalDaSaude$consultasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    agenda<T extends ProfissionalDaSaude$agendaArgs<ExtArgs> = {}>(args?: Subset<T, ProfissionalDaSaude$agendaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProfissionalDaSaude model
   */
  interface ProfissionalDaSaudeFieldRefs {
    readonly id_profissional_saude: FieldRef<"ProfissionalDaSaude", 'Int'>
    readonly nome_profissional: FieldRef<"ProfissionalDaSaude", 'String'>
    readonly imagem_profissional: FieldRef<"ProfissionalDaSaude", 'String'>
    readonly data_nascimento: FieldRef<"ProfissionalDaSaude", 'DateTime'>
    readonly cpf: FieldRef<"ProfissionalDaSaude", 'String'>
    readonly conselho: FieldRef<"ProfissionalDaSaude", 'String'>
    readonly numero_conselho: FieldRef<"ProfissionalDaSaude", 'String'>
    readonly uf_conselho: FieldRef<"ProfissionalDaSaude", 'String'>
    readonly rqe: FieldRef<"ProfissionalDaSaude", 'String'>
    readonly telefone: FieldRef<"ProfissionalDaSaude", 'String'>
    readonly email: FieldRef<"ProfissionalDaSaude", 'String'>
    readonly telemedicina: FieldRef<"ProfissionalDaSaude", 'Boolean'>
    readonly especialidade: FieldRef<"ProfissionalDaSaude", 'String'>
    readonly ativo: FieldRef<"ProfissionalDaSaude", 'Boolean'>
    readonly id_clinica: FieldRef<"ProfissionalDaSaude", 'Int'>
    readonly usuario_id: FieldRef<"ProfissionalDaSaude", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ProfissionalDaSaude findUnique
   */
  export type ProfissionalDaSaudeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeInclude<ExtArgs> | null
    /**
     * Filter, which ProfissionalDaSaude to fetch.
     */
    where: ProfissionalDaSaudeWhereUniqueInput
  }

  /**
   * ProfissionalDaSaude findUniqueOrThrow
   */
  export type ProfissionalDaSaudeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeInclude<ExtArgs> | null
    /**
     * Filter, which ProfissionalDaSaude to fetch.
     */
    where: ProfissionalDaSaudeWhereUniqueInput
  }

  /**
   * ProfissionalDaSaude findFirst
   */
  export type ProfissionalDaSaudeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeInclude<ExtArgs> | null
    /**
     * Filter, which ProfissionalDaSaude to fetch.
     */
    where?: ProfissionalDaSaudeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProfissionalDaSaudes to fetch.
     */
    orderBy?: ProfissionalDaSaudeOrderByWithRelationInput | ProfissionalDaSaudeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProfissionalDaSaudes.
     */
    cursor?: ProfissionalDaSaudeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProfissionalDaSaudes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProfissionalDaSaudes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProfissionalDaSaudes.
     */
    distinct?: ProfissionalDaSaudeScalarFieldEnum | ProfissionalDaSaudeScalarFieldEnum[]
  }

  /**
   * ProfissionalDaSaude findFirstOrThrow
   */
  export type ProfissionalDaSaudeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeInclude<ExtArgs> | null
    /**
     * Filter, which ProfissionalDaSaude to fetch.
     */
    where?: ProfissionalDaSaudeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProfissionalDaSaudes to fetch.
     */
    orderBy?: ProfissionalDaSaudeOrderByWithRelationInput | ProfissionalDaSaudeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProfissionalDaSaudes.
     */
    cursor?: ProfissionalDaSaudeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProfissionalDaSaudes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProfissionalDaSaudes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProfissionalDaSaudes.
     */
    distinct?: ProfissionalDaSaudeScalarFieldEnum | ProfissionalDaSaudeScalarFieldEnum[]
  }

  /**
   * ProfissionalDaSaude findMany
   */
  export type ProfissionalDaSaudeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeInclude<ExtArgs> | null
    /**
     * Filter, which ProfissionalDaSaudes to fetch.
     */
    where?: ProfissionalDaSaudeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProfissionalDaSaudes to fetch.
     */
    orderBy?: ProfissionalDaSaudeOrderByWithRelationInput | ProfissionalDaSaudeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProfissionalDaSaudes.
     */
    cursor?: ProfissionalDaSaudeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProfissionalDaSaudes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProfissionalDaSaudes.
     */
    skip?: number
    distinct?: ProfissionalDaSaudeScalarFieldEnum | ProfissionalDaSaudeScalarFieldEnum[]
  }

  /**
   * ProfissionalDaSaude create
   */
  export type ProfissionalDaSaudeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeInclude<ExtArgs> | null
    /**
     * The data needed to create a ProfissionalDaSaude.
     */
    data: XOR<ProfissionalDaSaudeCreateInput, ProfissionalDaSaudeUncheckedCreateInput>
  }

  /**
   * ProfissionalDaSaude createMany
   */
  export type ProfissionalDaSaudeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProfissionalDaSaudes.
     */
    data: ProfissionalDaSaudeCreateManyInput | ProfissionalDaSaudeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProfissionalDaSaude createManyAndReturn
   */
  export type ProfissionalDaSaudeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * The data used to create many ProfissionalDaSaudes.
     */
    data: ProfissionalDaSaudeCreateManyInput | ProfissionalDaSaudeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProfissionalDaSaude update
   */
  export type ProfissionalDaSaudeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeInclude<ExtArgs> | null
    /**
     * The data needed to update a ProfissionalDaSaude.
     */
    data: XOR<ProfissionalDaSaudeUpdateInput, ProfissionalDaSaudeUncheckedUpdateInput>
    /**
     * Choose, which ProfissionalDaSaude to update.
     */
    where: ProfissionalDaSaudeWhereUniqueInput
  }

  /**
   * ProfissionalDaSaude updateMany
   */
  export type ProfissionalDaSaudeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProfissionalDaSaudes.
     */
    data: XOR<ProfissionalDaSaudeUpdateManyMutationInput, ProfissionalDaSaudeUncheckedUpdateManyInput>
    /**
     * Filter which ProfissionalDaSaudes to update
     */
    where?: ProfissionalDaSaudeWhereInput
    /**
     * Limit how many ProfissionalDaSaudes to update.
     */
    limit?: number
  }

  /**
   * ProfissionalDaSaude updateManyAndReturn
   */
  export type ProfissionalDaSaudeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * The data used to update ProfissionalDaSaudes.
     */
    data: XOR<ProfissionalDaSaudeUpdateManyMutationInput, ProfissionalDaSaudeUncheckedUpdateManyInput>
    /**
     * Filter which ProfissionalDaSaudes to update
     */
    where?: ProfissionalDaSaudeWhereInput
    /**
     * Limit how many ProfissionalDaSaudes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProfissionalDaSaude upsert
   */
  export type ProfissionalDaSaudeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeInclude<ExtArgs> | null
    /**
     * The filter to search for the ProfissionalDaSaude to update in case it exists.
     */
    where: ProfissionalDaSaudeWhereUniqueInput
    /**
     * In case the ProfissionalDaSaude found by the `where` argument doesn't exist, create a new ProfissionalDaSaude with this data.
     */
    create: XOR<ProfissionalDaSaudeCreateInput, ProfissionalDaSaudeUncheckedCreateInput>
    /**
     * In case the ProfissionalDaSaude was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProfissionalDaSaudeUpdateInput, ProfissionalDaSaudeUncheckedUpdateInput>
  }

  /**
   * ProfissionalDaSaude delete
   */
  export type ProfissionalDaSaudeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeInclude<ExtArgs> | null
    /**
     * Filter which ProfissionalDaSaude to delete.
     */
    where: ProfissionalDaSaudeWhereUniqueInput
  }

  /**
   * ProfissionalDaSaude deleteMany
   */
  export type ProfissionalDaSaudeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProfissionalDaSaudes to delete
     */
    where?: ProfissionalDaSaudeWhereInput
    /**
     * Limit how many ProfissionalDaSaudes to delete.
     */
    limit?: number
  }

  /**
   * ProfissionalDaSaude.usuario
   */
  export type ProfissionalDaSaude$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * ProfissionalDaSaude.consultas
   */
  export type ProfissionalDaSaude$consultasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
    where?: ConsultaWhereInput
    orderBy?: ConsultaOrderByWithRelationInput | ConsultaOrderByWithRelationInput[]
    cursor?: ConsultaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConsultaScalarFieldEnum | ConsultaScalarFieldEnum[]
  }

  /**
   * ProfissionalDaSaude.agenda
   */
  export type ProfissionalDaSaude$agendaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaInclude<ExtArgs> | null
    where?: AgendaWhereInput
    orderBy?: AgendaOrderByWithRelationInput | AgendaOrderByWithRelationInput[]
    cursor?: AgendaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgendaScalarFieldEnum | AgendaScalarFieldEnum[]
  }

  /**
   * ProfissionalDaSaude without action
   */
  export type ProfissionalDaSaudeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfissionalDaSaude
     */
    select?: ProfissionalDaSaudeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProfissionalDaSaude
     */
    omit?: ProfissionalDaSaudeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfissionalDaSaudeInclude<ExtArgs> | null
  }


  /**
   * Model Consulta
   */

  export type AggregateConsulta = {
    _count: ConsultaCountAggregateOutputType | null
    _avg: ConsultaAvgAggregateOutputType | null
    _sum: ConsultaSumAggregateOutputType | null
    _min: ConsultaMinAggregateOutputType | null
    _max: ConsultaMaxAggregateOutputType | null
  }

  export type ConsultaAvgAggregateOutputType = {
    id_consulta: number | null
    valor: number | null
    paciente_id: number | null
    profissional_id: number | null
    id_clinica: number | null
    id_convenio: number | null
  }

  export type ConsultaSumAggregateOutputType = {
    id_consulta: number | null
    valor: number | null
    paciente_id: number | null
    profissional_id: number | null
    id_clinica: number | null
    id_convenio: number | null
  }

  export type ConsultaMinAggregateOutputType = {
    id_consulta: number | null
    data_hora_inicio: Date | null
    data_hora_fim: Date | null
    valor: number | null
    telemedicina: boolean | null
    status: string | null
    observacoes: string | null
    paciente_id: number | null
    profissional_id: number | null
    id_clinica: number | null
    id_convenio: number | null
  }

  export type ConsultaMaxAggregateOutputType = {
    id_consulta: number | null
    data_hora_inicio: Date | null
    data_hora_fim: Date | null
    valor: number | null
    telemedicina: boolean | null
    status: string | null
    observacoes: string | null
    paciente_id: number | null
    profissional_id: number | null
    id_clinica: number | null
    id_convenio: number | null
  }

  export type ConsultaCountAggregateOutputType = {
    id_consulta: number
    data_hora_inicio: number
    data_hora_fim: number
    valor: number
    telemedicina: number
    status: number
    observacoes: number
    paciente_id: number
    profissional_id: number
    id_clinica: number
    id_convenio: number
    _all: number
  }


  export type ConsultaAvgAggregateInputType = {
    id_consulta?: true
    valor?: true
    paciente_id?: true
    profissional_id?: true
    id_clinica?: true
    id_convenio?: true
  }

  export type ConsultaSumAggregateInputType = {
    id_consulta?: true
    valor?: true
    paciente_id?: true
    profissional_id?: true
    id_clinica?: true
    id_convenio?: true
  }

  export type ConsultaMinAggregateInputType = {
    id_consulta?: true
    data_hora_inicio?: true
    data_hora_fim?: true
    valor?: true
    telemedicina?: true
    status?: true
    observacoes?: true
    paciente_id?: true
    profissional_id?: true
    id_clinica?: true
    id_convenio?: true
  }

  export type ConsultaMaxAggregateInputType = {
    id_consulta?: true
    data_hora_inicio?: true
    data_hora_fim?: true
    valor?: true
    telemedicina?: true
    status?: true
    observacoes?: true
    paciente_id?: true
    profissional_id?: true
    id_clinica?: true
    id_convenio?: true
  }

  export type ConsultaCountAggregateInputType = {
    id_consulta?: true
    data_hora_inicio?: true
    data_hora_fim?: true
    valor?: true
    telemedicina?: true
    status?: true
    observacoes?: true
    paciente_id?: true
    profissional_id?: true
    id_clinica?: true
    id_convenio?: true
    _all?: true
  }

  export type ConsultaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Consulta to aggregate.
     */
    where?: ConsultaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Consultas to fetch.
     */
    orderBy?: ConsultaOrderByWithRelationInput | ConsultaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConsultaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Consultas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Consultas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Consultas
    **/
    _count?: true | ConsultaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConsultaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConsultaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConsultaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConsultaMaxAggregateInputType
  }

  export type GetConsultaAggregateType<T extends ConsultaAggregateArgs> = {
        [P in keyof T & keyof AggregateConsulta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConsulta[P]>
      : GetScalarType<T[P], AggregateConsulta[P]>
  }




  export type ConsultaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConsultaWhereInput
    orderBy?: ConsultaOrderByWithAggregationInput | ConsultaOrderByWithAggregationInput[]
    by: ConsultaScalarFieldEnum[] | ConsultaScalarFieldEnum
    having?: ConsultaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConsultaCountAggregateInputType | true
    _avg?: ConsultaAvgAggregateInputType
    _sum?: ConsultaSumAggregateInputType
    _min?: ConsultaMinAggregateInputType
    _max?: ConsultaMaxAggregateInputType
  }

  export type ConsultaGroupByOutputType = {
    id_consulta: number
    data_hora_inicio: Date
    data_hora_fim: Date | null
    valor: number | null
    telemedicina: boolean
    status: string
    observacoes: string | null
    paciente_id: number
    profissional_id: number
    id_clinica: number
    id_convenio: number | null
    _count: ConsultaCountAggregateOutputType | null
    _avg: ConsultaAvgAggregateOutputType | null
    _sum: ConsultaSumAggregateOutputType | null
    _min: ConsultaMinAggregateOutputType | null
    _max: ConsultaMaxAggregateOutputType | null
  }

  type GetConsultaGroupByPayload<T extends ConsultaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConsultaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConsultaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConsultaGroupByOutputType[P]>
            : GetScalarType<T[P], ConsultaGroupByOutputType[P]>
        }
      >
    >


  export type ConsultaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_consulta?: boolean
    data_hora_inicio?: boolean
    data_hora_fim?: boolean
    valor?: boolean
    telemedicina?: boolean
    status?: boolean
    observacoes?: boolean
    paciente_id?: boolean
    profissional_id?: boolean
    id_clinica?: boolean
    id_convenio?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    paciente?: boolean | PacienteDefaultArgs<ExtArgs>
    profissional?: boolean | ProfissionalDaSaudeDefaultArgs<ExtArgs>
    procedimentos?: boolean | Consulta$procedimentosArgs<ExtArgs>
    avaliacoes?: boolean | Consulta$avaliacoesArgs<ExtArgs>
    convenio?: boolean | Consulta$convenioArgs<ExtArgs>
    _count?: boolean | ConsultaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["consulta"]>

  export type ConsultaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_consulta?: boolean
    data_hora_inicio?: boolean
    data_hora_fim?: boolean
    valor?: boolean
    telemedicina?: boolean
    status?: boolean
    observacoes?: boolean
    paciente_id?: boolean
    profissional_id?: boolean
    id_clinica?: boolean
    id_convenio?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    paciente?: boolean | PacienteDefaultArgs<ExtArgs>
    profissional?: boolean | ProfissionalDaSaudeDefaultArgs<ExtArgs>
    convenio?: boolean | Consulta$convenioArgs<ExtArgs>
  }, ExtArgs["result"]["consulta"]>

  export type ConsultaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_consulta?: boolean
    data_hora_inicio?: boolean
    data_hora_fim?: boolean
    valor?: boolean
    telemedicina?: boolean
    status?: boolean
    observacoes?: boolean
    paciente_id?: boolean
    profissional_id?: boolean
    id_clinica?: boolean
    id_convenio?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    paciente?: boolean | PacienteDefaultArgs<ExtArgs>
    profissional?: boolean | ProfissionalDaSaudeDefaultArgs<ExtArgs>
    convenio?: boolean | Consulta$convenioArgs<ExtArgs>
  }, ExtArgs["result"]["consulta"]>

  export type ConsultaSelectScalar = {
    id_consulta?: boolean
    data_hora_inicio?: boolean
    data_hora_fim?: boolean
    valor?: boolean
    telemedicina?: boolean
    status?: boolean
    observacoes?: boolean
    paciente_id?: boolean
    profissional_id?: boolean
    id_clinica?: boolean
    id_convenio?: boolean
  }

  export type ConsultaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_consulta" | "data_hora_inicio" | "data_hora_fim" | "valor" | "telemedicina" | "status" | "observacoes" | "paciente_id" | "profissional_id" | "id_clinica" | "id_convenio", ExtArgs["result"]["consulta"]>
  export type ConsultaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    paciente?: boolean | PacienteDefaultArgs<ExtArgs>
    profissional?: boolean | ProfissionalDaSaudeDefaultArgs<ExtArgs>
    procedimentos?: boolean | Consulta$procedimentosArgs<ExtArgs>
    avaliacoes?: boolean | Consulta$avaliacoesArgs<ExtArgs>
    convenio?: boolean | Consulta$convenioArgs<ExtArgs>
    _count?: boolean | ConsultaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ConsultaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    paciente?: boolean | PacienteDefaultArgs<ExtArgs>
    profissional?: boolean | ProfissionalDaSaudeDefaultArgs<ExtArgs>
    convenio?: boolean | Consulta$convenioArgs<ExtArgs>
  }
  export type ConsultaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    paciente?: boolean | PacienteDefaultArgs<ExtArgs>
    profissional?: boolean | ProfissionalDaSaudeDefaultArgs<ExtArgs>
    convenio?: boolean | Consulta$convenioArgs<ExtArgs>
  }

  export type $ConsultaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Consulta"
    objects: {
      clinica: Prisma.$ClinicaPayload<ExtArgs>
      paciente: Prisma.$PacientePayload<ExtArgs>
      profissional: Prisma.$ProfissionalDaSaudePayload<ExtArgs>
      procedimentos: Prisma.$ConsultaProcedimentoPayload<ExtArgs>[]
      avaliacoes: Prisma.$AvaliacaoPayload<ExtArgs>[]
      convenio: Prisma.$ConvenioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_consulta: number
      data_hora_inicio: Date
      data_hora_fim: Date | null
      valor: number | null
      telemedicina: boolean
      status: string
      observacoes: string | null
      paciente_id: number
      profissional_id: number
      id_clinica: number
      id_convenio: number | null
    }, ExtArgs["result"]["consulta"]>
    composites: {}
  }

  type ConsultaGetPayload<S extends boolean | null | undefined | ConsultaDefaultArgs> = $Result.GetResult<Prisma.$ConsultaPayload, S>

  type ConsultaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ConsultaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConsultaCountAggregateInputType | true
    }

  export interface ConsultaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Consulta'], meta: { name: 'Consulta' } }
    /**
     * Find zero or one Consulta that matches the filter.
     * @param {ConsultaFindUniqueArgs} args - Arguments to find a Consulta
     * @example
     * // Get one Consulta
     * const consulta = await prisma.consulta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConsultaFindUniqueArgs>(args: SelectSubset<T, ConsultaFindUniqueArgs<ExtArgs>>): Prisma__ConsultaClient<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Consulta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ConsultaFindUniqueOrThrowArgs} args - Arguments to find a Consulta
     * @example
     * // Get one Consulta
     * const consulta = await prisma.consulta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConsultaFindUniqueOrThrowArgs>(args: SelectSubset<T, ConsultaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConsultaClient<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Consulta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaFindFirstArgs} args - Arguments to find a Consulta
     * @example
     * // Get one Consulta
     * const consulta = await prisma.consulta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConsultaFindFirstArgs>(args?: SelectSubset<T, ConsultaFindFirstArgs<ExtArgs>>): Prisma__ConsultaClient<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Consulta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaFindFirstOrThrowArgs} args - Arguments to find a Consulta
     * @example
     * // Get one Consulta
     * const consulta = await prisma.consulta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConsultaFindFirstOrThrowArgs>(args?: SelectSubset<T, ConsultaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConsultaClient<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Consultas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Consultas
     * const consultas = await prisma.consulta.findMany()
     * 
     * // Get first 10 Consultas
     * const consultas = await prisma.consulta.findMany({ take: 10 })
     * 
     * // Only select the `id_consulta`
     * const consultaWithId_consultaOnly = await prisma.consulta.findMany({ select: { id_consulta: true } })
     * 
     */
    findMany<T extends ConsultaFindManyArgs>(args?: SelectSubset<T, ConsultaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Consulta.
     * @param {ConsultaCreateArgs} args - Arguments to create a Consulta.
     * @example
     * // Create one Consulta
     * const Consulta = await prisma.consulta.create({
     *   data: {
     *     // ... data to create a Consulta
     *   }
     * })
     * 
     */
    create<T extends ConsultaCreateArgs>(args: SelectSubset<T, ConsultaCreateArgs<ExtArgs>>): Prisma__ConsultaClient<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Consultas.
     * @param {ConsultaCreateManyArgs} args - Arguments to create many Consultas.
     * @example
     * // Create many Consultas
     * const consulta = await prisma.consulta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConsultaCreateManyArgs>(args?: SelectSubset<T, ConsultaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Consultas and returns the data saved in the database.
     * @param {ConsultaCreateManyAndReturnArgs} args - Arguments to create many Consultas.
     * @example
     * // Create many Consultas
     * const consulta = await prisma.consulta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Consultas and only return the `id_consulta`
     * const consultaWithId_consultaOnly = await prisma.consulta.createManyAndReturn({
     *   select: { id_consulta: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConsultaCreateManyAndReturnArgs>(args?: SelectSubset<T, ConsultaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Consulta.
     * @param {ConsultaDeleteArgs} args - Arguments to delete one Consulta.
     * @example
     * // Delete one Consulta
     * const Consulta = await prisma.consulta.delete({
     *   where: {
     *     // ... filter to delete one Consulta
     *   }
     * })
     * 
     */
    delete<T extends ConsultaDeleteArgs>(args: SelectSubset<T, ConsultaDeleteArgs<ExtArgs>>): Prisma__ConsultaClient<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Consulta.
     * @param {ConsultaUpdateArgs} args - Arguments to update one Consulta.
     * @example
     * // Update one Consulta
     * const consulta = await prisma.consulta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConsultaUpdateArgs>(args: SelectSubset<T, ConsultaUpdateArgs<ExtArgs>>): Prisma__ConsultaClient<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Consultas.
     * @param {ConsultaDeleteManyArgs} args - Arguments to filter Consultas to delete.
     * @example
     * // Delete a few Consultas
     * const { count } = await prisma.consulta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConsultaDeleteManyArgs>(args?: SelectSubset<T, ConsultaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Consultas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Consultas
     * const consulta = await prisma.consulta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConsultaUpdateManyArgs>(args: SelectSubset<T, ConsultaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Consultas and returns the data updated in the database.
     * @param {ConsultaUpdateManyAndReturnArgs} args - Arguments to update many Consultas.
     * @example
     * // Update many Consultas
     * const consulta = await prisma.consulta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Consultas and only return the `id_consulta`
     * const consultaWithId_consultaOnly = await prisma.consulta.updateManyAndReturn({
     *   select: { id_consulta: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ConsultaUpdateManyAndReturnArgs>(args: SelectSubset<T, ConsultaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Consulta.
     * @param {ConsultaUpsertArgs} args - Arguments to update or create a Consulta.
     * @example
     * // Update or create a Consulta
     * const consulta = await prisma.consulta.upsert({
     *   create: {
     *     // ... data to create a Consulta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Consulta we want to update
     *   }
     * })
     */
    upsert<T extends ConsultaUpsertArgs>(args: SelectSubset<T, ConsultaUpsertArgs<ExtArgs>>): Prisma__ConsultaClient<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Consultas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaCountArgs} args - Arguments to filter Consultas to count.
     * @example
     * // Count the number of Consultas
     * const count = await prisma.consulta.count({
     *   where: {
     *     // ... the filter for the Consultas we want to count
     *   }
     * })
    **/
    count<T extends ConsultaCountArgs>(
      args?: Subset<T, ConsultaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConsultaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Consulta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConsultaAggregateArgs>(args: Subset<T, ConsultaAggregateArgs>): Prisma.PrismaPromise<GetConsultaAggregateType<T>>

    /**
     * Group by Consulta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConsultaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConsultaGroupByArgs['orderBy'] }
        : { orderBy?: ConsultaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConsultaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConsultaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Consulta model
   */
  readonly fields: ConsultaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Consulta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConsultaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clinica<T extends ClinicaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClinicaDefaultArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    paciente<T extends PacienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PacienteDefaultArgs<ExtArgs>>): Prisma__PacienteClient<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    profissional<T extends ProfissionalDaSaudeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfissionalDaSaudeDefaultArgs<ExtArgs>>): Prisma__ProfissionalDaSaudeClient<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    procedimentos<T extends Consulta$procedimentosArgs<ExtArgs> = {}>(args?: Subset<T, Consulta$procedimentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultaProcedimentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    avaliacoes<T extends Consulta$avaliacoesArgs<ExtArgs> = {}>(args?: Subset<T, Consulta$avaliacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    convenio<T extends Consulta$convenioArgs<ExtArgs> = {}>(args?: Subset<T, Consulta$convenioArgs<ExtArgs>>): Prisma__ConvenioClient<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Consulta model
   */
  interface ConsultaFieldRefs {
    readonly id_consulta: FieldRef<"Consulta", 'Int'>
    readonly data_hora_inicio: FieldRef<"Consulta", 'DateTime'>
    readonly data_hora_fim: FieldRef<"Consulta", 'DateTime'>
    readonly valor: FieldRef<"Consulta", 'Float'>
    readonly telemedicina: FieldRef<"Consulta", 'Boolean'>
    readonly status: FieldRef<"Consulta", 'String'>
    readonly observacoes: FieldRef<"Consulta", 'String'>
    readonly paciente_id: FieldRef<"Consulta", 'Int'>
    readonly profissional_id: FieldRef<"Consulta", 'Int'>
    readonly id_clinica: FieldRef<"Consulta", 'Int'>
    readonly id_convenio: FieldRef<"Consulta", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Consulta findUnique
   */
  export type ConsultaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
    /**
     * Filter, which Consulta to fetch.
     */
    where: ConsultaWhereUniqueInput
  }

  /**
   * Consulta findUniqueOrThrow
   */
  export type ConsultaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
    /**
     * Filter, which Consulta to fetch.
     */
    where: ConsultaWhereUniqueInput
  }

  /**
   * Consulta findFirst
   */
  export type ConsultaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
    /**
     * Filter, which Consulta to fetch.
     */
    where?: ConsultaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Consultas to fetch.
     */
    orderBy?: ConsultaOrderByWithRelationInput | ConsultaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Consultas.
     */
    cursor?: ConsultaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Consultas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Consultas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Consultas.
     */
    distinct?: ConsultaScalarFieldEnum | ConsultaScalarFieldEnum[]
  }

  /**
   * Consulta findFirstOrThrow
   */
  export type ConsultaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
    /**
     * Filter, which Consulta to fetch.
     */
    where?: ConsultaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Consultas to fetch.
     */
    orderBy?: ConsultaOrderByWithRelationInput | ConsultaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Consultas.
     */
    cursor?: ConsultaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Consultas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Consultas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Consultas.
     */
    distinct?: ConsultaScalarFieldEnum | ConsultaScalarFieldEnum[]
  }

  /**
   * Consulta findMany
   */
  export type ConsultaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
    /**
     * Filter, which Consultas to fetch.
     */
    where?: ConsultaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Consultas to fetch.
     */
    orderBy?: ConsultaOrderByWithRelationInput | ConsultaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Consultas.
     */
    cursor?: ConsultaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Consultas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Consultas.
     */
    skip?: number
    distinct?: ConsultaScalarFieldEnum | ConsultaScalarFieldEnum[]
  }

  /**
   * Consulta create
   */
  export type ConsultaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
    /**
     * The data needed to create a Consulta.
     */
    data: XOR<ConsultaCreateInput, ConsultaUncheckedCreateInput>
  }

  /**
   * Consulta createMany
   */
  export type ConsultaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Consultas.
     */
    data: ConsultaCreateManyInput | ConsultaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Consulta createManyAndReturn
   */
  export type ConsultaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * The data used to create many Consultas.
     */
    data: ConsultaCreateManyInput | ConsultaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Consulta update
   */
  export type ConsultaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
    /**
     * The data needed to update a Consulta.
     */
    data: XOR<ConsultaUpdateInput, ConsultaUncheckedUpdateInput>
    /**
     * Choose, which Consulta to update.
     */
    where: ConsultaWhereUniqueInput
  }

  /**
   * Consulta updateMany
   */
  export type ConsultaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Consultas.
     */
    data: XOR<ConsultaUpdateManyMutationInput, ConsultaUncheckedUpdateManyInput>
    /**
     * Filter which Consultas to update
     */
    where?: ConsultaWhereInput
    /**
     * Limit how many Consultas to update.
     */
    limit?: number
  }

  /**
   * Consulta updateManyAndReturn
   */
  export type ConsultaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * The data used to update Consultas.
     */
    data: XOR<ConsultaUpdateManyMutationInput, ConsultaUncheckedUpdateManyInput>
    /**
     * Filter which Consultas to update
     */
    where?: ConsultaWhereInput
    /**
     * Limit how many Consultas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Consulta upsert
   */
  export type ConsultaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
    /**
     * The filter to search for the Consulta to update in case it exists.
     */
    where: ConsultaWhereUniqueInput
    /**
     * In case the Consulta found by the `where` argument doesn't exist, create a new Consulta with this data.
     */
    create: XOR<ConsultaCreateInput, ConsultaUncheckedCreateInput>
    /**
     * In case the Consulta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConsultaUpdateInput, ConsultaUncheckedUpdateInput>
  }

  /**
   * Consulta delete
   */
  export type ConsultaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
    /**
     * Filter which Consulta to delete.
     */
    where: ConsultaWhereUniqueInput
  }

  /**
   * Consulta deleteMany
   */
  export type ConsultaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Consultas to delete
     */
    where?: ConsultaWhereInput
    /**
     * Limit how many Consultas to delete.
     */
    limit?: number
  }

  /**
   * Consulta.procedimentos
   */
  export type Consulta$procedimentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoInclude<ExtArgs> | null
    where?: ConsultaProcedimentoWhereInput
    orderBy?: ConsultaProcedimentoOrderByWithRelationInput | ConsultaProcedimentoOrderByWithRelationInput[]
    cursor?: ConsultaProcedimentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConsultaProcedimentoScalarFieldEnum | ConsultaProcedimentoScalarFieldEnum[]
  }

  /**
   * Consulta.avaliacoes
   */
  export type Consulta$avaliacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    where?: AvaliacaoWhereInput
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    cursor?: AvaliacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Consulta.convenio
   */
  export type Consulta$convenioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioInclude<ExtArgs> | null
    where?: ConvenioWhereInput
  }

  /**
   * Consulta without action
   */
  export type ConsultaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
  }


  /**
   * Model Avaliacao
   */

  export type AggregateAvaliacao = {
    _count: AvaliacaoCountAggregateOutputType | null
    _avg: AvaliacaoAvgAggregateOutputType | null
    _sum: AvaliacaoSumAggregateOutputType | null
    _min: AvaliacaoMinAggregateOutputType | null
    _max: AvaliacaoMaxAggregateOutputType | null
  }

  export type AvaliacaoAvgAggregateOutputType = {
    id_avaliacao: number | null
    consulta_id: number | null
    id_clinica: number | null
  }

  export type AvaliacaoSumAggregateOutputType = {
    id_avaliacao: number | null
    consulta_id: number | null
    id_clinica: number | null
  }

  export type AvaliacaoMinAggregateOutputType = {
    id_avaliacao: number | null
    consulta_id: number | null
    data_avaliacao: Date | null
    descricao: string | null
    parecer_profissional: string | null
    id_clinica: number | null
  }

  export type AvaliacaoMaxAggregateOutputType = {
    id_avaliacao: number | null
    consulta_id: number | null
    data_avaliacao: Date | null
    descricao: string | null
    parecer_profissional: string | null
    id_clinica: number | null
  }

  export type AvaliacaoCountAggregateOutputType = {
    id_avaliacao: number
    consulta_id: number
    data_avaliacao: number
    descricao: number
    parecer_profissional: number
    id_clinica: number
    _all: number
  }


  export type AvaliacaoAvgAggregateInputType = {
    id_avaliacao?: true
    consulta_id?: true
    id_clinica?: true
  }

  export type AvaliacaoSumAggregateInputType = {
    id_avaliacao?: true
    consulta_id?: true
    id_clinica?: true
  }

  export type AvaliacaoMinAggregateInputType = {
    id_avaliacao?: true
    consulta_id?: true
    data_avaliacao?: true
    descricao?: true
    parecer_profissional?: true
    id_clinica?: true
  }

  export type AvaliacaoMaxAggregateInputType = {
    id_avaliacao?: true
    consulta_id?: true
    data_avaliacao?: true
    descricao?: true
    parecer_profissional?: true
    id_clinica?: true
  }

  export type AvaliacaoCountAggregateInputType = {
    id_avaliacao?: true
    consulta_id?: true
    data_avaliacao?: true
    descricao?: true
    parecer_profissional?: true
    id_clinica?: true
    _all?: true
  }

  export type AvaliacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Avaliacao to aggregate.
     */
    where?: AvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacaos to fetch.
     */
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Avaliacaos
    **/
    _count?: true | AvaliacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AvaliacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AvaliacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AvaliacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AvaliacaoMaxAggregateInputType
  }

  export type GetAvaliacaoAggregateType<T extends AvaliacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateAvaliacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAvaliacao[P]>
      : GetScalarType<T[P], AggregateAvaliacao[P]>
  }




  export type AvaliacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvaliacaoWhereInput
    orderBy?: AvaliacaoOrderByWithAggregationInput | AvaliacaoOrderByWithAggregationInput[]
    by: AvaliacaoScalarFieldEnum[] | AvaliacaoScalarFieldEnum
    having?: AvaliacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AvaliacaoCountAggregateInputType | true
    _avg?: AvaliacaoAvgAggregateInputType
    _sum?: AvaliacaoSumAggregateInputType
    _min?: AvaliacaoMinAggregateInputType
    _max?: AvaliacaoMaxAggregateInputType
  }

  export type AvaliacaoGroupByOutputType = {
    id_avaliacao: number
    consulta_id: number
    data_avaliacao: Date
    descricao: string | null
    parecer_profissional: string | null
    id_clinica: number
    _count: AvaliacaoCountAggregateOutputType | null
    _avg: AvaliacaoAvgAggregateOutputType | null
    _sum: AvaliacaoSumAggregateOutputType | null
    _min: AvaliacaoMinAggregateOutputType | null
    _max: AvaliacaoMaxAggregateOutputType | null
  }

  type GetAvaliacaoGroupByPayload<T extends AvaliacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AvaliacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AvaliacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AvaliacaoGroupByOutputType[P]>
            : GetScalarType<T[P], AvaliacaoGroupByOutputType[P]>
        }
      >
    >


  export type AvaliacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_avaliacao?: boolean
    consulta_id?: boolean
    data_avaliacao?: boolean
    descricao?: boolean
    parecer_profissional?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    consulta?: boolean | ConsultaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["avaliacao"]>

  export type AvaliacaoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_avaliacao?: boolean
    consulta_id?: boolean
    data_avaliacao?: boolean
    descricao?: boolean
    parecer_profissional?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    consulta?: boolean | ConsultaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["avaliacao"]>

  export type AvaliacaoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_avaliacao?: boolean
    consulta_id?: boolean
    data_avaliacao?: boolean
    descricao?: boolean
    parecer_profissional?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    consulta?: boolean | ConsultaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["avaliacao"]>

  export type AvaliacaoSelectScalar = {
    id_avaliacao?: boolean
    consulta_id?: boolean
    data_avaliacao?: boolean
    descricao?: boolean
    parecer_profissional?: boolean
    id_clinica?: boolean
  }

  export type AvaliacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_avaliacao" | "consulta_id" | "data_avaliacao" | "descricao" | "parecer_profissional" | "id_clinica", ExtArgs["result"]["avaliacao"]>
  export type AvaliacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    consulta?: boolean | ConsultaDefaultArgs<ExtArgs>
  }
  export type AvaliacaoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    consulta?: boolean | ConsultaDefaultArgs<ExtArgs>
  }
  export type AvaliacaoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    consulta?: boolean | ConsultaDefaultArgs<ExtArgs>
  }

  export type $AvaliacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Avaliacao"
    objects: {
      clinica: Prisma.$ClinicaPayload<ExtArgs>
      consulta: Prisma.$ConsultaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_avaliacao: number
      consulta_id: number
      data_avaliacao: Date
      descricao: string | null
      parecer_profissional: string | null
      id_clinica: number
    }, ExtArgs["result"]["avaliacao"]>
    composites: {}
  }

  type AvaliacaoGetPayload<S extends boolean | null | undefined | AvaliacaoDefaultArgs> = $Result.GetResult<Prisma.$AvaliacaoPayload, S>

  type AvaliacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AvaliacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AvaliacaoCountAggregateInputType | true
    }

  export interface AvaliacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Avaliacao'], meta: { name: 'Avaliacao' } }
    /**
     * Find zero or one Avaliacao that matches the filter.
     * @param {AvaliacaoFindUniqueArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AvaliacaoFindUniqueArgs>(args: SelectSubset<T, AvaliacaoFindUniqueArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Avaliacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AvaliacaoFindUniqueOrThrowArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AvaliacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, AvaliacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Avaliacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoFindFirstArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AvaliacaoFindFirstArgs>(args?: SelectSubset<T, AvaliacaoFindFirstArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Avaliacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoFindFirstOrThrowArgs} args - Arguments to find a Avaliacao
     * @example
     * // Get one Avaliacao
     * const avaliacao = await prisma.avaliacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AvaliacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, AvaliacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Avaliacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Avaliacaos
     * const avaliacaos = await prisma.avaliacao.findMany()
     * 
     * // Get first 10 Avaliacaos
     * const avaliacaos = await prisma.avaliacao.findMany({ take: 10 })
     * 
     * // Only select the `id_avaliacao`
     * const avaliacaoWithId_avaliacaoOnly = await prisma.avaliacao.findMany({ select: { id_avaliacao: true } })
     * 
     */
    findMany<T extends AvaliacaoFindManyArgs>(args?: SelectSubset<T, AvaliacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Avaliacao.
     * @param {AvaliacaoCreateArgs} args - Arguments to create a Avaliacao.
     * @example
     * // Create one Avaliacao
     * const Avaliacao = await prisma.avaliacao.create({
     *   data: {
     *     // ... data to create a Avaliacao
     *   }
     * })
     * 
     */
    create<T extends AvaliacaoCreateArgs>(args: SelectSubset<T, AvaliacaoCreateArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Avaliacaos.
     * @param {AvaliacaoCreateManyArgs} args - Arguments to create many Avaliacaos.
     * @example
     * // Create many Avaliacaos
     * const avaliacao = await prisma.avaliacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AvaliacaoCreateManyArgs>(args?: SelectSubset<T, AvaliacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Avaliacaos and returns the data saved in the database.
     * @param {AvaliacaoCreateManyAndReturnArgs} args - Arguments to create many Avaliacaos.
     * @example
     * // Create many Avaliacaos
     * const avaliacao = await prisma.avaliacao.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Avaliacaos and only return the `id_avaliacao`
     * const avaliacaoWithId_avaliacaoOnly = await prisma.avaliacao.createManyAndReturn({
     *   select: { id_avaliacao: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AvaliacaoCreateManyAndReturnArgs>(args?: SelectSubset<T, AvaliacaoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Avaliacao.
     * @param {AvaliacaoDeleteArgs} args - Arguments to delete one Avaliacao.
     * @example
     * // Delete one Avaliacao
     * const Avaliacao = await prisma.avaliacao.delete({
     *   where: {
     *     // ... filter to delete one Avaliacao
     *   }
     * })
     * 
     */
    delete<T extends AvaliacaoDeleteArgs>(args: SelectSubset<T, AvaliacaoDeleteArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Avaliacao.
     * @param {AvaliacaoUpdateArgs} args - Arguments to update one Avaliacao.
     * @example
     * // Update one Avaliacao
     * const avaliacao = await prisma.avaliacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AvaliacaoUpdateArgs>(args: SelectSubset<T, AvaliacaoUpdateArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Avaliacaos.
     * @param {AvaliacaoDeleteManyArgs} args - Arguments to filter Avaliacaos to delete.
     * @example
     * // Delete a few Avaliacaos
     * const { count } = await prisma.avaliacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AvaliacaoDeleteManyArgs>(args?: SelectSubset<T, AvaliacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Avaliacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Avaliacaos
     * const avaliacao = await prisma.avaliacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AvaliacaoUpdateManyArgs>(args: SelectSubset<T, AvaliacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Avaliacaos and returns the data updated in the database.
     * @param {AvaliacaoUpdateManyAndReturnArgs} args - Arguments to update many Avaliacaos.
     * @example
     * // Update many Avaliacaos
     * const avaliacao = await prisma.avaliacao.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Avaliacaos and only return the `id_avaliacao`
     * const avaliacaoWithId_avaliacaoOnly = await prisma.avaliacao.updateManyAndReturn({
     *   select: { id_avaliacao: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AvaliacaoUpdateManyAndReturnArgs>(args: SelectSubset<T, AvaliacaoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Avaliacao.
     * @param {AvaliacaoUpsertArgs} args - Arguments to update or create a Avaliacao.
     * @example
     * // Update or create a Avaliacao
     * const avaliacao = await prisma.avaliacao.upsert({
     *   create: {
     *     // ... data to create a Avaliacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Avaliacao we want to update
     *   }
     * })
     */
    upsert<T extends AvaliacaoUpsertArgs>(args: SelectSubset<T, AvaliacaoUpsertArgs<ExtArgs>>): Prisma__AvaliacaoClient<$Result.GetResult<Prisma.$AvaliacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Avaliacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoCountArgs} args - Arguments to filter Avaliacaos to count.
     * @example
     * // Count the number of Avaliacaos
     * const count = await prisma.avaliacao.count({
     *   where: {
     *     // ... the filter for the Avaliacaos we want to count
     *   }
     * })
    **/
    count<T extends AvaliacaoCountArgs>(
      args?: Subset<T, AvaliacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AvaliacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Avaliacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AvaliacaoAggregateArgs>(args: Subset<T, AvaliacaoAggregateArgs>): Prisma.PrismaPromise<GetAvaliacaoAggregateType<T>>

    /**
     * Group by Avaliacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvaliacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AvaliacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AvaliacaoGroupByArgs['orderBy'] }
        : { orderBy?: AvaliacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AvaliacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAvaliacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Avaliacao model
   */
  readonly fields: AvaliacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Avaliacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AvaliacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clinica<T extends ClinicaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClinicaDefaultArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    consulta<T extends ConsultaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConsultaDefaultArgs<ExtArgs>>): Prisma__ConsultaClient<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Avaliacao model
   */
  interface AvaliacaoFieldRefs {
    readonly id_avaliacao: FieldRef<"Avaliacao", 'Int'>
    readonly consulta_id: FieldRef<"Avaliacao", 'Int'>
    readonly data_avaliacao: FieldRef<"Avaliacao", 'DateTime'>
    readonly descricao: FieldRef<"Avaliacao", 'String'>
    readonly parecer_profissional: FieldRef<"Avaliacao", 'String'>
    readonly id_clinica: FieldRef<"Avaliacao", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Avaliacao findUnique
   */
  export type AvaliacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao to fetch.
     */
    where: AvaliacaoWhereUniqueInput
  }

  /**
   * Avaliacao findUniqueOrThrow
   */
  export type AvaliacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao to fetch.
     */
    where: AvaliacaoWhereUniqueInput
  }

  /**
   * Avaliacao findFirst
   */
  export type AvaliacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao to fetch.
     */
    where?: AvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacaos to fetch.
     */
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Avaliacaos.
     */
    cursor?: AvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Avaliacaos.
     */
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Avaliacao findFirstOrThrow
   */
  export type AvaliacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacao to fetch.
     */
    where?: AvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacaos to fetch.
     */
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Avaliacaos.
     */
    cursor?: AvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Avaliacaos.
     */
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Avaliacao findMany
   */
  export type AvaliacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter, which Avaliacaos to fetch.
     */
    where?: AvaliacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avaliacaos to fetch.
     */
    orderBy?: AvaliacaoOrderByWithRelationInput | AvaliacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Avaliacaos.
     */
    cursor?: AvaliacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avaliacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avaliacaos.
     */
    skip?: number
    distinct?: AvaliacaoScalarFieldEnum | AvaliacaoScalarFieldEnum[]
  }

  /**
   * Avaliacao create
   */
  export type AvaliacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Avaliacao.
     */
    data: XOR<AvaliacaoCreateInput, AvaliacaoUncheckedCreateInput>
  }

  /**
   * Avaliacao createMany
   */
  export type AvaliacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Avaliacaos.
     */
    data: AvaliacaoCreateManyInput | AvaliacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Avaliacao createManyAndReturn
   */
  export type AvaliacaoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * The data used to create many Avaliacaos.
     */
    data: AvaliacaoCreateManyInput | AvaliacaoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Avaliacao update
   */
  export type AvaliacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Avaliacao.
     */
    data: XOR<AvaliacaoUpdateInput, AvaliacaoUncheckedUpdateInput>
    /**
     * Choose, which Avaliacao to update.
     */
    where: AvaliacaoWhereUniqueInput
  }

  /**
   * Avaliacao updateMany
   */
  export type AvaliacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Avaliacaos.
     */
    data: XOR<AvaliacaoUpdateManyMutationInput, AvaliacaoUncheckedUpdateManyInput>
    /**
     * Filter which Avaliacaos to update
     */
    where?: AvaliacaoWhereInput
    /**
     * Limit how many Avaliacaos to update.
     */
    limit?: number
  }

  /**
   * Avaliacao updateManyAndReturn
   */
  export type AvaliacaoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * The data used to update Avaliacaos.
     */
    data: XOR<AvaliacaoUpdateManyMutationInput, AvaliacaoUncheckedUpdateManyInput>
    /**
     * Filter which Avaliacaos to update
     */
    where?: AvaliacaoWhereInput
    /**
     * Limit how many Avaliacaos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Avaliacao upsert
   */
  export type AvaliacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Avaliacao to update in case it exists.
     */
    where: AvaliacaoWhereUniqueInput
    /**
     * In case the Avaliacao found by the `where` argument doesn't exist, create a new Avaliacao with this data.
     */
    create: XOR<AvaliacaoCreateInput, AvaliacaoUncheckedCreateInput>
    /**
     * In case the Avaliacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AvaliacaoUpdateInput, AvaliacaoUncheckedUpdateInput>
  }

  /**
   * Avaliacao delete
   */
  export type AvaliacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
    /**
     * Filter which Avaliacao to delete.
     */
    where: AvaliacaoWhereUniqueInput
  }

  /**
   * Avaliacao deleteMany
   */
  export type AvaliacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Avaliacaos to delete
     */
    where?: AvaliacaoWhereInput
    /**
     * Limit how many Avaliacaos to delete.
     */
    limit?: number
  }

  /**
   * Avaliacao without action
   */
  export type AvaliacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avaliacao
     */
    select?: AvaliacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avaliacao
     */
    omit?: AvaliacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvaliacaoInclude<ExtArgs> | null
  }


  /**
   * Model Procedimento
   */

  export type AggregateProcedimento = {
    _count: ProcedimentoCountAggregateOutputType | null
    _avg: ProcedimentoAvgAggregateOutputType | null
    _sum: ProcedimentoSumAggregateOutputType | null
    _min: ProcedimentoMinAggregateOutputType | null
    _max: ProcedimentoMaxAggregateOutputType | null
  }

  export type ProcedimentoAvgAggregateOutputType = {
    id_procedimento: number | null
    valor: number | null
    duracao_minutos: number | null
    id_clinica: number | null
  }

  export type ProcedimentoSumAggregateOutputType = {
    id_procedimento: number | null
    valor: number | null
    duracao_minutos: number | null
    id_clinica: number | null
  }

  export type ProcedimentoMinAggregateOutputType = {
    id_procedimento: number | null
    nome_procedimento: string | null
    tipo: string | null
    valor: number | null
    duracao_minutos: number | null
    telemedicina: boolean | null
    descricao: string | null
    ativo: boolean | null
    criado_em: Date | null
    atualizado_em: Date | null
    id_clinica: number | null
  }

  export type ProcedimentoMaxAggregateOutputType = {
    id_procedimento: number | null
    nome_procedimento: string | null
    tipo: string | null
    valor: number | null
    duracao_minutos: number | null
    telemedicina: boolean | null
    descricao: string | null
    ativo: boolean | null
    criado_em: Date | null
    atualizado_em: Date | null
    id_clinica: number | null
  }

  export type ProcedimentoCountAggregateOutputType = {
    id_procedimento: number
    nome_procedimento: number
    tipo: number
    valor: number
    duracao_minutos: number
    telemedicina: number
    descricao: number
    ativo: number
    criado_em: number
    atualizado_em: number
    id_clinica: number
    _all: number
  }


  export type ProcedimentoAvgAggregateInputType = {
    id_procedimento?: true
    valor?: true
    duracao_minutos?: true
    id_clinica?: true
  }

  export type ProcedimentoSumAggregateInputType = {
    id_procedimento?: true
    valor?: true
    duracao_minutos?: true
    id_clinica?: true
  }

  export type ProcedimentoMinAggregateInputType = {
    id_procedimento?: true
    nome_procedimento?: true
    tipo?: true
    valor?: true
    duracao_minutos?: true
    telemedicina?: true
    descricao?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
    id_clinica?: true
  }

  export type ProcedimentoMaxAggregateInputType = {
    id_procedimento?: true
    nome_procedimento?: true
    tipo?: true
    valor?: true
    duracao_minutos?: true
    telemedicina?: true
    descricao?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
    id_clinica?: true
  }

  export type ProcedimentoCountAggregateInputType = {
    id_procedimento?: true
    nome_procedimento?: true
    tipo?: true
    valor?: true
    duracao_minutos?: true
    telemedicina?: true
    descricao?: true
    ativo?: true
    criado_em?: true
    atualizado_em?: true
    id_clinica?: true
    _all?: true
  }

  export type ProcedimentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Procedimento to aggregate.
     */
    where?: ProcedimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Procedimentos to fetch.
     */
    orderBy?: ProcedimentoOrderByWithRelationInput | ProcedimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProcedimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Procedimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Procedimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Procedimentos
    **/
    _count?: true | ProcedimentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProcedimentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProcedimentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProcedimentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProcedimentoMaxAggregateInputType
  }

  export type GetProcedimentoAggregateType<T extends ProcedimentoAggregateArgs> = {
        [P in keyof T & keyof AggregateProcedimento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProcedimento[P]>
      : GetScalarType<T[P], AggregateProcedimento[P]>
  }




  export type ProcedimentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProcedimentoWhereInput
    orderBy?: ProcedimentoOrderByWithAggregationInput | ProcedimentoOrderByWithAggregationInput[]
    by: ProcedimentoScalarFieldEnum[] | ProcedimentoScalarFieldEnum
    having?: ProcedimentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProcedimentoCountAggregateInputType | true
    _avg?: ProcedimentoAvgAggregateInputType
    _sum?: ProcedimentoSumAggregateInputType
    _min?: ProcedimentoMinAggregateInputType
    _max?: ProcedimentoMaxAggregateInputType
  }

  export type ProcedimentoGroupByOutputType = {
    id_procedimento: number
    nome_procedimento: string
    tipo: string
    valor: number
    duracao_minutos: number
    telemedicina: boolean
    descricao: string | null
    ativo: boolean
    criado_em: Date
    atualizado_em: Date | null
    id_clinica: number
    _count: ProcedimentoCountAggregateOutputType | null
    _avg: ProcedimentoAvgAggregateOutputType | null
    _sum: ProcedimentoSumAggregateOutputType | null
    _min: ProcedimentoMinAggregateOutputType | null
    _max: ProcedimentoMaxAggregateOutputType | null
  }

  type GetProcedimentoGroupByPayload<T extends ProcedimentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProcedimentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProcedimentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProcedimentoGroupByOutputType[P]>
            : GetScalarType<T[P], ProcedimentoGroupByOutputType[P]>
        }
      >
    >


  export type ProcedimentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_procedimento?: boolean
    nome_procedimento?: boolean
    tipo?: boolean
    valor?: boolean
    duracao_minutos?: boolean
    telemedicina?: boolean
    descricao?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    consultas?: boolean | Procedimento$consultasArgs<ExtArgs>
    _count?: boolean | ProcedimentoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["procedimento"]>

  export type ProcedimentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_procedimento?: boolean
    nome_procedimento?: boolean
    tipo?: boolean
    valor?: boolean
    duracao_minutos?: boolean
    telemedicina?: boolean
    descricao?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["procedimento"]>

  export type ProcedimentoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_procedimento?: boolean
    nome_procedimento?: boolean
    tipo?: boolean
    valor?: boolean
    duracao_minutos?: boolean
    telemedicina?: boolean
    descricao?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["procedimento"]>

  export type ProcedimentoSelectScalar = {
    id_procedimento?: boolean
    nome_procedimento?: boolean
    tipo?: boolean
    valor?: boolean
    duracao_minutos?: boolean
    telemedicina?: boolean
    descricao?: boolean
    ativo?: boolean
    criado_em?: boolean
    atualizado_em?: boolean
    id_clinica?: boolean
  }

  export type ProcedimentoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_procedimento" | "nome_procedimento" | "tipo" | "valor" | "duracao_minutos" | "telemedicina" | "descricao" | "ativo" | "criado_em" | "atualizado_em" | "id_clinica", ExtArgs["result"]["procedimento"]>
  export type ProcedimentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    consultas?: boolean | Procedimento$consultasArgs<ExtArgs>
    _count?: boolean | ProcedimentoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProcedimentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }
  export type ProcedimentoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }

  export type $ProcedimentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Procedimento"
    objects: {
      clinica: Prisma.$ClinicaPayload<ExtArgs>
      consultas: Prisma.$ConsultaProcedimentoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_procedimento: number
      nome_procedimento: string
      tipo: string
      valor: number
      duracao_minutos: number
      telemedicina: boolean
      descricao: string | null
      ativo: boolean
      criado_em: Date
      atualizado_em: Date | null
      id_clinica: number
    }, ExtArgs["result"]["procedimento"]>
    composites: {}
  }

  type ProcedimentoGetPayload<S extends boolean | null | undefined | ProcedimentoDefaultArgs> = $Result.GetResult<Prisma.$ProcedimentoPayload, S>

  type ProcedimentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProcedimentoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProcedimentoCountAggregateInputType | true
    }

  export interface ProcedimentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Procedimento'], meta: { name: 'Procedimento' } }
    /**
     * Find zero or one Procedimento that matches the filter.
     * @param {ProcedimentoFindUniqueArgs} args - Arguments to find a Procedimento
     * @example
     * // Get one Procedimento
     * const procedimento = await prisma.procedimento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProcedimentoFindUniqueArgs>(args: SelectSubset<T, ProcedimentoFindUniqueArgs<ExtArgs>>): Prisma__ProcedimentoClient<$Result.GetResult<Prisma.$ProcedimentoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Procedimento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProcedimentoFindUniqueOrThrowArgs} args - Arguments to find a Procedimento
     * @example
     * // Get one Procedimento
     * const procedimento = await prisma.procedimento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProcedimentoFindUniqueOrThrowArgs>(args: SelectSubset<T, ProcedimentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProcedimentoClient<$Result.GetResult<Prisma.$ProcedimentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Procedimento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcedimentoFindFirstArgs} args - Arguments to find a Procedimento
     * @example
     * // Get one Procedimento
     * const procedimento = await prisma.procedimento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProcedimentoFindFirstArgs>(args?: SelectSubset<T, ProcedimentoFindFirstArgs<ExtArgs>>): Prisma__ProcedimentoClient<$Result.GetResult<Prisma.$ProcedimentoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Procedimento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcedimentoFindFirstOrThrowArgs} args - Arguments to find a Procedimento
     * @example
     * // Get one Procedimento
     * const procedimento = await prisma.procedimento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProcedimentoFindFirstOrThrowArgs>(args?: SelectSubset<T, ProcedimentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProcedimentoClient<$Result.GetResult<Prisma.$ProcedimentoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Procedimentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcedimentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Procedimentos
     * const procedimentos = await prisma.procedimento.findMany()
     * 
     * // Get first 10 Procedimentos
     * const procedimentos = await prisma.procedimento.findMany({ take: 10 })
     * 
     * // Only select the `id_procedimento`
     * const procedimentoWithId_procedimentoOnly = await prisma.procedimento.findMany({ select: { id_procedimento: true } })
     * 
     */
    findMany<T extends ProcedimentoFindManyArgs>(args?: SelectSubset<T, ProcedimentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProcedimentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Procedimento.
     * @param {ProcedimentoCreateArgs} args - Arguments to create a Procedimento.
     * @example
     * // Create one Procedimento
     * const Procedimento = await prisma.procedimento.create({
     *   data: {
     *     // ... data to create a Procedimento
     *   }
     * })
     * 
     */
    create<T extends ProcedimentoCreateArgs>(args: SelectSubset<T, ProcedimentoCreateArgs<ExtArgs>>): Prisma__ProcedimentoClient<$Result.GetResult<Prisma.$ProcedimentoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Procedimentos.
     * @param {ProcedimentoCreateManyArgs} args - Arguments to create many Procedimentos.
     * @example
     * // Create many Procedimentos
     * const procedimento = await prisma.procedimento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProcedimentoCreateManyArgs>(args?: SelectSubset<T, ProcedimentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Procedimentos and returns the data saved in the database.
     * @param {ProcedimentoCreateManyAndReturnArgs} args - Arguments to create many Procedimentos.
     * @example
     * // Create many Procedimentos
     * const procedimento = await prisma.procedimento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Procedimentos and only return the `id_procedimento`
     * const procedimentoWithId_procedimentoOnly = await prisma.procedimento.createManyAndReturn({
     *   select: { id_procedimento: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProcedimentoCreateManyAndReturnArgs>(args?: SelectSubset<T, ProcedimentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProcedimentoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Procedimento.
     * @param {ProcedimentoDeleteArgs} args - Arguments to delete one Procedimento.
     * @example
     * // Delete one Procedimento
     * const Procedimento = await prisma.procedimento.delete({
     *   where: {
     *     // ... filter to delete one Procedimento
     *   }
     * })
     * 
     */
    delete<T extends ProcedimentoDeleteArgs>(args: SelectSubset<T, ProcedimentoDeleteArgs<ExtArgs>>): Prisma__ProcedimentoClient<$Result.GetResult<Prisma.$ProcedimentoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Procedimento.
     * @param {ProcedimentoUpdateArgs} args - Arguments to update one Procedimento.
     * @example
     * // Update one Procedimento
     * const procedimento = await prisma.procedimento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProcedimentoUpdateArgs>(args: SelectSubset<T, ProcedimentoUpdateArgs<ExtArgs>>): Prisma__ProcedimentoClient<$Result.GetResult<Prisma.$ProcedimentoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Procedimentos.
     * @param {ProcedimentoDeleteManyArgs} args - Arguments to filter Procedimentos to delete.
     * @example
     * // Delete a few Procedimentos
     * const { count } = await prisma.procedimento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProcedimentoDeleteManyArgs>(args?: SelectSubset<T, ProcedimentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Procedimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcedimentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Procedimentos
     * const procedimento = await prisma.procedimento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProcedimentoUpdateManyArgs>(args: SelectSubset<T, ProcedimentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Procedimentos and returns the data updated in the database.
     * @param {ProcedimentoUpdateManyAndReturnArgs} args - Arguments to update many Procedimentos.
     * @example
     * // Update many Procedimentos
     * const procedimento = await prisma.procedimento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Procedimentos and only return the `id_procedimento`
     * const procedimentoWithId_procedimentoOnly = await prisma.procedimento.updateManyAndReturn({
     *   select: { id_procedimento: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProcedimentoUpdateManyAndReturnArgs>(args: SelectSubset<T, ProcedimentoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProcedimentoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Procedimento.
     * @param {ProcedimentoUpsertArgs} args - Arguments to update or create a Procedimento.
     * @example
     * // Update or create a Procedimento
     * const procedimento = await prisma.procedimento.upsert({
     *   create: {
     *     // ... data to create a Procedimento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Procedimento we want to update
     *   }
     * })
     */
    upsert<T extends ProcedimentoUpsertArgs>(args: SelectSubset<T, ProcedimentoUpsertArgs<ExtArgs>>): Prisma__ProcedimentoClient<$Result.GetResult<Prisma.$ProcedimentoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Procedimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcedimentoCountArgs} args - Arguments to filter Procedimentos to count.
     * @example
     * // Count the number of Procedimentos
     * const count = await prisma.procedimento.count({
     *   where: {
     *     // ... the filter for the Procedimentos we want to count
     *   }
     * })
    **/
    count<T extends ProcedimentoCountArgs>(
      args?: Subset<T, ProcedimentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProcedimentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Procedimento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcedimentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProcedimentoAggregateArgs>(args: Subset<T, ProcedimentoAggregateArgs>): Prisma.PrismaPromise<GetProcedimentoAggregateType<T>>

    /**
     * Group by Procedimento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProcedimentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProcedimentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProcedimentoGroupByArgs['orderBy'] }
        : { orderBy?: ProcedimentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProcedimentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProcedimentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Procedimento model
   */
  readonly fields: ProcedimentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Procedimento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProcedimentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clinica<T extends ClinicaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClinicaDefaultArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    consultas<T extends Procedimento$consultasArgs<ExtArgs> = {}>(args?: Subset<T, Procedimento$consultasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultaProcedimentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Procedimento model
   */
  interface ProcedimentoFieldRefs {
    readonly id_procedimento: FieldRef<"Procedimento", 'Int'>
    readonly nome_procedimento: FieldRef<"Procedimento", 'String'>
    readonly tipo: FieldRef<"Procedimento", 'String'>
    readonly valor: FieldRef<"Procedimento", 'Float'>
    readonly duracao_minutos: FieldRef<"Procedimento", 'Int'>
    readonly telemedicina: FieldRef<"Procedimento", 'Boolean'>
    readonly descricao: FieldRef<"Procedimento", 'String'>
    readonly ativo: FieldRef<"Procedimento", 'Boolean'>
    readonly criado_em: FieldRef<"Procedimento", 'DateTime'>
    readonly atualizado_em: FieldRef<"Procedimento", 'DateTime'>
    readonly id_clinica: FieldRef<"Procedimento", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Procedimento findUnique
   */
  export type ProcedimentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Procedimento
     */
    select?: ProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Procedimento
     */
    omit?: ProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcedimentoInclude<ExtArgs> | null
    /**
     * Filter, which Procedimento to fetch.
     */
    where: ProcedimentoWhereUniqueInput
  }

  /**
   * Procedimento findUniqueOrThrow
   */
  export type ProcedimentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Procedimento
     */
    select?: ProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Procedimento
     */
    omit?: ProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcedimentoInclude<ExtArgs> | null
    /**
     * Filter, which Procedimento to fetch.
     */
    where: ProcedimentoWhereUniqueInput
  }

  /**
   * Procedimento findFirst
   */
  export type ProcedimentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Procedimento
     */
    select?: ProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Procedimento
     */
    omit?: ProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcedimentoInclude<ExtArgs> | null
    /**
     * Filter, which Procedimento to fetch.
     */
    where?: ProcedimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Procedimentos to fetch.
     */
    orderBy?: ProcedimentoOrderByWithRelationInput | ProcedimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Procedimentos.
     */
    cursor?: ProcedimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Procedimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Procedimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Procedimentos.
     */
    distinct?: ProcedimentoScalarFieldEnum | ProcedimentoScalarFieldEnum[]
  }

  /**
   * Procedimento findFirstOrThrow
   */
  export type ProcedimentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Procedimento
     */
    select?: ProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Procedimento
     */
    omit?: ProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcedimentoInclude<ExtArgs> | null
    /**
     * Filter, which Procedimento to fetch.
     */
    where?: ProcedimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Procedimentos to fetch.
     */
    orderBy?: ProcedimentoOrderByWithRelationInput | ProcedimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Procedimentos.
     */
    cursor?: ProcedimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Procedimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Procedimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Procedimentos.
     */
    distinct?: ProcedimentoScalarFieldEnum | ProcedimentoScalarFieldEnum[]
  }

  /**
   * Procedimento findMany
   */
  export type ProcedimentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Procedimento
     */
    select?: ProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Procedimento
     */
    omit?: ProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcedimentoInclude<ExtArgs> | null
    /**
     * Filter, which Procedimentos to fetch.
     */
    where?: ProcedimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Procedimentos to fetch.
     */
    orderBy?: ProcedimentoOrderByWithRelationInput | ProcedimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Procedimentos.
     */
    cursor?: ProcedimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Procedimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Procedimentos.
     */
    skip?: number
    distinct?: ProcedimentoScalarFieldEnum | ProcedimentoScalarFieldEnum[]
  }

  /**
   * Procedimento create
   */
  export type ProcedimentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Procedimento
     */
    select?: ProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Procedimento
     */
    omit?: ProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcedimentoInclude<ExtArgs> | null
    /**
     * The data needed to create a Procedimento.
     */
    data: XOR<ProcedimentoCreateInput, ProcedimentoUncheckedCreateInput>
  }

  /**
   * Procedimento createMany
   */
  export type ProcedimentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Procedimentos.
     */
    data: ProcedimentoCreateManyInput | ProcedimentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Procedimento createManyAndReturn
   */
  export type ProcedimentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Procedimento
     */
    select?: ProcedimentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Procedimento
     */
    omit?: ProcedimentoOmit<ExtArgs> | null
    /**
     * The data used to create many Procedimentos.
     */
    data: ProcedimentoCreateManyInput | ProcedimentoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcedimentoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Procedimento update
   */
  export type ProcedimentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Procedimento
     */
    select?: ProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Procedimento
     */
    omit?: ProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcedimentoInclude<ExtArgs> | null
    /**
     * The data needed to update a Procedimento.
     */
    data: XOR<ProcedimentoUpdateInput, ProcedimentoUncheckedUpdateInput>
    /**
     * Choose, which Procedimento to update.
     */
    where: ProcedimentoWhereUniqueInput
  }

  /**
   * Procedimento updateMany
   */
  export type ProcedimentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Procedimentos.
     */
    data: XOR<ProcedimentoUpdateManyMutationInput, ProcedimentoUncheckedUpdateManyInput>
    /**
     * Filter which Procedimentos to update
     */
    where?: ProcedimentoWhereInput
    /**
     * Limit how many Procedimentos to update.
     */
    limit?: number
  }

  /**
   * Procedimento updateManyAndReturn
   */
  export type ProcedimentoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Procedimento
     */
    select?: ProcedimentoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Procedimento
     */
    omit?: ProcedimentoOmit<ExtArgs> | null
    /**
     * The data used to update Procedimentos.
     */
    data: XOR<ProcedimentoUpdateManyMutationInput, ProcedimentoUncheckedUpdateManyInput>
    /**
     * Filter which Procedimentos to update
     */
    where?: ProcedimentoWhereInput
    /**
     * Limit how many Procedimentos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcedimentoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Procedimento upsert
   */
  export type ProcedimentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Procedimento
     */
    select?: ProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Procedimento
     */
    omit?: ProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcedimentoInclude<ExtArgs> | null
    /**
     * The filter to search for the Procedimento to update in case it exists.
     */
    where: ProcedimentoWhereUniqueInput
    /**
     * In case the Procedimento found by the `where` argument doesn't exist, create a new Procedimento with this data.
     */
    create: XOR<ProcedimentoCreateInput, ProcedimentoUncheckedCreateInput>
    /**
     * In case the Procedimento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProcedimentoUpdateInput, ProcedimentoUncheckedUpdateInput>
  }

  /**
   * Procedimento delete
   */
  export type ProcedimentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Procedimento
     */
    select?: ProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Procedimento
     */
    omit?: ProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcedimentoInclude<ExtArgs> | null
    /**
     * Filter which Procedimento to delete.
     */
    where: ProcedimentoWhereUniqueInput
  }

  /**
   * Procedimento deleteMany
   */
  export type ProcedimentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Procedimentos to delete
     */
    where?: ProcedimentoWhereInput
    /**
     * Limit how many Procedimentos to delete.
     */
    limit?: number
  }

  /**
   * Procedimento.consultas
   */
  export type Procedimento$consultasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoInclude<ExtArgs> | null
    where?: ConsultaProcedimentoWhereInput
    orderBy?: ConsultaProcedimentoOrderByWithRelationInput | ConsultaProcedimentoOrderByWithRelationInput[]
    cursor?: ConsultaProcedimentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConsultaProcedimentoScalarFieldEnum | ConsultaProcedimentoScalarFieldEnum[]
  }

  /**
   * Procedimento without action
   */
  export type ProcedimentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Procedimento
     */
    select?: ProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Procedimento
     */
    omit?: ProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProcedimentoInclude<ExtArgs> | null
  }


  /**
   * Model ConsultaProcedimento
   */

  export type AggregateConsultaProcedimento = {
    _count: ConsultaProcedimentoCountAggregateOutputType | null
    _avg: ConsultaProcedimentoAvgAggregateOutputType | null
    _sum: ConsultaProcedimentoSumAggregateOutputType | null
    _min: ConsultaProcedimentoMinAggregateOutputType | null
    _max: ConsultaProcedimentoMaxAggregateOutputType | null
  }

  export type ConsultaProcedimentoAvgAggregateOutputType = {
    consulta_id: number | null
    procedimento_id: number | null
  }

  export type ConsultaProcedimentoSumAggregateOutputType = {
    consulta_id: number | null
    procedimento_id: number | null
  }

  export type ConsultaProcedimentoMinAggregateOutputType = {
    consulta_id: number | null
    procedimento_id: number | null
  }

  export type ConsultaProcedimentoMaxAggregateOutputType = {
    consulta_id: number | null
    procedimento_id: number | null
  }

  export type ConsultaProcedimentoCountAggregateOutputType = {
    consulta_id: number
    procedimento_id: number
    _all: number
  }


  export type ConsultaProcedimentoAvgAggregateInputType = {
    consulta_id?: true
    procedimento_id?: true
  }

  export type ConsultaProcedimentoSumAggregateInputType = {
    consulta_id?: true
    procedimento_id?: true
  }

  export type ConsultaProcedimentoMinAggregateInputType = {
    consulta_id?: true
    procedimento_id?: true
  }

  export type ConsultaProcedimentoMaxAggregateInputType = {
    consulta_id?: true
    procedimento_id?: true
  }

  export type ConsultaProcedimentoCountAggregateInputType = {
    consulta_id?: true
    procedimento_id?: true
    _all?: true
  }

  export type ConsultaProcedimentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConsultaProcedimento to aggregate.
     */
    where?: ConsultaProcedimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConsultaProcedimentos to fetch.
     */
    orderBy?: ConsultaProcedimentoOrderByWithRelationInput | ConsultaProcedimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConsultaProcedimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConsultaProcedimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConsultaProcedimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ConsultaProcedimentos
    **/
    _count?: true | ConsultaProcedimentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConsultaProcedimentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConsultaProcedimentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConsultaProcedimentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConsultaProcedimentoMaxAggregateInputType
  }

  export type GetConsultaProcedimentoAggregateType<T extends ConsultaProcedimentoAggregateArgs> = {
        [P in keyof T & keyof AggregateConsultaProcedimento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConsultaProcedimento[P]>
      : GetScalarType<T[P], AggregateConsultaProcedimento[P]>
  }




  export type ConsultaProcedimentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConsultaProcedimentoWhereInput
    orderBy?: ConsultaProcedimentoOrderByWithAggregationInput | ConsultaProcedimentoOrderByWithAggregationInput[]
    by: ConsultaProcedimentoScalarFieldEnum[] | ConsultaProcedimentoScalarFieldEnum
    having?: ConsultaProcedimentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConsultaProcedimentoCountAggregateInputType | true
    _avg?: ConsultaProcedimentoAvgAggregateInputType
    _sum?: ConsultaProcedimentoSumAggregateInputType
    _min?: ConsultaProcedimentoMinAggregateInputType
    _max?: ConsultaProcedimentoMaxAggregateInputType
  }

  export type ConsultaProcedimentoGroupByOutputType = {
    consulta_id: number
    procedimento_id: number
    _count: ConsultaProcedimentoCountAggregateOutputType | null
    _avg: ConsultaProcedimentoAvgAggregateOutputType | null
    _sum: ConsultaProcedimentoSumAggregateOutputType | null
    _min: ConsultaProcedimentoMinAggregateOutputType | null
    _max: ConsultaProcedimentoMaxAggregateOutputType | null
  }

  type GetConsultaProcedimentoGroupByPayload<T extends ConsultaProcedimentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConsultaProcedimentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConsultaProcedimentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConsultaProcedimentoGroupByOutputType[P]>
            : GetScalarType<T[P], ConsultaProcedimentoGroupByOutputType[P]>
        }
      >
    >


  export type ConsultaProcedimentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    consulta_id?: boolean
    procedimento_id?: boolean
    consulta?: boolean | ConsultaDefaultArgs<ExtArgs>
    procedimento?: boolean | ProcedimentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["consultaProcedimento"]>

  export type ConsultaProcedimentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    consulta_id?: boolean
    procedimento_id?: boolean
    consulta?: boolean | ConsultaDefaultArgs<ExtArgs>
    procedimento?: boolean | ProcedimentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["consultaProcedimento"]>

  export type ConsultaProcedimentoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    consulta_id?: boolean
    procedimento_id?: boolean
    consulta?: boolean | ConsultaDefaultArgs<ExtArgs>
    procedimento?: boolean | ProcedimentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["consultaProcedimento"]>

  export type ConsultaProcedimentoSelectScalar = {
    consulta_id?: boolean
    procedimento_id?: boolean
  }

  export type ConsultaProcedimentoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"consulta_id" | "procedimento_id", ExtArgs["result"]["consultaProcedimento"]>
  export type ConsultaProcedimentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consulta?: boolean | ConsultaDefaultArgs<ExtArgs>
    procedimento?: boolean | ProcedimentoDefaultArgs<ExtArgs>
  }
  export type ConsultaProcedimentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consulta?: boolean | ConsultaDefaultArgs<ExtArgs>
    procedimento?: boolean | ProcedimentoDefaultArgs<ExtArgs>
  }
  export type ConsultaProcedimentoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consulta?: boolean | ConsultaDefaultArgs<ExtArgs>
    procedimento?: boolean | ProcedimentoDefaultArgs<ExtArgs>
  }

  export type $ConsultaProcedimentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ConsultaProcedimento"
    objects: {
      consulta: Prisma.$ConsultaPayload<ExtArgs>
      procedimento: Prisma.$ProcedimentoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      consulta_id: number
      procedimento_id: number
    }, ExtArgs["result"]["consultaProcedimento"]>
    composites: {}
  }

  type ConsultaProcedimentoGetPayload<S extends boolean | null | undefined | ConsultaProcedimentoDefaultArgs> = $Result.GetResult<Prisma.$ConsultaProcedimentoPayload, S>

  type ConsultaProcedimentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ConsultaProcedimentoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConsultaProcedimentoCountAggregateInputType | true
    }

  export interface ConsultaProcedimentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ConsultaProcedimento'], meta: { name: 'ConsultaProcedimento' } }
    /**
     * Find zero or one ConsultaProcedimento that matches the filter.
     * @param {ConsultaProcedimentoFindUniqueArgs} args - Arguments to find a ConsultaProcedimento
     * @example
     * // Get one ConsultaProcedimento
     * const consultaProcedimento = await prisma.consultaProcedimento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConsultaProcedimentoFindUniqueArgs>(args: SelectSubset<T, ConsultaProcedimentoFindUniqueArgs<ExtArgs>>): Prisma__ConsultaProcedimentoClient<$Result.GetResult<Prisma.$ConsultaProcedimentoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ConsultaProcedimento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ConsultaProcedimentoFindUniqueOrThrowArgs} args - Arguments to find a ConsultaProcedimento
     * @example
     * // Get one ConsultaProcedimento
     * const consultaProcedimento = await prisma.consultaProcedimento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConsultaProcedimentoFindUniqueOrThrowArgs>(args: SelectSubset<T, ConsultaProcedimentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConsultaProcedimentoClient<$Result.GetResult<Prisma.$ConsultaProcedimentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConsultaProcedimento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaProcedimentoFindFirstArgs} args - Arguments to find a ConsultaProcedimento
     * @example
     * // Get one ConsultaProcedimento
     * const consultaProcedimento = await prisma.consultaProcedimento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConsultaProcedimentoFindFirstArgs>(args?: SelectSubset<T, ConsultaProcedimentoFindFirstArgs<ExtArgs>>): Prisma__ConsultaProcedimentoClient<$Result.GetResult<Prisma.$ConsultaProcedimentoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConsultaProcedimento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaProcedimentoFindFirstOrThrowArgs} args - Arguments to find a ConsultaProcedimento
     * @example
     * // Get one ConsultaProcedimento
     * const consultaProcedimento = await prisma.consultaProcedimento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConsultaProcedimentoFindFirstOrThrowArgs>(args?: SelectSubset<T, ConsultaProcedimentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConsultaProcedimentoClient<$Result.GetResult<Prisma.$ConsultaProcedimentoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ConsultaProcedimentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaProcedimentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ConsultaProcedimentos
     * const consultaProcedimentos = await prisma.consultaProcedimento.findMany()
     * 
     * // Get first 10 ConsultaProcedimentos
     * const consultaProcedimentos = await prisma.consultaProcedimento.findMany({ take: 10 })
     * 
     * // Only select the `consulta_id`
     * const consultaProcedimentoWithConsulta_idOnly = await prisma.consultaProcedimento.findMany({ select: { consulta_id: true } })
     * 
     */
    findMany<T extends ConsultaProcedimentoFindManyArgs>(args?: SelectSubset<T, ConsultaProcedimentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultaProcedimentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ConsultaProcedimento.
     * @param {ConsultaProcedimentoCreateArgs} args - Arguments to create a ConsultaProcedimento.
     * @example
     * // Create one ConsultaProcedimento
     * const ConsultaProcedimento = await prisma.consultaProcedimento.create({
     *   data: {
     *     // ... data to create a ConsultaProcedimento
     *   }
     * })
     * 
     */
    create<T extends ConsultaProcedimentoCreateArgs>(args: SelectSubset<T, ConsultaProcedimentoCreateArgs<ExtArgs>>): Prisma__ConsultaProcedimentoClient<$Result.GetResult<Prisma.$ConsultaProcedimentoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ConsultaProcedimentos.
     * @param {ConsultaProcedimentoCreateManyArgs} args - Arguments to create many ConsultaProcedimentos.
     * @example
     * // Create many ConsultaProcedimentos
     * const consultaProcedimento = await prisma.consultaProcedimento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConsultaProcedimentoCreateManyArgs>(args?: SelectSubset<T, ConsultaProcedimentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ConsultaProcedimentos and returns the data saved in the database.
     * @param {ConsultaProcedimentoCreateManyAndReturnArgs} args - Arguments to create many ConsultaProcedimentos.
     * @example
     * // Create many ConsultaProcedimentos
     * const consultaProcedimento = await prisma.consultaProcedimento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ConsultaProcedimentos and only return the `consulta_id`
     * const consultaProcedimentoWithConsulta_idOnly = await prisma.consultaProcedimento.createManyAndReturn({
     *   select: { consulta_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConsultaProcedimentoCreateManyAndReturnArgs>(args?: SelectSubset<T, ConsultaProcedimentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultaProcedimentoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ConsultaProcedimento.
     * @param {ConsultaProcedimentoDeleteArgs} args - Arguments to delete one ConsultaProcedimento.
     * @example
     * // Delete one ConsultaProcedimento
     * const ConsultaProcedimento = await prisma.consultaProcedimento.delete({
     *   where: {
     *     // ... filter to delete one ConsultaProcedimento
     *   }
     * })
     * 
     */
    delete<T extends ConsultaProcedimentoDeleteArgs>(args: SelectSubset<T, ConsultaProcedimentoDeleteArgs<ExtArgs>>): Prisma__ConsultaProcedimentoClient<$Result.GetResult<Prisma.$ConsultaProcedimentoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ConsultaProcedimento.
     * @param {ConsultaProcedimentoUpdateArgs} args - Arguments to update one ConsultaProcedimento.
     * @example
     * // Update one ConsultaProcedimento
     * const consultaProcedimento = await prisma.consultaProcedimento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConsultaProcedimentoUpdateArgs>(args: SelectSubset<T, ConsultaProcedimentoUpdateArgs<ExtArgs>>): Prisma__ConsultaProcedimentoClient<$Result.GetResult<Prisma.$ConsultaProcedimentoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ConsultaProcedimentos.
     * @param {ConsultaProcedimentoDeleteManyArgs} args - Arguments to filter ConsultaProcedimentos to delete.
     * @example
     * // Delete a few ConsultaProcedimentos
     * const { count } = await prisma.consultaProcedimento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConsultaProcedimentoDeleteManyArgs>(args?: SelectSubset<T, ConsultaProcedimentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConsultaProcedimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaProcedimentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ConsultaProcedimentos
     * const consultaProcedimento = await prisma.consultaProcedimento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConsultaProcedimentoUpdateManyArgs>(args: SelectSubset<T, ConsultaProcedimentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConsultaProcedimentos and returns the data updated in the database.
     * @param {ConsultaProcedimentoUpdateManyAndReturnArgs} args - Arguments to update many ConsultaProcedimentos.
     * @example
     * // Update many ConsultaProcedimentos
     * const consultaProcedimento = await prisma.consultaProcedimento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ConsultaProcedimentos and only return the `consulta_id`
     * const consultaProcedimentoWithConsulta_idOnly = await prisma.consultaProcedimento.updateManyAndReturn({
     *   select: { consulta_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ConsultaProcedimentoUpdateManyAndReturnArgs>(args: SelectSubset<T, ConsultaProcedimentoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultaProcedimentoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ConsultaProcedimento.
     * @param {ConsultaProcedimentoUpsertArgs} args - Arguments to update or create a ConsultaProcedimento.
     * @example
     * // Update or create a ConsultaProcedimento
     * const consultaProcedimento = await prisma.consultaProcedimento.upsert({
     *   create: {
     *     // ... data to create a ConsultaProcedimento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ConsultaProcedimento we want to update
     *   }
     * })
     */
    upsert<T extends ConsultaProcedimentoUpsertArgs>(args: SelectSubset<T, ConsultaProcedimentoUpsertArgs<ExtArgs>>): Prisma__ConsultaProcedimentoClient<$Result.GetResult<Prisma.$ConsultaProcedimentoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ConsultaProcedimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaProcedimentoCountArgs} args - Arguments to filter ConsultaProcedimentos to count.
     * @example
     * // Count the number of ConsultaProcedimentos
     * const count = await prisma.consultaProcedimento.count({
     *   where: {
     *     // ... the filter for the ConsultaProcedimentos we want to count
     *   }
     * })
    **/
    count<T extends ConsultaProcedimentoCountArgs>(
      args?: Subset<T, ConsultaProcedimentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConsultaProcedimentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ConsultaProcedimento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaProcedimentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConsultaProcedimentoAggregateArgs>(args: Subset<T, ConsultaProcedimentoAggregateArgs>): Prisma.PrismaPromise<GetConsultaProcedimentoAggregateType<T>>

    /**
     * Group by ConsultaProcedimento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultaProcedimentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConsultaProcedimentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConsultaProcedimentoGroupByArgs['orderBy'] }
        : { orderBy?: ConsultaProcedimentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConsultaProcedimentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConsultaProcedimentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ConsultaProcedimento model
   */
  readonly fields: ConsultaProcedimentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ConsultaProcedimento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConsultaProcedimentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    consulta<T extends ConsultaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConsultaDefaultArgs<ExtArgs>>): Prisma__ConsultaClient<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    procedimento<T extends ProcedimentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProcedimentoDefaultArgs<ExtArgs>>): Prisma__ProcedimentoClient<$Result.GetResult<Prisma.$ProcedimentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ConsultaProcedimento model
   */
  interface ConsultaProcedimentoFieldRefs {
    readonly consulta_id: FieldRef<"ConsultaProcedimento", 'Int'>
    readonly procedimento_id: FieldRef<"ConsultaProcedimento", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ConsultaProcedimento findUnique
   */
  export type ConsultaProcedimentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoInclude<ExtArgs> | null
    /**
     * Filter, which ConsultaProcedimento to fetch.
     */
    where: ConsultaProcedimentoWhereUniqueInput
  }

  /**
   * ConsultaProcedimento findUniqueOrThrow
   */
  export type ConsultaProcedimentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoInclude<ExtArgs> | null
    /**
     * Filter, which ConsultaProcedimento to fetch.
     */
    where: ConsultaProcedimentoWhereUniqueInput
  }

  /**
   * ConsultaProcedimento findFirst
   */
  export type ConsultaProcedimentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoInclude<ExtArgs> | null
    /**
     * Filter, which ConsultaProcedimento to fetch.
     */
    where?: ConsultaProcedimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConsultaProcedimentos to fetch.
     */
    orderBy?: ConsultaProcedimentoOrderByWithRelationInput | ConsultaProcedimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConsultaProcedimentos.
     */
    cursor?: ConsultaProcedimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConsultaProcedimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConsultaProcedimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConsultaProcedimentos.
     */
    distinct?: ConsultaProcedimentoScalarFieldEnum | ConsultaProcedimentoScalarFieldEnum[]
  }

  /**
   * ConsultaProcedimento findFirstOrThrow
   */
  export type ConsultaProcedimentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoInclude<ExtArgs> | null
    /**
     * Filter, which ConsultaProcedimento to fetch.
     */
    where?: ConsultaProcedimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConsultaProcedimentos to fetch.
     */
    orderBy?: ConsultaProcedimentoOrderByWithRelationInput | ConsultaProcedimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConsultaProcedimentos.
     */
    cursor?: ConsultaProcedimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConsultaProcedimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConsultaProcedimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConsultaProcedimentos.
     */
    distinct?: ConsultaProcedimentoScalarFieldEnum | ConsultaProcedimentoScalarFieldEnum[]
  }

  /**
   * ConsultaProcedimento findMany
   */
  export type ConsultaProcedimentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoInclude<ExtArgs> | null
    /**
     * Filter, which ConsultaProcedimentos to fetch.
     */
    where?: ConsultaProcedimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConsultaProcedimentos to fetch.
     */
    orderBy?: ConsultaProcedimentoOrderByWithRelationInput | ConsultaProcedimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ConsultaProcedimentos.
     */
    cursor?: ConsultaProcedimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConsultaProcedimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConsultaProcedimentos.
     */
    skip?: number
    distinct?: ConsultaProcedimentoScalarFieldEnum | ConsultaProcedimentoScalarFieldEnum[]
  }

  /**
   * ConsultaProcedimento create
   */
  export type ConsultaProcedimentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoInclude<ExtArgs> | null
    /**
     * The data needed to create a ConsultaProcedimento.
     */
    data: XOR<ConsultaProcedimentoCreateInput, ConsultaProcedimentoUncheckedCreateInput>
  }

  /**
   * ConsultaProcedimento createMany
   */
  export type ConsultaProcedimentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ConsultaProcedimentos.
     */
    data: ConsultaProcedimentoCreateManyInput | ConsultaProcedimentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ConsultaProcedimento createManyAndReturn
   */
  export type ConsultaProcedimentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * The data used to create many ConsultaProcedimentos.
     */
    data: ConsultaProcedimentoCreateManyInput | ConsultaProcedimentoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ConsultaProcedimento update
   */
  export type ConsultaProcedimentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoInclude<ExtArgs> | null
    /**
     * The data needed to update a ConsultaProcedimento.
     */
    data: XOR<ConsultaProcedimentoUpdateInput, ConsultaProcedimentoUncheckedUpdateInput>
    /**
     * Choose, which ConsultaProcedimento to update.
     */
    where: ConsultaProcedimentoWhereUniqueInput
  }

  /**
   * ConsultaProcedimento updateMany
   */
  export type ConsultaProcedimentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ConsultaProcedimentos.
     */
    data: XOR<ConsultaProcedimentoUpdateManyMutationInput, ConsultaProcedimentoUncheckedUpdateManyInput>
    /**
     * Filter which ConsultaProcedimentos to update
     */
    where?: ConsultaProcedimentoWhereInput
    /**
     * Limit how many ConsultaProcedimentos to update.
     */
    limit?: number
  }

  /**
   * ConsultaProcedimento updateManyAndReturn
   */
  export type ConsultaProcedimentoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * The data used to update ConsultaProcedimentos.
     */
    data: XOR<ConsultaProcedimentoUpdateManyMutationInput, ConsultaProcedimentoUncheckedUpdateManyInput>
    /**
     * Filter which ConsultaProcedimentos to update
     */
    where?: ConsultaProcedimentoWhereInput
    /**
     * Limit how many ConsultaProcedimentos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ConsultaProcedimento upsert
   */
  export type ConsultaProcedimentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoInclude<ExtArgs> | null
    /**
     * The filter to search for the ConsultaProcedimento to update in case it exists.
     */
    where: ConsultaProcedimentoWhereUniqueInput
    /**
     * In case the ConsultaProcedimento found by the `where` argument doesn't exist, create a new ConsultaProcedimento with this data.
     */
    create: XOR<ConsultaProcedimentoCreateInput, ConsultaProcedimentoUncheckedCreateInput>
    /**
     * In case the ConsultaProcedimento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConsultaProcedimentoUpdateInput, ConsultaProcedimentoUncheckedUpdateInput>
  }

  /**
   * ConsultaProcedimento delete
   */
  export type ConsultaProcedimentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoInclude<ExtArgs> | null
    /**
     * Filter which ConsultaProcedimento to delete.
     */
    where: ConsultaProcedimentoWhereUniqueInput
  }

  /**
   * ConsultaProcedimento deleteMany
   */
  export type ConsultaProcedimentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConsultaProcedimentos to delete
     */
    where?: ConsultaProcedimentoWhereInput
    /**
     * Limit how many ConsultaProcedimentos to delete.
     */
    limit?: number
  }

  /**
   * ConsultaProcedimento without action
   */
  export type ConsultaProcedimentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConsultaProcedimento
     */
    select?: ConsultaProcedimentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConsultaProcedimento
     */
    omit?: ConsultaProcedimentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaProcedimentoInclude<ExtArgs> | null
  }


  /**
   * Model Agenda
   */

  export type AggregateAgenda = {
    _count: AgendaCountAggregateOutputType | null
    _avg: AgendaAvgAggregateOutputType | null
    _sum: AgendaSumAggregateOutputType | null
    _min: AgendaMinAggregateOutputType | null
    _max: AgendaMaxAggregateOutputType | null
  }

  export type AgendaAvgAggregateOutputType = {
    id_agenda: number | null
    profissional_id: number | null
    id_clinica: number | null
  }

  export type AgendaSumAggregateOutputType = {
    id_agenda: number | null
    profissional_id: number | null
    id_clinica: number | null
  }

  export type AgendaMinAggregateOutputType = {
    id_agenda: number | null
    data: Date | null
    hora_inicio: Date | null
    hora_fim: Date | null
    status: string | null
    tipo_bloqueio: string | null
    criado_em: Date | null
    profissional_id: number | null
    id_clinica: number | null
  }

  export type AgendaMaxAggregateOutputType = {
    id_agenda: number | null
    data: Date | null
    hora_inicio: Date | null
    hora_fim: Date | null
    status: string | null
    tipo_bloqueio: string | null
    criado_em: Date | null
    profissional_id: number | null
    id_clinica: number | null
  }

  export type AgendaCountAggregateOutputType = {
    id_agenda: number
    data: number
    hora_inicio: number
    hora_fim: number
    status: number
    tipo_bloqueio: number
    criado_em: number
    profissional_id: number
    id_clinica: number
    _all: number
  }


  export type AgendaAvgAggregateInputType = {
    id_agenda?: true
    profissional_id?: true
    id_clinica?: true
  }

  export type AgendaSumAggregateInputType = {
    id_agenda?: true
    profissional_id?: true
    id_clinica?: true
  }

  export type AgendaMinAggregateInputType = {
    id_agenda?: true
    data?: true
    hora_inicio?: true
    hora_fim?: true
    status?: true
    tipo_bloqueio?: true
    criado_em?: true
    profissional_id?: true
    id_clinica?: true
  }

  export type AgendaMaxAggregateInputType = {
    id_agenda?: true
    data?: true
    hora_inicio?: true
    hora_fim?: true
    status?: true
    tipo_bloqueio?: true
    criado_em?: true
    profissional_id?: true
    id_clinica?: true
  }

  export type AgendaCountAggregateInputType = {
    id_agenda?: true
    data?: true
    hora_inicio?: true
    hora_fim?: true
    status?: true
    tipo_bloqueio?: true
    criado_em?: true
    profissional_id?: true
    id_clinica?: true
    _all?: true
  }

  export type AgendaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Agenda to aggregate.
     */
    where?: AgendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agenda to fetch.
     */
    orderBy?: AgendaOrderByWithRelationInput | AgendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agenda from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agenda.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Agenda
    **/
    _count?: true | AgendaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AgendaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AgendaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgendaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgendaMaxAggregateInputType
  }

  export type GetAgendaAggregateType<T extends AgendaAggregateArgs> = {
        [P in keyof T & keyof AggregateAgenda]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgenda[P]>
      : GetScalarType<T[P], AggregateAgenda[P]>
  }




  export type AgendaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgendaWhereInput
    orderBy?: AgendaOrderByWithAggregationInput | AgendaOrderByWithAggregationInput[]
    by: AgendaScalarFieldEnum[] | AgendaScalarFieldEnum
    having?: AgendaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgendaCountAggregateInputType | true
    _avg?: AgendaAvgAggregateInputType
    _sum?: AgendaSumAggregateInputType
    _min?: AgendaMinAggregateInputType
    _max?: AgendaMaxAggregateInputType
  }

  export type AgendaGroupByOutputType = {
    id_agenda: number
    data: Date
    hora_inicio: Date
    hora_fim: Date
    status: string
    tipo_bloqueio: string | null
    criado_em: Date
    profissional_id: number
    id_clinica: number
    _count: AgendaCountAggregateOutputType | null
    _avg: AgendaAvgAggregateOutputType | null
    _sum: AgendaSumAggregateOutputType | null
    _min: AgendaMinAggregateOutputType | null
    _max: AgendaMaxAggregateOutputType | null
  }

  type GetAgendaGroupByPayload<T extends AgendaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgendaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgendaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgendaGroupByOutputType[P]>
            : GetScalarType<T[P], AgendaGroupByOutputType[P]>
        }
      >
    >


  export type AgendaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_agenda?: boolean
    data?: boolean
    hora_inicio?: boolean
    hora_fim?: boolean
    status?: boolean
    tipo_bloqueio?: boolean
    criado_em?: boolean
    profissional_id?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    profissional?: boolean | ProfissionalDaSaudeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agenda"]>

  export type AgendaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_agenda?: boolean
    data?: boolean
    hora_inicio?: boolean
    hora_fim?: boolean
    status?: boolean
    tipo_bloqueio?: boolean
    criado_em?: boolean
    profissional_id?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    profissional?: boolean | ProfissionalDaSaudeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agenda"]>

  export type AgendaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_agenda?: boolean
    data?: boolean
    hora_inicio?: boolean
    hora_fim?: boolean
    status?: boolean
    tipo_bloqueio?: boolean
    criado_em?: boolean
    profissional_id?: boolean
    id_clinica?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    profissional?: boolean | ProfissionalDaSaudeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agenda"]>

  export type AgendaSelectScalar = {
    id_agenda?: boolean
    data?: boolean
    hora_inicio?: boolean
    hora_fim?: boolean
    status?: boolean
    tipo_bloqueio?: boolean
    criado_em?: boolean
    profissional_id?: boolean
    id_clinica?: boolean
  }

  export type AgendaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_agenda" | "data" | "hora_inicio" | "hora_fim" | "status" | "tipo_bloqueio" | "criado_em" | "profissional_id" | "id_clinica", ExtArgs["result"]["agenda"]>
  export type AgendaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    profissional?: boolean | ProfissionalDaSaudeDefaultArgs<ExtArgs>
  }
  export type AgendaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    profissional?: boolean | ProfissionalDaSaudeDefaultArgs<ExtArgs>
  }
  export type AgendaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    profissional?: boolean | ProfissionalDaSaudeDefaultArgs<ExtArgs>
  }

  export type $AgendaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Agenda"
    objects: {
      clinica: Prisma.$ClinicaPayload<ExtArgs>
      profissional: Prisma.$ProfissionalDaSaudePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_agenda: number
      data: Date
      hora_inicio: Date
      hora_fim: Date
      status: string
      tipo_bloqueio: string | null
      criado_em: Date
      profissional_id: number
      id_clinica: number
    }, ExtArgs["result"]["agenda"]>
    composites: {}
  }

  type AgendaGetPayload<S extends boolean | null | undefined | AgendaDefaultArgs> = $Result.GetResult<Prisma.$AgendaPayload, S>

  type AgendaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AgendaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AgendaCountAggregateInputType | true
    }

  export interface AgendaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Agenda'], meta: { name: 'Agenda' } }
    /**
     * Find zero or one Agenda that matches the filter.
     * @param {AgendaFindUniqueArgs} args - Arguments to find a Agenda
     * @example
     * // Get one Agenda
     * const agenda = await prisma.agenda.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgendaFindUniqueArgs>(args: SelectSubset<T, AgendaFindUniqueArgs<ExtArgs>>): Prisma__AgendaClient<$Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Agenda that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AgendaFindUniqueOrThrowArgs} args - Arguments to find a Agenda
     * @example
     * // Get one Agenda
     * const agenda = await prisma.agenda.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgendaFindUniqueOrThrowArgs>(args: SelectSubset<T, AgendaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgendaClient<$Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Agenda that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgendaFindFirstArgs} args - Arguments to find a Agenda
     * @example
     * // Get one Agenda
     * const agenda = await prisma.agenda.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgendaFindFirstArgs>(args?: SelectSubset<T, AgendaFindFirstArgs<ExtArgs>>): Prisma__AgendaClient<$Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Agenda that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgendaFindFirstOrThrowArgs} args - Arguments to find a Agenda
     * @example
     * // Get one Agenda
     * const agenda = await prisma.agenda.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgendaFindFirstOrThrowArgs>(args?: SelectSubset<T, AgendaFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgendaClient<$Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Agenda that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgendaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Agenda
     * const agenda = await prisma.agenda.findMany()
     * 
     * // Get first 10 Agenda
     * const agenda = await prisma.agenda.findMany({ take: 10 })
     * 
     * // Only select the `id_agenda`
     * const agendaWithId_agendaOnly = await prisma.agenda.findMany({ select: { id_agenda: true } })
     * 
     */
    findMany<T extends AgendaFindManyArgs>(args?: SelectSubset<T, AgendaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Agenda.
     * @param {AgendaCreateArgs} args - Arguments to create a Agenda.
     * @example
     * // Create one Agenda
     * const Agenda = await prisma.agenda.create({
     *   data: {
     *     // ... data to create a Agenda
     *   }
     * })
     * 
     */
    create<T extends AgendaCreateArgs>(args: SelectSubset<T, AgendaCreateArgs<ExtArgs>>): Prisma__AgendaClient<$Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Agenda.
     * @param {AgendaCreateManyArgs} args - Arguments to create many Agenda.
     * @example
     * // Create many Agenda
     * const agenda = await prisma.agenda.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgendaCreateManyArgs>(args?: SelectSubset<T, AgendaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Agenda and returns the data saved in the database.
     * @param {AgendaCreateManyAndReturnArgs} args - Arguments to create many Agenda.
     * @example
     * // Create many Agenda
     * const agenda = await prisma.agenda.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Agenda and only return the `id_agenda`
     * const agendaWithId_agendaOnly = await prisma.agenda.createManyAndReturn({
     *   select: { id_agenda: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgendaCreateManyAndReturnArgs>(args?: SelectSubset<T, AgendaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Agenda.
     * @param {AgendaDeleteArgs} args - Arguments to delete one Agenda.
     * @example
     * // Delete one Agenda
     * const Agenda = await prisma.agenda.delete({
     *   where: {
     *     // ... filter to delete one Agenda
     *   }
     * })
     * 
     */
    delete<T extends AgendaDeleteArgs>(args: SelectSubset<T, AgendaDeleteArgs<ExtArgs>>): Prisma__AgendaClient<$Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Agenda.
     * @param {AgendaUpdateArgs} args - Arguments to update one Agenda.
     * @example
     * // Update one Agenda
     * const agenda = await prisma.agenda.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgendaUpdateArgs>(args: SelectSubset<T, AgendaUpdateArgs<ExtArgs>>): Prisma__AgendaClient<$Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Agenda.
     * @param {AgendaDeleteManyArgs} args - Arguments to filter Agenda to delete.
     * @example
     * // Delete a few Agenda
     * const { count } = await prisma.agenda.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgendaDeleteManyArgs>(args?: SelectSubset<T, AgendaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Agenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgendaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Agenda
     * const agenda = await prisma.agenda.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgendaUpdateManyArgs>(args: SelectSubset<T, AgendaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Agenda and returns the data updated in the database.
     * @param {AgendaUpdateManyAndReturnArgs} args - Arguments to update many Agenda.
     * @example
     * // Update many Agenda
     * const agenda = await prisma.agenda.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Agenda and only return the `id_agenda`
     * const agendaWithId_agendaOnly = await prisma.agenda.updateManyAndReturn({
     *   select: { id_agenda: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AgendaUpdateManyAndReturnArgs>(args: SelectSubset<T, AgendaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Agenda.
     * @param {AgendaUpsertArgs} args - Arguments to update or create a Agenda.
     * @example
     * // Update or create a Agenda
     * const agenda = await prisma.agenda.upsert({
     *   create: {
     *     // ... data to create a Agenda
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Agenda we want to update
     *   }
     * })
     */
    upsert<T extends AgendaUpsertArgs>(args: SelectSubset<T, AgendaUpsertArgs<ExtArgs>>): Prisma__AgendaClient<$Result.GetResult<Prisma.$AgendaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Agenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgendaCountArgs} args - Arguments to filter Agenda to count.
     * @example
     * // Count the number of Agenda
     * const count = await prisma.agenda.count({
     *   where: {
     *     // ... the filter for the Agenda we want to count
     *   }
     * })
    **/
    count<T extends AgendaCountArgs>(
      args?: Subset<T, AgendaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgendaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Agenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgendaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgendaAggregateArgs>(args: Subset<T, AgendaAggregateArgs>): Prisma.PrismaPromise<GetAgendaAggregateType<T>>

    /**
     * Group by Agenda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgendaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgendaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgendaGroupByArgs['orderBy'] }
        : { orderBy?: AgendaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgendaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgendaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Agenda model
   */
  readonly fields: AgendaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Agenda.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgendaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clinica<T extends ClinicaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClinicaDefaultArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    profissional<T extends ProfissionalDaSaudeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfissionalDaSaudeDefaultArgs<ExtArgs>>): Prisma__ProfissionalDaSaudeClient<$Result.GetResult<Prisma.$ProfissionalDaSaudePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Agenda model
   */
  interface AgendaFieldRefs {
    readonly id_agenda: FieldRef<"Agenda", 'Int'>
    readonly data: FieldRef<"Agenda", 'DateTime'>
    readonly hora_inicio: FieldRef<"Agenda", 'DateTime'>
    readonly hora_fim: FieldRef<"Agenda", 'DateTime'>
    readonly status: FieldRef<"Agenda", 'String'>
    readonly tipo_bloqueio: FieldRef<"Agenda", 'String'>
    readonly criado_em: FieldRef<"Agenda", 'DateTime'>
    readonly profissional_id: FieldRef<"Agenda", 'Int'>
    readonly id_clinica: FieldRef<"Agenda", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Agenda findUnique
   */
  export type AgendaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaInclude<ExtArgs> | null
    /**
     * Filter, which Agenda to fetch.
     */
    where: AgendaWhereUniqueInput
  }

  /**
   * Agenda findUniqueOrThrow
   */
  export type AgendaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaInclude<ExtArgs> | null
    /**
     * Filter, which Agenda to fetch.
     */
    where: AgendaWhereUniqueInput
  }

  /**
   * Agenda findFirst
   */
  export type AgendaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaInclude<ExtArgs> | null
    /**
     * Filter, which Agenda to fetch.
     */
    where?: AgendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agenda to fetch.
     */
    orderBy?: AgendaOrderByWithRelationInput | AgendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Agenda.
     */
    cursor?: AgendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agenda from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agenda.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Agenda.
     */
    distinct?: AgendaScalarFieldEnum | AgendaScalarFieldEnum[]
  }

  /**
   * Agenda findFirstOrThrow
   */
  export type AgendaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaInclude<ExtArgs> | null
    /**
     * Filter, which Agenda to fetch.
     */
    where?: AgendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agenda to fetch.
     */
    orderBy?: AgendaOrderByWithRelationInput | AgendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Agenda.
     */
    cursor?: AgendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agenda from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agenda.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Agenda.
     */
    distinct?: AgendaScalarFieldEnum | AgendaScalarFieldEnum[]
  }

  /**
   * Agenda findMany
   */
  export type AgendaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaInclude<ExtArgs> | null
    /**
     * Filter, which Agenda to fetch.
     */
    where?: AgendaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agenda to fetch.
     */
    orderBy?: AgendaOrderByWithRelationInput | AgendaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Agenda.
     */
    cursor?: AgendaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agenda from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agenda.
     */
    skip?: number
    distinct?: AgendaScalarFieldEnum | AgendaScalarFieldEnum[]
  }

  /**
   * Agenda create
   */
  export type AgendaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaInclude<ExtArgs> | null
    /**
     * The data needed to create a Agenda.
     */
    data: XOR<AgendaCreateInput, AgendaUncheckedCreateInput>
  }

  /**
   * Agenda createMany
   */
  export type AgendaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Agenda.
     */
    data: AgendaCreateManyInput | AgendaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Agenda createManyAndReturn
   */
  export type AgendaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * The data used to create many Agenda.
     */
    data: AgendaCreateManyInput | AgendaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Agenda update
   */
  export type AgendaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaInclude<ExtArgs> | null
    /**
     * The data needed to update a Agenda.
     */
    data: XOR<AgendaUpdateInput, AgendaUncheckedUpdateInput>
    /**
     * Choose, which Agenda to update.
     */
    where: AgendaWhereUniqueInput
  }

  /**
   * Agenda updateMany
   */
  export type AgendaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Agenda.
     */
    data: XOR<AgendaUpdateManyMutationInput, AgendaUncheckedUpdateManyInput>
    /**
     * Filter which Agenda to update
     */
    where?: AgendaWhereInput
    /**
     * Limit how many Agenda to update.
     */
    limit?: number
  }

  /**
   * Agenda updateManyAndReturn
   */
  export type AgendaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * The data used to update Agenda.
     */
    data: XOR<AgendaUpdateManyMutationInput, AgendaUncheckedUpdateManyInput>
    /**
     * Filter which Agenda to update
     */
    where?: AgendaWhereInput
    /**
     * Limit how many Agenda to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Agenda upsert
   */
  export type AgendaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaInclude<ExtArgs> | null
    /**
     * The filter to search for the Agenda to update in case it exists.
     */
    where: AgendaWhereUniqueInput
    /**
     * In case the Agenda found by the `where` argument doesn't exist, create a new Agenda with this data.
     */
    create: XOR<AgendaCreateInput, AgendaUncheckedCreateInput>
    /**
     * In case the Agenda was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgendaUpdateInput, AgendaUncheckedUpdateInput>
  }

  /**
   * Agenda delete
   */
  export type AgendaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaInclude<ExtArgs> | null
    /**
     * Filter which Agenda to delete.
     */
    where: AgendaWhereUniqueInput
  }

  /**
   * Agenda deleteMany
   */
  export type AgendaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Agenda to delete
     */
    where?: AgendaWhereInput
    /**
     * Limit how many Agenda to delete.
     */
    limit?: number
  }

  /**
   * Agenda without action
   */
  export type AgendaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agenda
     */
    select?: AgendaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agenda
     */
    omit?: AgendaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgendaInclude<ExtArgs> | null
  }


  /**
   * Model ControleOperacional
   */

  export type AggregateControleOperacional = {
    _count: ControleOperacionalCountAggregateOutputType | null
    _avg: ControleOperacionalAvgAggregateOutputType | null
    _sum: ControleOperacionalSumAggregateOutputType | null
    _min: ControleOperacionalMinAggregateOutputType | null
    _max: ControleOperacionalMaxAggregateOutputType | null
  }

  export type ControleOperacionalAvgAggregateOutputType = {
    id_controle: number | null
    id_clinica: number | null
    pacientes_agendados: number | null
    pacientes_nao_agendados: number | null
    pacientes_faltantes: number | null
    nps: number | null
    total_consultas: number | null
    total_procedimentos: number | null
    valor_arrecadado: number | null
    horas_robo_trabalhadas: number | null
    economia_estimada: number | null
  }

  export type ControleOperacionalSumAggregateOutputType = {
    id_controle: number | null
    id_clinica: number | null
    pacientes_agendados: number | null
    pacientes_nao_agendados: number | null
    pacientes_faltantes: number | null
    nps: number | null
    total_consultas: number | null
    total_procedimentos: number | null
    valor_arrecadado: number | null
    horas_robo_trabalhadas: number | null
    economia_estimada: number | null
  }

  export type ControleOperacionalMinAggregateOutputType = {
    id_controle: number | null
    id_clinica: number | null
    data_referencia: Date | null
    pacientes_agendados: number | null
    pacientes_nao_agendados: number | null
    pacientes_faltantes: number | null
    nps: number | null
    total_consultas: number | null
    total_procedimentos: number | null
    valor_arrecadado: number | null
    horas_robo_trabalhadas: number | null
    economia_estimada: number | null
    criado_em: Date | null
  }

  export type ControleOperacionalMaxAggregateOutputType = {
    id_controle: number | null
    id_clinica: number | null
    data_referencia: Date | null
    pacientes_agendados: number | null
    pacientes_nao_agendados: number | null
    pacientes_faltantes: number | null
    nps: number | null
    total_consultas: number | null
    total_procedimentos: number | null
    valor_arrecadado: number | null
    horas_robo_trabalhadas: number | null
    economia_estimada: number | null
    criado_em: Date | null
  }

  export type ControleOperacionalCountAggregateOutputType = {
    id_controle: number
    id_clinica: number
    data_referencia: number
    pacientes_agendados: number
    pacientes_nao_agendados: number
    pacientes_faltantes: number
    nps: number
    total_consultas: number
    total_procedimentos: number
    valor_arrecadado: number
    horas_robo_trabalhadas: number
    economia_estimada: number
    criado_em: number
    _all: number
  }


  export type ControleOperacionalAvgAggregateInputType = {
    id_controle?: true
    id_clinica?: true
    pacientes_agendados?: true
    pacientes_nao_agendados?: true
    pacientes_faltantes?: true
    nps?: true
    total_consultas?: true
    total_procedimentos?: true
    valor_arrecadado?: true
    horas_robo_trabalhadas?: true
    economia_estimada?: true
  }

  export type ControleOperacionalSumAggregateInputType = {
    id_controle?: true
    id_clinica?: true
    pacientes_agendados?: true
    pacientes_nao_agendados?: true
    pacientes_faltantes?: true
    nps?: true
    total_consultas?: true
    total_procedimentos?: true
    valor_arrecadado?: true
    horas_robo_trabalhadas?: true
    economia_estimada?: true
  }

  export type ControleOperacionalMinAggregateInputType = {
    id_controle?: true
    id_clinica?: true
    data_referencia?: true
    pacientes_agendados?: true
    pacientes_nao_agendados?: true
    pacientes_faltantes?: true
    nps?: true
    total_consultas?: true
    total_procedimentos?: true
    valor_arrecadado?: true
    horas_robo_trabalhadas?: true
    economia_estimada?: true
    criado_em?: true
  }

  export type ControleOperacionalMaxAggregateInputType = {
    id_controle?: true
    id_clinica?: true
    data_referencia?: true
    pacientes_agendados?: true
    pacientes_nao_agendados?: true
    pacientes_faltantes?: true
    nps?: true
    total_consultas?: true
    total_procedimentos?: true
    valor_arrecadado?: true
    horas_robo_trabalhadas?: true
    economia_estimada?: true
    criado_em?: true
  }

  export type ControleOperacionalCountAggregateInputType = {
    id_controle?: true
    id_clinica?: true
    data_referencia?: true
    pacientes_agendados?: true
    pacientes_nao_agendados?: true
    pacientes_faltantes?: true
    nps?: true
    total_consultas?: true
    total_procedimentos?: true
    valor_arrecadado?: true
    horas_robo_trabalhadas?: true
    economia_estimada?: true
    criado_em?: true
    _all?: true
  }

  export type ControleOperacionalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ControleOperacional to aggregate.
     */
    where?: ControleOperacionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ControleOperacionals to fetch.
     */
    orderBy?: ControleOperacionalOrderByWithRelationInput | ControleOperacionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ControleOperacionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ControleOperacionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ControleOperacionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ControleOperacionals
    **/
    _count?: true | ControleOperacionalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ControleOperacionalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ControleOperacionalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ControleOperacionalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ControleOperacionalMaxAggregateInputType
  }

  export type GetControleOperacionalAggregateType<T extends ControleOperacionalAggregateArgs> = {
        [P in keyof T & keyof AggregateControleOperacional]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateControleOperacional[P]>
      : GetScalarType<T[P], AggregateControleOperacional[P]>
  }




  export type ControleOperacionalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ControleOperacionalWhereInput
    orderBy?: ControleOperacionalOrderByWithAggregationInput | ControleOperacionalOrderByWithAggregationInput[]
    by: ControleOperacionalScalarFieldEnum[] | ControleOperacionalScalarFieldEnum
    having?: ControleOperacionalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ControleOperacionalCountAggregateInputType | true
    _avg?: ControleOperacionalAvgAggregateInputType
    _sum?: ControleOperacionalSumAggregateInputType
    _min?: ControleOperacionalMinAggregateInputType
    _max?: ControleOperacionalMaxAggregateInputType
  }

  export type ControleOperacionalGroupByOutputType = {
    id_controle: number
    id_clinica: number
    data_referencia: Date
    pacientes_agendados: number
    pacientes_nao_agendados: number
    pacientes_faltantes: number
    nps: number | null
    total_consultas: number
    total_procedimentos: number
    valor_arrecadado: number
    horas_robo_trabalhadas: number
    economia_estimada: number
    criado_em: Date
    _count: ControleOperacionalCountAggregateOutputType | null
    _avg: ControleOperacionalAvgAggregateOutputType | null
    _sum: ControleOperacionalSumAggregateOutputType | null
    _min: ControleOperacionalMinAggregateOutputType | null
    _max: ControleOperacionalMaxAggregateOutputType | null
  }

  type GetControleOperacionalGroupByPayload<T extends ControleOperacionalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ControleOperacionalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ControleOperacionalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ControleOperacionalGroupByOutputType[P]>
            : GetScalarType<T[P], ControleOperacionalGroupByOutputType[P]>
        }
      >
    >


  export type ControleOperacionalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_controle?: boolean
    id_clinica?: boolean
    data_referencia?: boolean
    pacientes_agendados?: boolean
    pacientes_nao_agendados?: boolean
    pacientes_faltantes?: boolean
    nps?: boolean
    total_consultas?: boolean
    total_procedimentos?: boolean
    valor_arrecadado?: boolean
    horas_robo_trabalhadas?: boolean
    economia_estimada?: boolean
    criado_em?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["controleOperacional"]>

  export type ControleOperacionalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_controle?: boolean
    id_clinica?: boolean
    data_referencia?: boolean
    pacientes_agendados?: boolean
    pacientes_nao_agendados?: boolean
    pacientes_faltantes?: boolean
    nps?: boolean
    total_consultas?: boolean
    total_procedimentos?: boolean
    valor_arrecadado?: boolean
    horas_robo_trabalhadas?: boolean
    economia_estimada?: boolean
    criado_em?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["controleOperacional"]>

  export type ControleOperacionalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_controle?: boolean
    id_clinica?: boolean
    data_referencia?: boolean
    pacientes_agendados?: boolean
    pacientes_nao_agendados?: boolean
    pacientes_faltantes?: boolean
    nps?: boolean
    total_consultas?: boolean
    total_procedimentos?: boolean
    valor_arrecadado?: boolean
    horas_robo_trabalhadas?: boolean
    economia_estimada?: boolean
    criado_em?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["controleOperacional"]>

  export type ControleOperacionalSelectScalar = {
    id_controle?: boolean
    id_clinica?: boolean
    data_referencia?: boolean
    pacientes_agendados?: boolean
    pacientes_nao_agendados?: boolean
    pacientes_faltantes?: boolean
    nps?: boolean
    total_consultas?: boolean
    total_procedimentos?: boolean
    valor_arrecadado?: boolean
    horas_robo_trabalhadas?: boolean
    economia_estimada?: boolean
    criado_em?: boolean
  }

  export type ControleOperacionalOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_controle" | "id_clinica" | "data_referencia" | "pacientes_agendados" | "pacientes_nao_agendados" | "pacientes_faltantes" | "nps" | "total_consultas" | "total_procedimentos" | "valor_arrecadado" | "horas_robo_trabalhadas" | "economia_estimada" | "criado_em", ExtArgs["result"]["controleOperacional"]>
  export type ControleOperacionalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }
  export type ControleOperacionalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }
  export type ControleOperacionalIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }

  export type $ControleOperacionalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ControleOperacional"
    objects: {
      clinica: Prisma.$ClinicaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_controle: number
      id_clinica: number
      data_referencia: Date
      pacientes_agendados: number
      pacientes_nao_agendados: number
      pacientes_faltantes: number
      nps: number | null
      total_consultas: number
      total_procedimentos: number
      valor_arrecadado: number
      horas_robo_trabalhadas: number
      economia_estimada: number
      criado_em: Date
    }, ExtArgs["result"]["controleOperacional"]>
    composites: {}
  }

  type ControleOperacionalGetPayload<S extends boolean | null | undefined | ControleOperacionalDefaultArgs> = $Result.GetResult<Prisma.$ControleOperacionalPayload, S>

  type ControleOperacionalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ControleOperacionalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ControleOperacionalCountAggregateInputType | true
    }

  export interface ControleOperacionalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ControleOperacional'], meta: { name: 'ControleOperacional' } }
    /**
     * Find zero or one ControleOperacional that matches the filter.
     * @param {ControleOperacionalFindUniqueArgs} args - Arguments to find a ControleOperacional
     * @example
     * // Get one ControleOperacional
     * const controleOperacional = await prisma.controleOperacional.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ControleOperacionalFindUniqueArgs>(args: SelectSubset<T, ControleOperacionalFindUniqueArgs<ExtArgs>>): Prisma__ControleOperacionalClient<$Result.GetResult<Prisma.$ControleOperacionalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ControleOperacional that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ControleOperacionalFindUniqueOrThrowArgs} args - Arguments to find a ControleOperacional
     * @example
     * // Get one ControleOperacional
     * const controleOperacional = await prisma.controleOperacional.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ControleOperacionalFindUniqueOrThrowArgs>(args: SelectSubset<T, ControleOperacionalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ControleOperacionalClient<$Result.GetResult<Prisma.$ControleOperacionalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ControleOperacional that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ControleOperacionalFindFirstArgs} args - Arguments to find a ControleOperacional
     * @example
     * // Get one ControleOperacional
     * const controleOperacional = await prisma.controleOperacional.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ControleOperacionalFindFirstArgs>(args?: SelectSubset<T, ControleOperacionalFindFirstArgs<ExtArgs>>): Prisma__ControleOperacionalClient<$Result.GetResult<Prisma.$ControleOperacionalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ControleOperacional that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ControleOperacionalFindFirstOrThrowArgs} args - Arguments to find a ControleOperacional
     * @example
     * // Get one ControleOperacional
     * const controleOperacional = await prisma.controleOperacional.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ControleOperacionalFindFirstOrThrowArgs>(args?: SelectSubset<T, ControleOperacionalFindFirstOrThrowArgs<ExtArgs>>): Prisma__ControleOperacionalClient<$Result.GetResult<Prisma.$ControleOperacionalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ControleOperacionals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ControleOperacionalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ControleOperacionals
     * const controleOperacionals = await prisma.controleOperacional.findMany()
     * 
     * // Get first 10 ControleOperacionals
     * const controleOperacionals = await prisma.controleOperacional.findMany({ take: 10 })
     * 
     * // Only select the `id_controle`
     * const controleOperacionalWithId_controleOnly = await prisma.controleOperacional.findMany({ select: { id_controle: true } })
     * 
     */
    findMany<T extends ControleOperacionalFindManyArgs>(args?: SelectSubset<T, ControleOperacionalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ControleOperacionalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ControleOperacional.
     * @param {ControleOperacionalCreateArgs} args - Arguments to create a ControleOperacional.
     * @example
     * // Create one ControleOperacional
     * const ControleOperacional = await prisma.controleOperacional.create({
     *   data: {
     *     // ... data to create a ControleOperacional
     *   }
     * })
     * 
     */
    create<T extends ControleOperacionalCreateArgs>(args: SelectSubset<T, ControleOperacionalCreateArgs<ExtArgs>>): Prisma__ControleOperacionalClient<$Result.GetResult<Prisma.$ControleOperacionalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ControleOperacionals.
     * @param {ControleOperacionalCreateManyArgs} args - Arguments to create many ControleOperacionals.
     * @example
     * // Create many ControleOperacionals
     * const controleOperacional = await prisma.controleOperacional.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ControleOperacionalCreateManyArgs>(args?: SelectSubset<T, ControleOperacionalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ControleOperacionals and returns the data saved in the database.
     * @param {ControleOperacionalCreateManyAndReturnArgs} args - Arguments to create many ControleOperacionals.
     * @example
     * // Create many ControleOperacionals
     * const controleOperacional = await prisma.controleOperacional.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ControleOperacionals and only return the `id_controle`
     * const controleOperacionalWithId_controleOnly = await prisma.controleOperacional.createManyAndReturn({
     *   select: { id_controle: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ControleOperacionalCreateManyAndReturnArgs>(args?: SelectSubset<T, ControleOperacionalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ControleOperacionalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ControleOperacional.
     * @param {ControleOperacionalDeleteArgs} args - Arguments to delete one ControleOperacional.
     * @example
     * // Delete one ControleOperacional
     * const ControleOperacional = await prisma.controleOperacional.delete({
     *   where: {
     *     // ... filter to delete one ControleOperacional
     *   }
     * })
     * 
     */
    delete<T extends ControleOperacionalDeleteArgs>(args: SelectSubset<T, ControleOperacionalDeleteArgs<ExtArgs>>): Prisma__ControleOperacionalClient<$Result.GetResult<Prisma.$ControleOperacionalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ControleOperacional.
     * @param {ControleOperacionalUpdateArgs} args - Arguments to update one ControleOperacional.
     * @example
     * // Update one ControleOperacional
     * const controleOperacional = await prisma.controleOperacional.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ControleOperacionalUpdateArgs>(args: SelectSubset<T, ControleOperacionalUpdateArgs<ExtArgs>>): Prisma__ControleOperacionalClient<$Result.GetResult<Prisma.$ControleOperacionalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ControleOperacionals.
     * @param {ControleOperacionalDeleteManyArgs} args - Arguments to filter ControleOperacionals to delete.
     * @example
     * // Delete a few ControleOperacionals
     * const { count } = await prisma.controleOperacional.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ControleOperacionalDeleteManyArgs>(args?: SelectSubset<T, ControleOperacionalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ControleOperacionals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ControleOperacionalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ControleOperacionals
     * const controleOperacional = await prisma.controleOperacional.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ControleOperacionalUpdateManyArgs>(args: SelectSubset<T, ControleOperacionalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ControleOperacionals and returns the data updated in the database.
     * @param {ControleOperacionalUpdateManyAndReturnArgs} args - Arguments to update many ControleOperacionals.
     * @example
     * // Update many ControleOperacionals
     * const controleOperacional = await prisma.controleOperacional.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ControleOperacionals and only return the `id_controle`
     * const controleOperacionalWithId_controleOnly = await prisma.controleOperacional.updateManyAndReturn({
     *   select: { id_controle: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ControleOperacionalUpdateManyAndReturnArgs>(args: SelectSubset<T, ControleOperacionalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ControleOperacionalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ControleOperacional.
     * @param {ControleOperacionalUpsertArgs} args - Arguments to update or create a ControleOperacional.
     * @example
     * // Update or create a ControleOperacional
     * const controleOperacional = await prisma.controleOperacional.upsert({
     *   create: {
     *     // ... data to create a ControleOperacional
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ControleOperacional we want to update
     *   }
     * })
     */
    upsert<T extends ControleOperacionalUpsertArgs>(args: SelectSubset<T, ControleOperacionalUpsertArgs<ExtArgs>>): Prisma__ControleOperacionalClient<$Result.GetResult<Prisma.$ControleOperacionalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ControleOperacionals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ControleOperacionalCountArgs} args - Arguments to filter ControleOperacionals to count.
     * @example
     * // Count the number of ControleOperacionals
     * const count = await prisma.controleOperacional.count({
     *   where: {
     *     // ... the filter for the ControleOperacionals we want to count
     *   }
     * })
    **/
    count<T extends ControleOperacionalCountArgs>(
      args?: Subset<T, ControleOperacionalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ControleOperacionalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ControleOperacional.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ControleOperacionalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ControleOperacionalAggregateArgs>(args: Subset<T, ControleOperacionalAggregateArgs>): Prisma.PrismaPromise<GetControleOperacionalAggregateType<T>>

    /**
     * Group by ControleOperacional.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ControleOperacionalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ControleOperacionalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ControleOperacionalGroupByArgs['orderBy'] }
        : { orderBy?: ControleOperacionalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ControleOperacionalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetControleOperacionalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ControleOperacional model
   */
  readonly fields: ControleOperacionalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ControleOperacional.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ControleOperacionalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clinica<T extends ClinicaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClinicaDefaultArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ControleOperacional model
   */
  interface ControleOperacionalFieldRefs {
    readonly id_controle: FieldRef<"ControleOperacional", 'Int'>
    readonly id_clinica: FieldRef<"ControleOperacional", 'Int'>
    readonly data_referencia: FieldRef<"ControleOperacional", 'DateTime'>
    readonly pacientes_agendados: FieldRef<"ControleOperacional", 'Int'>
    readonly pacientes_nao_agendados: FieldRef<"ControleOperacional", 'Int'>
    readonly pacientes_faltantes: FieldRef<"ControleOperacional", 'Int'>
    readonly nps: FieldRef<"ControleOperacional", 'Int'>
    readonly total_consultas: FieldRef<"ControleOperacional", 'Int'>
    readonly total_procedimentos: FieldRef<"ControleOperacional", 'Int'>
    readonly valor_arrecadado: FieldRef<"ControleOperacional", 'Float'>
    readonly horas_robo_trabalhadas: FieldRef<"ControleOperacional", 'Float'>
    readonly economia_estimada: FieldRef<"ControleOperacional", 'Float'>
    readonly criado_em: FieldRef<"ControleOperacional", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ControleOperacional findUnique
   */
  export type ControleOperacionalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ControleOperacional
     */
    select?: ControleOperacionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ControleOperacional
     */
    omit?: ControleOperacionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ControleOperacionalInclude<ExtArgs> | null
    /**
     * Filter, which ControleOperacional to fetch.
     */
    where: ControleOperacionalWhereUniqueInput
  }

  /**
   * ControleOperacional findUniqueOrThrow
   */
  export type ControleOperacionalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ControleOperacional
     */
    select?: ControleOperacionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ControleOperacional
     */
    omit?: ControleOperacionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ControleOperacionalInclude<ExtArgs> | null
    /**
     * Filter, which ControleOperacional to fetch.
     */
    where: ControleOperacionalWhereUniqueInput
  }

  /**
   * ControleOperacional findFirst
   */
  export type ControleOperacionalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ControleOperacional
     */
    select?: ControleOperacionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ControleOperacional
     */
    omit?: ControleOperacionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ControleOperacionalInclude<ExtArgs> | null
    /**
     * Filter, which ControleOperacional to fetch.
     */
    where?: ControleOperacionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ControleOperacionals to fetch.
     */
    orderBy?: ControleOperacionalOrderByWithRelationInput | ControleOperacionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ControleOperacionals.
     */
    cursor?: ControleOperacionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ControleOperacionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ControleOperacionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ControleOperacionals.
     */
    distinct?: ControleOperacionalScalarFieldEnum | ControleOperacionalScalarFieldEnum[]
  }

  /**
   * ControleOperacional findFirstOrThrow
   */
  export type ControleOperacionalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ControleOperacional
     */
    select?: ControleOperacionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ControleOperacional
     */
    omit?: ControleOperacionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ControleOperacionalInclude<ExtArgs> | null
    /**
     * Filter, which ControleOperacional to fetch.
     */
    where?: ControleOperacionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ControleOperacionals to fetch.
     */
    orderBy?: ControleOperacionalOrderByWithRelationInput | ControleOperacionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ControleOperacionals.
     */
    cursor?: ControleOperacionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ControleOperacionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ControleOperacionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ControleOperacionals.
     */
    distinct?: ControleOperacionalScalarFieldEnum | ControleOperacionalScalarFieldEnum[]
  }

  /**
   * ControleOperacional findMany
   */
  export type ControleOperacionalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ControleOperacional
     */
    select?: ControleOperacionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ControleOperacional
     */
    omit?: ControleOperacionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ControleOperacionalInclude<ExtArgs> | null
    /**
     * Filter, which ControleOperacionals to fetch.
     */
    where?: ControleOperacionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ControleOperacionals to fetch.
     */
    orderBy?: ControleOperacionalOrderByWithRelationInput | ControleOperacionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ControleOperacionals.
     */
    cursor?: ControleOperacionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ControleOperacionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ControleOperacionals.
     */
    skip?: number
    distinct?: ControleOperacionalScalarFieldEnum | ControleOperacionalScalarFieldEnum[]
  }

  /**
   * ControleOperacional create
   */
  export type ControleOperacionalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ControleOperacional
     */
    select?: ControleOperacionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ControleOperacional
     */
    omit?: ControleOperacionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ControleOperacionalInclude<ExtArgs> | null
    /**
     * The data needed to create a ControleOperacional.
     */
    data: XOR<ControleOperacionalCreateInput, ControleOperacionalUncheckedCreateInput>
  }

  /**
   * ControleOperacional createMany
   */
  export type ControleOperacionalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ControleOperacionals.
     */
    data: ControleOperacionalCreateManyInput | ControleOperacionalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ControleOperacional createManyAndReturn
   */
  export type ControleOperacionalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ControleOperacional
     */
    select?: ControleOperacionalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ControleOperacional
     */
    omit?: ControleOperacionalOmit<ExtArgs> | null
    /**
     * The data used to create many ControleOperacionals.
     */
    data: ControleOperacionalCreateManyInput | ControleOperacionalCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ControleOperacionalIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ControleOperacional update
   */
  export type ControleOperacionalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ControleOperacional
     */
    select?: ControleOperacionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ControleOperacional
     */
    omit?: ControleOperacionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ControleOperacionalInclude<ExtArgs> | null
    /**
     * The data needed to update a ControleOperacional.
     */
    data: XOR<ControleOperacionalUpdateInput, ControleOperacionalUncheckedUpdateInput>
    /**
     * Choose, which ControleOperacional to update.
     */
    where: ControleOperacionalWhereUniqueInput
  }

  /**
   * ControleOperacional updateMany
   */
  export type ControleOperacionalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ControleOperacionals.
     */
    data: XOR<ControleOperacionalUpdateManyMutationInput, ControleOperacionalUncheckedUpdateManyInput>
    /**
     * Filter which ControleOperacionals to update
     */
    where?: ControleOperacionalWhereInput
    /**
     * Limit how many ControleOperacionals to update.
     */
    limit?: number
  }

  /**
   * ControleOperacional updateManyAndReturn
   */
  export type ControleOperacionalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ControleOperacional
     */
    select?: ControleOperacionalSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ControleOperacional
     */
    omit?: ControleOperacionalOmit<ExtArgs> | null
    /**
     * The data used to update ControleOperacionals.
     */
    data: XOR<ControleOperacionalUpdateManyMutationInput, ControleOperacionalUncheckedUpdateManyInput>
    /**
     * Filter which ControleOperacionals to update
     */
    where?: ControleOperacionalWhereInput
    /**
     * Limit how many ControleOperacionals to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ControleOperacionalIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ControleOperacional upsert
   */
  export type ControleOperacionalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ControleOperacional
     */
    select?: ControleOperacionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ControleOperacional
     */
    omit?: ControleOperacionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ControleOperacionalInclude<ExtArgs> | null
    /**
     * The filter to search for the ControleOperacional to update in case it exists.
     */
    where: ControleOperacionalWhereUniqueInput
    /**
     * In case the ControleOperacional found by the `where` argument doesn't exist, create a new ControleOperacional with this data.
     */
    create: XOR<ControleOperacionalCreateInput, ControleOperacionalUncheckedCreateInput>
    /**
     * In case the ControleOperacional was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ControleOperacionalUpdateInput, ControleOperacionalUncheckedUpdateInput>
  }

  /**
   * ControleOperacional delete
   */
  export type ControleOperacionalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ControleOperacional
     */
    select?: ControleOperacionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ControleOperacional
     */
    omit?: ControleOperacionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ControleOperacionalInclude<ExtArgs> | null
    /**
     * Filter which ControleOperacional to delete.
     */
    where: ControleOperacionalWhereUniqueInput
  }

  /**
   * ControleOperacional deleteMany
   */
  export type ControleOperacionalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ControleOperacionals to delete
     */
    where?: ControleOperacionalWhereInput
    /**
     * Limit how many ControleOperacionals to delete.
     */
    limit?: number
  }

  /**
   * ControleOperacional without action
   */
  export type ControleOperacionalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ControleOperacional
     */
    select?: ControleOperacionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ControleOperacional
     */
    omit?: ControleOperacionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ControleOperacionalInclude<ExtArgs> | null
  }


  /**
   * Model InteracaoRobo
   */

  export type AggregateInteracaoRobo = {
    _count: InteracaoRoboCountAggregateOutputType | null
    _avg: InteracaoRoboAvgAggregateOutputType | null
    _sum: InteracaoRoboSumAggregateOutputType | null
    _min: InteracaoRoboMinAggregateOutputType | null
    _max: InteracaoRoboMaxAggregateOutputType | null
  }

  export type InteracaoRoboAvgAggregateOutputType = {
    id_interacao: number | null
    id_clinica: number | null
    id_paciente: number | null
    id_convenio: number | null
  }

  export type InteracaoRoboSumAggregateOutputType = {
    id_interacao: number | null
    id_clinica: number | null
    id_paciente: number | null
    id_convenio: number | null
  }

  export type InteracaoRoboMinAggregateOutputType = {
    id_interacao: number | null
    id_clinica: number | null
    id_paciente: number | null
    tipo: string | null
    data_interacao: Date | null
    id_convenio: number | null
  }

  export type InteracaoRoboMaxAggregateOutputType = {
    id_interacao: number | null
    id_clinica: number | null
    id_paciente: number | null
    tipo: string | null
    data_interacao: Date | null
    id_convenio: number | null
  }

  export type InteracaoRoboCountAggregateOutputType = {
    id_interacao: number
    id_clinica: number
    id_paciente: number
    tipo: number
    data_interacao: number
    id_convenio: number
    _all: number
  }


  export type InteracaoRoboAvgAggregateInputType = {
    id_interacao?: true
    id_clinica?: true
    id_paciente?: true
    id_convenio?: true
  }

  export type InteracaoRoboSumAggregateInputType = {
    id_interacao?: true
    id_clinica?: true
    id_paciente?: true
    id_convenio?: true
  }

  export type InteracaoRoboMinAggregateInputType = {
    id_interacao?: true
    id_clinica?: true
    id_paciente?: true
    tipo?: true
    data_interacao?: true
    id_convenio?: true
  }

  export type InteracaoRoboMaxAggregateInputType = {
    id_interacao?: true
    id_clinica?: true
    id_paciente?: true
    tipo?: true
    data_interacao?: true
    id_convenio?: true
  }

  export type InteracaoRoboCountAggregateInputType = {
    id_interacao?: true
    id_clinica?: true
    id_paciente?: true
    tipo?: true
    data_interacao?: true
    id_convenio?: true
    _all?: true
  }

  export type InteracaoRoboAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InteracaoRobo to aggregate.
     */
    where?: InteracaoRoboWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InteracaoRobos to fetch.
     */
    orderBy?: InteracaoRoboOrderByWithRelationInput | InteracaoRoboOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InteracaoRoboWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InteracaoRobos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InteracaoRobos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InteracaoRobos
    **/
    _count?: true | InteracaoRoboCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InteracaoRoboAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InteracaoRoboSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InteracaoRoboMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InteracaoRoboMaxAggregateInputType
  }

  export type GetInteracaoRoboAggregateType<T extends InteracaoRoboAggregateArgs> = {
        [P in keyof T & keyof AggregateInteracaoRobo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInteracaoRobo[P]>
      : GetScalarType<T[P], AggregateInteracaoRobo[P]>
  }




  export type InteracaoRoboGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InteracaoRoboWhereInput
    orderBy?: InteracaoRoboOrderByWithAggregationInput | InteracaoRoboOrderByWithAggregationInput[]
    by: InteracaoRoboScalarFieldEnum[] | InteracaoRoboScalarFieldEnum
    having?: InteracaoRoboScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InteracaoRoboCountAggregateInputType | true
    _avg?: InteracaoRoboAvgAggregateInputType
    _sum?: InteracaoRoboSumAggregateInputType
    _min?: InteracaoRoboMinAggregateInputType
    _max?: InteracaoRoboMaxAggregateInputType
  }

  export type InteracaoRoboGroupByOutputType = {
    id_interacao: number
    id_clinica: number
    id_paciente: number
    tipo: string
    data_interacao: Date
    id_convenio: number | null
    _count: InteracaoRoboCountAggregateOutputType | null
    _avg: InteracaoRoboAvgAggregateOutputType | null
    _sum: InteracaoRoboSumAggregateOutputType | null
    _min: InteracaoRoboMinAggregateOutputType | null
    _max: InteracaoRoboMaxAggregateOutputType | null
  }

  type GetInteracaoRoboGroupByPayload<T extends InteracaoRoboGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InteracaoRoboGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InteracaoRoboGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InteracaoRoboGroupByOutputType[P]>
            : GetScalarType<T[P], InteracaoRoboGroupByOutputType[P]>
        }
      >
    >


  export type InteracaoRoboSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_interacao?: boolean
    id_clinica?: boolean
    id_paciente?: boolean
    tipo?: boolean
    data_interacao?: boolean
    id_convenio?: boolean
    paciente?: boolean | PacienteDefaultArgs<ExtArgs>
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    convenio?: boolean | InteracaoRobo$convenioArgs<ExtArgs>
  }, ExtArgs["result"]["interacaoRobo"]>

  export type InteracaoRoboSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_interacao?: boolean
    id_clinica?: boolean
    id_paciente?: boolean
    tipo?: boolean
    data_interacao?: boolean
    id_convenio?: boolean
    paciente?: boolean | PacienteDefaultArgs<ExtArgs>
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    convenio?: boolean | InteracaoRobo$convenioArgs<ExtArgs>
  }, ExtArgs["result"]["interacaoRobo"]>

  export type InteracaoRoboSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_interacao?: boolean
    id_clinica?: boolean
    id_paciente?: boolean
    tipo?: boolean
    data_interacao?: boolean
    id_convenio?: boolean
    paciente?: boolean | PacienteDefaultArgs<ExtArgs>
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    convenio?: boolean | InteracaoRobo$convenioArgs<ExtArgs>
  }, ExtArgs["result"]["interacaoRobo"]>

  export type InteracaoRoboSelectScalar = {
    id_interacao?: boolean
    id_clinica?: boolean
    id_paciente?: boolean
    tipo?: boolean
    data_interacao?: boolean
    id_convenio?: boolean
  }

  export type InteracaoRoboOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_interacao" | "id_clinica" | "id_paciente" | "tipo" | "data_interacao" | "id_convenio", ExtArgs["result"]["interacaoRobo"]>
  export type InteracaoRoboInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paciente?: boolean | PacienteDefaultArgs<ExtArgs>
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    convenio?: boolean | InteracaoRobo$convenioArgs<ExtArgs>
  }
  export type InteracaoRoboIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paciente?: boolean | PacienteDefaultArgs<ExtArgs>
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    convenio?: boolean | InteracaoRobo$convenioArgs<ExtArgs>
  }
  export type InteracaoRoboIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paciente?: boolean | PacienteDefaultArgs<ExtArgs>
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    convenio?: boolean | InteracaoRobo$convenioArgs<ExtArgs>
  }

  export type $InteracaoRoboPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InteracaoRobo"
    objects: {
      paciente: Prisma.$PacientePayload<ExtArgs>
      clinica: Prisma.$ClinicaPayload<ExtArgs>
      convenio: Prisma.$ConvenioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_interacao: number
      id_clinica: number
      id_paciente: number
      tipo: string
      data_interacao: Date
      id_convenio: number | null
    }, ExtArgs["result"]["interacaoRobo"]>
    composites: {}
  }

  type InteracaoRoboGetPayload<S extends boolean | null | undefined | InteracaoRoboDefaultArgs> = $Result.GetResult<Prisma.$InteracaoRoboPayload, S>

  type InteracaoRoboCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InteracaoRoboFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InteracaoRoboCountAggregateInputType | true
    }

  export interface InteracaoRoboDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InteracaoRobo'], meta: { name: 'InteracaoRobo' } }
    /**
     * Find zero or one InteracaoRobo that matches the filter.
     * @param {InteracaoRoboFindUniqueArgs} args - Arguments to find a InteracaoRobo
     * @example
     * // Get one InteracaoRobo
     * const interacaoRobo = await prisma.interacaoRobo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InteracaoRoboFindUniqueArgs>(args: SelectSubset<T, InteracaoRoboFindUniqueArgs<ExtArgs>>): Prisma__InteracaoRoboClient<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InteracaoRobo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InteracaoRoboFindUniqueOrThrowArgs} args - Arguments to find a InteracaoRobo
     * @example
     * // Get one InteracaoRobo
     * const interacaoRobo = await prisma.interacaoRobo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InteracaoRoboFindUniqueOrThrowArgs>(args: SelectSubset<T, InteracaoRoboFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InteracaoRoboClient<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InteracaoRobo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteracaoRoboFindFirstArgs} args - Arguments to find a InteracaoRobo
     * @example
     * // Get one InteracaoRobo
     * const interacaoRobo = await prisma.interacaoRobo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InteracaoRoboFindFirstArgs>(args?: SelectSubset<T, InteracaoRoboFindFirstArgs<ExtArgs>>): Prisma__InteracaoRoboClient<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InteracaoRobo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteracaoRoboFindFirstOrThrowArgs} args - Arguments to find a InteracaoRobo
     * @example
     * // Get one InteracaoRobo
     * const interacaoRobo = await prisma.interacaoRobo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InteracaoRoboFindFirstOrThrowArgs>(args?: SelectSubset<T, InteracaoRoboFindFirstOrThrowArgs<ExtArgs>>): Prisma__InteracaoRoboClient<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InteracaoRobos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteracaoRoboFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InteracaoRobos
     * const interacaoRobos = await prisma.interacaoRobo.findMany()
     * 
     * // Get first 10 InteracaoRobos
     * const interacaoRobos = await prisma.interacaoRobo.findMany({ take: 10 })
     * 
     * // Only select the `id_interacao`
     * const interacaoRoboWithId_interacaoOnly = await prisma.interacaoRobo.findMany({ select: { id_interacao: true } })
     * 
     */
    findMany<T extends InteracaoRoboFindManyArgs>(args?: SelectSubset<T, InteracaoRoboFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InteracaoRobo.
     * @param {InteracaoRoboCreateArgs} args - Arguments to create a InteracaoRobo.
     * @example
     * // Create one InteracaoRobo
     * const InteracaoRobo = await prisma.interacaoRobo.create({
     *   data: {
     *     // ... data to create a InteracaoRobo
     *   }
     * })
     * 
     */
    create<T extends InteracaoRoboCreateArgs>(args: SelectSubset<T, InteracaoRoboCreateArgs<ExtArgs>>): Prisma__InteracaoRoboClient<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InteracaoRobos.
     * @param {InteracaoRoboCreateManyArgs} args - Arguments to create many InteracaoRobos.
     * @example
     * // Create many InteracaoRobos
     * const interacaoRobo = await prisma.interacaoRobo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InteracaoRoboCreateManyArgs>(args?: SelectSubset<T, InteracaoRoboCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InteracaoRobos and returns the data saved in the database.
     * @param {InteracaoRoboCreateManyAndReturnArgs} args - Arguments to create many InteracaoRobos.
     * @example
     * // Create many InteracaoRobos
     * const interacaoRobo = await prisma.interacaoRobo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InteracaoRobos and only return the `id_interacao`
     * const interacaoRoboWithId_interacaoOnly = await prisma.interacaoRobo.createManyAndReturn({
     *   select: { id_interacao: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InteracaoRoboCreateManyAndReturnArgs>(args?: SelectSubset<T, InteracaoRoboCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InteracaoRobo.
     * @param {InteracaoRoboDeleteArgs} args - Arguments to delete one InteracaoRobo.
     * @example
     * // Delete one InteracaoRobo
     * const InteracaoRobo = await prisma.interacaoRobo.delete({
     *   where: {
     *     // ... filter to delete one InteracaoRobo
     *   }
     * })
     * 
     */
    delete<T extends InteracaoRoboDeleteArgs>(args: SelectSubset<T, InteracaoRoboDeleteArgs<ExtArgs>>): Prisma__InteracaoRoboClient<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InteracaoRobo.
     * @param {InteracaoRoboUpdateArgs} args - Arguments to update one InteracaoRobo.
     * @example
     * // Update one InteracaoRobo
     * const interacaoRobo = await prisma.interacaoRobo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InteracaoRoboUpdateArgs>(args: SelectSubset<T, InteracaoRoboUpdateArgs<ExtArgs>>): Prisma__InteracaoRoboClient<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InteracaoRobos.
     * @param {InteracaoRoboDeleteManyArgs} args - Arguments to filter InteracaoRobos to delete.
     * @example
     * // Delete a few InteracaoRobos
     * const { count } = await prisma.interacaoRobo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InteracaoRoboDeleteManyArgs>(args?: SelectSubset<T, InteracaoRoboDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InteracaoRobos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteracaoRoboUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InteracaoRobos
     * const interacaoRobo = await prisma.interacaoRobo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InteracaoRoboUpdateManyArgs>(args: SelectSubset<T, InteracaoRoboUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InteracaoRobos and returns the data updated in the database.
     * @param {InteracaoRoboUpdateManyAndReturnArgs} args - Arguments to update many InteracaoRobos.
     * @example
     * // Update many InteracaoRobos
     * const interacaoRobo = await prisma.interacaoRobo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InteracaoRobos and only return the `id_interacao`
     * const interacaoRoboWithId_interacaoOnly = await prisma.interacaoRobo.updateManyAndReturn({
     *   select: { id_interacao: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InteracaoRoboUpdateManyAndReturnArgs>(args: SelectSubset<T, InteracaoRoboUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InteracaoRobo.
     * @param {InteracaoRoboUpsertArgs} args - Arguments to update or create a InteracaoRobo.
     * @example
     * // Update or create a InteracaoRobo
     * const interacaoRobo = await prisma.interacaoRobo.upsert({
     *   create: {
     *     // ... data to create a InteracaoRobo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InteracaoRobo we want to update
     *   }
     * })
     */
    upsert<T extends InteracaoRoboUpsertArgs>(args: SelectSubset<T, InteracaoRoboUpsertArgs<ExtArgs>>): Prisma__InteracaoRoboClient<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InteracaoRobos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteracaoRoboCountArgs} args - Arguments to filter InteracaoRobos to count.
     * @example
     * // Count the number of InteracaoRobos
     * const count = await prisma.interacaoRobo.count({
     *   where: {
     *     // ... the filter for the InteracaoRobos we want to count
     *   }
     * })
    **/
    count<T extends InteracaoRoboCountArgs>(
      args?: Subset<T, InteracaoRoboCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InteracaoRoboCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InteracaoRobo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteracaoRoboAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InteracaoRoboAggregateArgs>(args: Subset<T, InteracaoRoboAggregateArgs>): Prisma.PrismaPromise<GetInteracaoRoboAggregateType<T>>

    /**
     * Group by InteracaoRobo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InteracaoRoboGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InteracaoRoboGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InteracaoRoboGroupByArgs['orderBy'] }
        : { orderBy?: InteracaoRoboGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InteracaoRoboGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInteracaoRoboGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InteracaoRobo model
   */
  readonly fields: InteracaoRoboFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InteracaoRobo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InteracaoRoboClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    paciente<T extends PacienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PacienteDefaultArgs<ExtArgs>>): Prisma__PacienteClient<$Result.GetResult<Prisma.$PacientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    clinica<T extends ClinicaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClinicaDefaultArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    convenio<T extends InteracaoRobo$convenioArgs<ExtArgs> = {}>(args?: Subset<T, InteracaoRobo$convenioArgs<ExtArgs>>): Prisma__ConvenioClient<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InteracaoRobo model
   */
  interface InteracaoRoboFieldRefs {
    readonly id_interacao: FieldRef<"InteracaoRobo", 'Int'>
    readonly id_clinica: FieldRef<"InteracaoRobo", 'Int'>
    readonly id_paciente: FieldRef<"InteracaoRobo", 'Int'>
    readonly tipo: FieldRef<"InteracaoRobo", 'String'>
    readonly data_interacao: FieldRef<"InteracaoRobo", 'DateTime'>
    readonly id_convenio: FieldRef<"InteracaoRobo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * InteracaoRobo findUnique
   */
  export type InteracaoRoboFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboInclude<ExtArgs> | null
    /**
     * Filter, which InteracaoRobo to fetch.
     */
    where: InteracaoRoboWhereUniqueInput
  }

  /**
   * InteracaoRobo findUniqueOrThrow
   */
  export type InteracaoRoboFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboInclude<ExtArgs> | null
    /**
     * Filter, which InteracaoRobo to fetch.
     */
    where: InteracaoRoboWhereUniqueInput
  }

  /**
   * InteracaoRobo findFirst
   */
  export type InteracaoRoboFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboInclude<ExtArgs> | null
    /**
     * Filter, which InteracaoRobo to fetch.
     */
    where?: InteracaoRoboWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InteracaoRobos to fetch.
     */
    orderBy?: InteracaoRoboOrderByWithRelationInput | InteracaoRoboOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InteracaoRobos.
     */
    cursor?: InteracaoRoboWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InteracaoRobos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InteracaoRobos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InteracaoRobos.
     */
    distinct?: InteracaoRoboScalarFieldEnum | InteracaoRoboScalarFieldEnum[]
  }

  /**
   * InteracaoRobo findFirstOrThrow
   */
  export type InteracaoRoboFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboInclude<ExtArgs> | null
    /**
     * Filter, which InteracaoRobo to fetch.
     */
    where?: InteracaoRoboWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InteracaoRobos to fetch.
     */
    orderBy?: InteracaoRoboOrderByWithRelationInput | InteracaoRoboOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InteracaoRobos.
     */
    cursor?: InteracaoRoboWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InteracaoRobos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InteracaoRobos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InteracaoRobos.
     */
    distinct?: InteracaoRoboScalarFieldEnum | InteracaoRoboScalarFieldEnum[]
  }

  /**
   * InteracaoRobo findMany
   */
  export type InteracaoRoboFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboInclude<ExtArgs> | null
    /**
     * Filter, which InteracaoRobos to fetch.
     */
    where?: InteracaoRoboWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InteracaoRobos to fetch.
     */
    orderBy?: InteracaoRoboOrderByWithRelationInput | InteracaoRoboOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InteracaoRobos.
     */
    cursor?: InteracaoRoboWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InteracaoRobos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InteracaoRobos.
     */
    skip?: number
    distinct?: InteracaoRoboScalarFieldEnum | InteracaoRoboScalarFieldEnum[]
  }

  /**
   * InteracaoRobo create
   */
  export type InteracaoRoboCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboInclude<ExtArgs> | null
    /**
     * The data needed to create a InteracaoRobo.
     */
    data: XOR<InteracaoRoboCreateInput, InteracaoRoboUncheckedCreateInput>
  }

  /**
   * InteracaoRobo createMany
   */
  export type InteracaoRoboCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InteracaoRobos.
     */
    data: InteracaoRoboCreateManyInput | InteracaoRoboCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InteracaoRobo createManyAndReturn
   */
  export type InteracaoRoboCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * The data used to create many InteracaoRobos.
     */
    data: InteracaoRoboCreateManyInput | InteracaoRoboCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InteracaoRobo update
   */
  export type InteracaoRoboUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboInclude<ExtArgs> | null
    /**
     * The data needed to update a InteracaoRobo.
     */
    data: XOR<InteracaoRoboUpdateInput, InteracaoRoboUncheckedUpdateInput>
    /**
     * Choose, which InteracaoRobo to update.
     */
    where: InteracaoRoboWhereUniqueInput
  }

  /**
   * InteracaoRobo updateMany
   */
  export type InteracaoRoboUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InteracaoRobos.
     */
    data: XOR<InteracaoRoboUpdateManyMutationInput, InteracaoRoboUncheckedUpdateManyInput>
    /**
     * Filter which InteracaoRobos to update
     */
    where?: InteracaoRoboWhereInput
    /**
     * Limit how many InteracaoRobos to update.
     */
    limit?: number
  }

  /**
   * InteracaoRobo updateManyAndReturn
   */
  export type InteracaoRoboUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * The data used to update InteracaoRobos.
     */
    data: XOR<InteracaoRoboUpdateManyMutationInput, InteracaoRoboUncheckedUpdateManyInput>
    /**
     * Filter which InteracaoRobos to update
     */
    where?: InteracaoRoboWhereInput
    /**
     * Limit how many InteracaoRobos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InteracaoRobo upsert
   */
  export type InteracaoRoboUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboInclude<ExtArgs> | null
    /**
     * The filter to search for the InteracaoRobo to update in case it exists.
     */
    where: InteracaoRoboWhereUniqueInput
    /**
     * In case the InteracaoRobo found by the `where` argument doesn't exist, create a new InteracaoRobo with this data.
     */
    create: XOR<InteracaoRoboCreateInput, InteracaoRoboUncheckedCreateInput>
    /**
     * In case the InteracaoRobo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InteracaoRoboUpdateInput, InteracaoRoboUncheckedUpdateInput>
  }

  /**
   * InteracaoRobo delete
   */
  export type InteracaoRoboDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboInclude<ExtArgs> | null
    /**
     * Filter which InteracaoRobo to delete.
     */
    where: InteracaoRoboWhereUniqueInput
  }

  /**
   * InteracaoRobo deleteMany
   */
  export type InteracaoRoboDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InteracaoRobos to delete
     */
    where?: InteracaoRoboWhereInput
    /**
     * Limit how many InteracaoRobos to delete.
     */
    limit?: number
  }

  /**
   * InteracaoRobo.convenio
   */
  export type InteracaoRobo$convenioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioInclude<ExtArgs> | null
    where?: ConvenioWhereInput
  }

  /**
   * InteracaoRobo without action
   */
  export type InteracaoRoboDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboInclude<ExtArgs> | null
  }


  /**
   * Model Convenio
   */

  export type AggregateConvenio = {
    _count: ConvenioCountAggregateOutputType | null
    _avg: ConvenioAvgAggregateOutputType | null
    _sum: ConvenioSumAggregateOutputType | null
    _min: ConvenioMinAggregateOutputType | null
    _max: ConvenioMaxAggregateOutputType | null
  }

  export type ConvenioAvgAggregateOutputType = {
    id_convenio: number | null
    id_clinica: number | null
  }

  export type ConvenioSumAggregateOutputType = {
    id_convenio: number | null
    id_clinica: number | null
  }

  export type ConvenioMinAggregateOutputType = {
    id_convenio: number | null
    nome: string | null
    ativo: boolean | null
    id_clinica: number | null
    criado_em: Date | null
  }

  export type ConvenioMaxAggregateOutputType = {
    id_convenio: number | null
    nome: string | null
    ativo: boolean | null
    id_clinica: number | null
    criado_em: Date | null
  }

  export type ConvenioCountAggregateOutputType = {
    id_convenio: number
    nome: number
    ativo: number
    id_clinica: number
    criado_em: number
    _all: number
  }


  export type ConvenioAvgAggregateInputType = {
    id_convenio?: true
    id_clinica?: true
  }

  export type ConvenioSumAggregateInputType = {
    id_convenio?: true
    id_clinica?: true
  }

  export type ConvenioMinAggregateInputType = {
    id_convenio?: true
    nome?: true
    ativo?: true
    id_clinica?: true
    criado_em?: true
  }

  export type ConvenioMaxAggregateInputType = {
    id_convenio?: true
    nome?: true
    ativo?: true
    id_clinica?: true
    criado_em?: true
  }

  export type ConvenioCountAggregateInputType = {
    id_convenio?: true
    nome?: true
    ativo?: true
    id_clinica?: true
    criado_em?: true
    _all?: true
  }

  export type ConvenioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Convenio to aggregate.
     */
    where?: ConvenioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Convenios to fetch.
     */
    orderBy?: ConvenioOrderByWithRelationInput | ConvenioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConvenioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Convenios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Convenios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Convenios
    **/
    _count?: true | ConvenioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConvenioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConvenioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConvenioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConvenioMaxAggregateInputType
  }

  export type GetConvenioAggregateType<T extends ConvenioAggregateArgs> = {
        [P in keyof T & keyof AggregateConvenio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConvenio[P]>
      : GetScalarType<T[P], AggregateConvenio[P]>
  }




  export type ConvenioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConvenioWhereInput
    orderBy?: ConvenioOrderByWithAggregationInput | ConvenioOrderByWithAggregationInput[]
    by: ConvenioScalarFieldEnum[] | ConvenioScalarFieldEnum
    having?: ConvenioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConvenioCountAggregateInputType | true
    _avg?: ConvenioAvgAggregateInputType
    _sum?: ConvenioSumAggregateInputType
    _min?: ConvenioMinAggregateInputType
    _max?: ConvenioMaxAggregateInputType
  }

  export type ConvenioGroupByOutputType = {
    id_convenio: number
    nome: string
    ativo: boolean
    id_clinica: number
    criado_em: Date
    _count: ConvenioCountAggregateOutputType | null
    _avg: ConvenioAvgAggregateOutputType | null
    _sum: ConvenioSumAggregateOutputType | null
    _min: ConvenioMinAggregateOutputType | null
    _max: ConvenioMaxAggregateOutputType | null
  }

  type GetConvenioGroupByPayload<T extends ConvenioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConvenioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConvenioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConvenioGroupByOutputType[P]>
            : GetScalarType<T[P], ConvenioGroupByOutputType[P]>
        }
      >
    >


  export type ConvenioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_convenio?: boolean
    nome?: boolean
    ativo?: boolean
    id_clinica?: boolean
    criado_em?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    consultas?: boolean | Convenio$consultasArgs<ExtArgs>
    interacoes_robo?: boolean | Convenio$interacoes_roboArgs<ExtArgs>
    _count?: boolean | ConvenioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["convenio"]>

  export type ConvenioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_convenio?: boolean
    nome?: boolean
    ativo?: boolean
    id_clinica?: boolean
    criado_em?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["convenio"]>

  export type ConvenioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_convenio?: boolean
    nome?: boolean
    ativo?: boolean
    id_clinica?: boolean
    criado_em?: boolean
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["convenio"]>

  export type ConvenioSelectScalar = {
    id_convenio?: boolean
    nome?: boolean
    ativo?: boolean
    id_clinica?: boolean
    criado_em?: boolean
  }

  export type ConvenioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_convenio" | "nome" | "ativo" | "id_clinica" | "criado_em", ExtArgs["result"]["convenio"]>
  export type ConvenioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
    consultas?: boolean | Convenio$consultasArgs<ExtArgs>
    interacoes_robo?: boolean | Convenio$interacoes_roboArgs<ExtArgs>
    _count?: boolean | ConvenioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ConvenioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }
  export type ConvenioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clinica?: boolean | ClinicaDefaultArgs<ExtArgs>
  }

  export type $ConvenioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Convenio"
    objects: {
      clinica: Prisma.$ClinicaPayload<ExtArgs>
      consultas: Prisma.$ConsultaPayload<ExtArgs>[]
      interacoes_robo: Prisma.$InteracaoRoboPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_convenio: number
      nome: string
      ativo: boolean
      id_clinica: number
      criado_em: Date
    }, ExtArgs["result"]["convenio"]>
    composites: {}
  }

  type ConvenioGetPayload<S extends boolean | null | undefined | ConvenioDefaultArgs> = $Result.GetResult<Prisma.$ConvenioPayload, S>

  type ConvenioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ConvenioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConvenioCountAggregateInputType | true
    }

  export interface ConvenioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Convenio'], meta: { name: 'Convenio' } }
    /**
     * Find zero or one Convenio that matches the filter.
     * @param {ConvenioFindUniqueArgs} args - Arguments to find a Convenio
     * @example
     * // Get one Convenio
     * const convenio = await prisma.convenio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConvenioFindUniqueArgs>(args: SelectSubset<T, ConvenioFindUniqueArgs<ExtArgs>>): Prisma__ConvenioClient<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Convenio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ConvenioFindUniqueOrThrowArgs} args - Arguments to find a Convenio
     * @example
     * // Get one Convenio
     * const convenio = await prisma.convenio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConvenioFindUniqueOrThrowArgs>(args: SelectSubset<T, ConvenioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConvenioClient<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Convenio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConvenioFindFirstArgs} args - Arguments to find a Convenio
     * @example
     * // Get one Convenio
     * const convenio = await prisma.convenio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConvenioFindFirstArgs>(args?: SelectSubset<T, ConvenioFindFirstArgs<ExtArgs>>): Prisma__ConvenioClient<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Convenio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConvenioFindFirstOrThrowArgs} args - Arguments to find a Convenio
     * @example
     * // Get one Convenio
     * const convenio = await prisma.convenio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConvenioFindFirstOrThrowArgs>(args?: SelectSubset<T, ConvenioFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConvenioClient<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Convenios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConvenioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Convenios
     * const convenios = await prisma.convenio.findMany()
     * 
     * // Get first 10 Convenios
     * const convenios = await prisma.convenio.findMany({ take: 10 })
     * 
     * // Only select the `id_convenio`
     * const convenioWithId_convenioOnly = await prisma.convenio.findMany({ select: { id_convenio: true } })
     * 
     */
    findMany<T extends ConvenioFindManyArgs>(args?: SelectSubset<T, ConvenioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Convenio.
     * @param {ConvenioCreateArgs} args - Arguments to create a Convenio.
     * @example
     * // Create one Convenio
     * const Convenio = await prisma.convenio.create({
     *   data: {
     *     // ... data to create a Convenio
     *   }
     * })
     * 
     */
    create<T extends ConvenioCreateArgs>(args: SelectSubset<T, ConvenioCreateArgs<ExtArgs>>): Prisma__ConvenioClient<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Convenios.
     * @param {ConvenioCreateManyArgs} args - Arguments to create many Convenios.
     * @example
     * // Create many Convenios
     * const convenio = await prisma.convenio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConvenioCreateManyArgs>(args?: SelectSubset<T, ConvenioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Convenios and returns the data saved in the database.
     * @param {ConvenioCreateManyAndReturnArgs} args - Arguments to create many Convenios.
     * @example
     * // Create many Convenios
     * const convenio = await prisma.convenio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Convenios and only return the `id_convenio`
     * const convenioWithId_convenioOnly = await prisma.convenio.createManyAndReturn({
     *   select: { id_convenio: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConvenioCreateManyAndReturnArgs>(args?: SelectSubset<T, ConvenioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Convenio.
     * @param {ConvenioDeleteArgs} args - Arguments to delete one Convenio.
     * @example
     * // Delete one Convenio
     * const Convenio = await prisma.convenio.delete({
     *   where: {
     *     // ... filter to delete one Convenio
     *   }
     * })
     * 
     */
    delete<T extends ConvenioDeleteArgs>(args: SelectSubset<T, ConvenioDeleteArgs<ExtArgs>>): Prisma__ConvenioClient<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Convenio.
     * @param {ConvenioUpdateArgs} args - Arguments to update one Convenio.
     * @example
     * // Update one Convenio
     * const convenio = await prisma.convenio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConvenioUpdateArgs>(args: SelectSubset<T, ConvenioUpdateArgs<ExtArgs>>): Prisma__ConvenioClient<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Convenios.
     * @param {ConvenioDeleteManyArgs} args - Arguments to filter Convenios to delete.
     * @example
     * // Delete a few Convenios
     * const { count } = await prisma.convenio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConvenioDeleteManyArgs>(args?: SelectSubset<T, ConvenioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Convenios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConvenioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Convenios
     * const convenio = await prisma.convenio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConvenioUpdateManyArgs>(args: SelectSubset<T, ConvenioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Convenios and returns the data updated in the database.
     * @param {ConvenioUpdateManyAndReturnArgs} args - Arguments to update many Convenios.
     * @example
     * // Update many Convenios
     * const convenio = await prisma.convenio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Convenios and only return the `id_convenio`
     * const convenioWithId_convenioOnly = await prisma.convenio.updateManyAndReturn({
     *   select: { id_convenio: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ConvenioUpdateManyAndReturnArgs>(args: SelectSubset<T, ConvenioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Convenio.
     * @param {ConvenioUpsertArgs} args - Arguments to update or create a Convenio.
     * @example
     * // Update or create a Convenio
     * const convenio = await prisma.convenio.upsert({
     *   create: {
     *     // ... data to create a Convenio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Convenio we want to update
     *   }
     * })
     */
    upsert<T extends ConvenioUpsertArgs>(args: SelectSubset<T, ConvenioUpsertArgs<ExtArgs>>): Prisma__ConvenioClient<$Result.GetResult<Prisma.$ConvenioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Convenios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConvenioCountArgs} args - Arguments to filter Convenios to count.
     * @example
     * // Count the number of Convenios
     * const count = await prisma.convenio.count({
     *   where: {
     *     // ... the filter for the Convenios we want to count
     *   }
     * })
    **/
    count<T extends ConvenioCountArgs>(
      args?: Subset<T, ConvenioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConvenioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Convenio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConvenioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConvenioAggregateArgs>(args: Subset<T, ConvenioAggregateArgs>): Prisma.PrismaPromise<GetConvenioAggregateType<T>>

    /**
     * Group by Convenio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConvenioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConvenioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConvenioGroupByArgs['orderBy'] }
        : { orderBy?: ConvenioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConvenioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConvenioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Convenio model
   */
  readonly fields: ConvenioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Convenio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConvenioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clinica<T extends ClinicaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClinicaDefaultArgs<ExtArgs>>): Prisma__ClinicaClient<$Result.GetResult<Prisma.$ClinicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    consultas<T extends Convenio$consultasArgs<ExtArgs> = {}>(args?: Subset<T, Convenio$consultasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    interacoes_robo<T extends Convenio$interacoes_roboArgs<ExtArgs> = {}>(args?: Subset<T, Convenio$interacoes_roboArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InteracaoRoboPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Convenio model
   */
  interface ConvenioFieldRefs {
    readonly id_convenio: FieldRef<"Convenio", 'Int'>
    readonly nome: FieldRef<"Convenio", 'String'>
    readonly ativo: FieldRef<"Convenio", 'Boolean'>
    readonly id_clinica: FieldRef<"Convenio", 'Int'>
    readonly criado_em: FieldRef<"Convenio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Convenio findUnique
   */
  export type ConvenioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioInclude<ExtArgs> | null
    /**
     * Filter, which Convenio to fetch.
     */
    where: ConvenioWhereUniqueInput
  }

  /**
   * Convenio findUniqueOrThrow
   */
  export type ConvenioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioInclude<ExtArgs> | null
    /**
     * Filter, which Convenio to fetch.
     */
    where: ConvenioWhereUniqueInput
  }

  /**
   * Convenio findFirst
   */
  export type ConvenioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioInclude<ExtArgs> | null
    /**
     * Filter, which Convenio to fetch.
     */
    where?: ConvenioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Convenios to fetch.
     */
    orderBy?: ConvenioOrderByWithRelationInput | ConvenioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Convenios.
     */
    cursor?: ConvenioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Convenios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Convenios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Convenios.
     */
    distinct?: ConvenioScalarFieldEnum | ConvenioScalarFieldEnum[]
  }

  /**
   * Convenio findFirstOrThrow
   */
  export type ConvenioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioInclude<ExtArgs> | null
    /**
     * Filter, which Convenio to fetch.
     */
    where?: ConvenioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Convenios to fetch.
     */
    orderBy?: ConvenioOrderByWithRelationInput | ConvenioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Convenios.
     */
    cursor?: ConvenioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Convenios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Convenios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Convenios.
     */
    distinct?: ConvenioScalarFieldEnum | ConvenioScalarFieldEnum[]
  }

  /**
   * Convenio findMany
   */
  export type ConvenioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioInclude<ExtArgs> | null
    /**
     * Filter, which Convenios to fetch.
     */
    where?: ConvenioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Convenios to fetch.
     */
    orderBy?: ConvenioOrderByWithRelationInput | ConvenioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Convenios.
     */
    cursor?: ConvenioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Convenios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Convenios.
     */
    skip?: number
    distinct?: ConvenioScalarFieldEnum | ConvenioScalarFieldEnum[]
  }

  /**
   * Convenio create
   */
  export type ConvenioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioInclude<ExtArgs> | null
    /**
     * The data needed to create a Convenio.
     */
    data: XOR<ConvenioCreateInput, ConvenioUncheckedCreateInput>
  }

  /**
   * Convenio createMany
   */
  export type ConvenioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Convenios.
     */
    data: ConvenioCreateManyInput | ConvenioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Convenio createManyAndReturn
   */
  export type ConvenioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * The data used to create many Convenios.
     */
    data: ConvenioCreateManyInput | ConvenioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Convenio update
   */
  export type ConvenioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioInclude<ExtArgs> | null
    /**
     * The data needed to update a Convenio.
     */
    data: XOR<ConvenioUpdateInput, ConvenioUncheckedUpdateInput>
    /**
     * Choose, which Convenio to update.
     */
    where: ConvenioWhereUniqueInput
  }

  /**
   * Convenio updateMany
   */
  export type ConvenioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Convenios.
     */
    data: XOR<ConvenioUpdateManyMutationInput, ConvenioUncheckedUpdateManyInput>
    /**
     * Filter which Convenios to update
     */
    where?: ConvenioWhereInput
    /**
     * Limit how many Convenios to update.
     */
    limit?: number
  }

  /**
   * Convenio updateManyAndReturn
   */
  export type ConvenioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * The data used to update Convenios.
     */
    data: XOR<ConvenioUpdateManyMutationInput, ConvenioUncheckedUpdateManyInput>
    /**
     * Filter which Convenios to update
     */
    where?: ConvenioWhereInput
    /**
     * Limit how many Convenios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Convenio upsert
   */
  export type ConvenioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioInclude<ExtArgs> | null
    /**
     * The filter to search for the Convenio to update in case it exists.
     */
    where: ConvenioWhereUniqueInput
    /**
     * In case the Convenio found by the `where` argument doesn't exist, create a new Convenio with this data.
     */
    create: XOR<ConvenioCreateInput, ConvenioUncheckedCreateInput>
    /**
     * In case the Convenio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConvenioUpdateInput, ConvenioUncheckedUpdateInput>
  }

  /**
   * Convenio delete
   */
  export type ConvenioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioInclude<ExtArgs> | null
    /**
     * Filter which Convenio to delete.
     */
    where: ConvenioWhereUniqueInput
  }

  /**
   * Convenio deleteMany
   */
  export type ConvenioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Convenios to delete
     */
    where?: ConvenioWhereInput
    /**
     * Limit how many Convenios to delete.
     */
    limit?: number
  }

  /**
   * Convenio.consultas
   */
  export type Convenio$consultasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consulta
     */
    select?: ConsultaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Consulta
     */
    omit?: ConsultaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultaInclude<ExtArgs> | null
    where?: ConsultaWhereInput
    orderBy?: ConsultaOrderByWithRelationInput | ConsultaOrderByWithRelationInput[]
    cursor?: ConsultaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConsultaScalarFieldEnum | ConsultaScalarFieldEnum[]
  }

  /**
   * Convenio.interacoes_robo
   */
  export type Convenio$interacoes_roboArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InteracaoRobo
     */
    select?: InteracaoRoboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InteracaoRobo
     */
    omit?: InteracaoRoboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InteracaoRoboInclude<ExtArgs> | null
    where?: InteracaoRoboWhereInput
    orderBy?: InteracaoRoboOrderByWithRelationInput | InteracaoRoboOrderByWithRelationInput[]
    cursor?: InteracaoRoboWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InteracaoRoboScalarFieldEnum | InteracaoRoboScalarFieldEnum[]
  }

  /**
   * Convenio without action
   */
  export type ConvenioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Convenio
     */
    select?: ConvenioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Convenio
     */
    omit?: ConvenioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConvenioInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ClinicaScalarFieldEnum: {
    id_clinica: 'id_clinica',
    nome_clinica: 'nome_clinica',
    telefone: 'telefone',
    email: 'email',
    cnpj: 'cnpj',
    razao_social: 'razao_social',
    cep: 'cep',
    logradouro: 'logradouro',
    numero: 'numero',
    complemento: 'complemento',
    bairro: 'bairro',
    cidade: 'cidade',
    uf: 'uf',
    codigo_ibge: 'codigo_ibge',
    plano: 'plano',
    ativo: 'ativo',
    criado_em: 'criado_em'
  };

  export type ClinicaScalarFieldEnum = (typeof ClinicaScalarFieldEnum)[keyof typeof ClinicaScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    id_usuario: 'id_usuario',
    nome: 'nome',
    email: 'email',
    senha: 'senha',
    tipo: 'tipo',
    ativo: 'ativo',
    criado_em: 'criado_em',
    id_clinica: 'id_clinica'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const PacienteScalarFieldEnum: {
    id_paciente: 'id_paciente',
    cpf: 'cpf',
    nome: 'nome',
    data_nascimento: 'data_nascimento',
    email: 'email',
    telefone: 'telefone',
    codigo_ibge: 'codigo_ibge',
    cep: 'cep',
    logradouro: 'logradouro',
    numero: 'numero',
    complemento: 'complemento',
    bairro: 'bairro',
    cidade: 'cidade',
    uf: 'uf',
    senha: 'senha',
    ativo: 'ativo',
    id_clinica: 'id_clinica'
  };

  export type PacienteScalarFieldEnum = (typeof PacienteScalarFieldEnum)[keyof typeof PacienteScalarFieldEnum]


  export const ProfissionalDaSaudeScalarFieldEnum: {
    id_profissional_saude: 'id_profissional_saude',
    nome_profissional: 'nome_profissional',
    imagem_profissional: 'imagem_profissional',
    data_nascimento: 'data_nascimento',
    cpf: 'cpf',
    conselho: 'conselho',
    numero_conselho: 'numero_conselho',
    uf_conselho: 'uf_conselho',
    rqe: 'rqe',
    telefone: 'telefone',
    email: 'email',
    telemedicina: 'telemedicina',
    especialidade: 'especialidade',
    ativo: 'ativo',
    id_clinica: 'id_clinica',
    usuario_id: 'usuario_id'
  };

  export type ProfissionalDaSaudeScalarFieldEnum = (typeof ProfissionalDaSaudeScalarFieldEnum)[keyof typeof ProfissionalDaSaudeScalarFieldEnum]


  export const ConsultaScalarFieldEnum: {
    id_consulta: 'id_consulta',
    data_hora_inicio: 'data_hora_inicio',
    data_hora_fim: 'data_hora_fim',
    valor: 'valor',
    telemedicina: 'telemedicina',
    status: 'status',
    observacoes: 'observacoes',
    paciente_id: 'paciente_id',
    profissional_id: 'profissional_id',
    id_clinica: 'id_clinica',
    id_convenio: 'id_convenio'
  };

  export type ConsultaScalarFieldEnum = (typeof ConsultaScalarFieldEnum)[keyof typeof ConsultaScalarFieldEnum]


  export const AvaliacaoScalarFieldEnum: {
    id_avaliacao: 'id_avaliacao',
    consulta_id: 'consulta_id',
    data_avaliacao: 'data_avaliacao',
    descricao: 'descricao',
    parecer_profissional: 'parecer_profissional',
    id_clinica: 'id_clinica'
  };

  export type AvaliacaoScalarFieldEnum = (typeof AvaliacaoScalarFieldEnum)[keyof typeof AvaliacaoScalarFieldEnum]


  export const ProcedimentoScalarFieldEnum: {
    id_procedimento: 'id_procedimento',
    nome_procedimento: 'nome_procedimento',
    tipo: 'tipo',
    valor: 'valor',
    duracao_minutos: 'duracao_minutos',
    telemedicina: 'telemedicina',
    descricao: 'descricao',
    ativo: 'ativo',
    criado_em: 'criado_em',
    atualizado_em: 'atualizado_em',
    id_clinica: 'id_clinica'
  };

  export type ProcedimentoScalarFieldEnum = (typeof ProcedimentoScalarFieldEnum)[keyof typeof ProcedimentoScalarFieldEnum]


  export const ConsultaProcedimentoScalarFieldEnum: {
    consulta_id: 'consulta_id',
    procedimento_id: 'procedimento_id'
  };

  export type ConsultaProcedimentoScalarFieldEnum = (typeof ConsultaProcedimentoScalarFieldEnum)[keyof typeof ConsultaProcedimentoScalarFieldEnum]


  export const AgendaScalarFieldEnum: {
    id_agenda: 'id_agenda',
    data: 'data',
    hora_inicio: 'hora_inicio',
    hora_fim: 'hora_fim',
    status: 'status',
    tipo_bloqueio: 'tipo_bloqueio',
    criado_em: 'criado_em',
    profissional_id: 'profissional_id',
    id_clinica: 'id_clinica'
  };

  export type AgendaScalarFieldEnum = (typeof AgendaScalarFieldEnum)[keyof typeof AgendaScalarFieldEnum]


  export const ControleOperacionalScalarFieldEnum: {
    id_controle: 'id_controle',
    id_clinica: 'id_clinica',
    data_referencia: 'data_referencia',
    pacientes_agendados: 'pacientes_agendados',
    pacientes_nao_agendados: 'pacientes_nao_agendados',
    pacientes_faltantes: 'pacientes_faltantes',
    nps: 'nps',
    total_consultas: 'total_consultas',
    total_procedimentos: 'total_procedimentos',
    valor_arrecadado: 'valor_arrecadado',
    horas_robo_trabalhadas: 'horas_robo_trabalhadas',
    economia_estimada: 'economia_estimada',
    criado_em: 'criado_em'
  };

  export type ControleOperacionalScalarFieldEnum = (typeof ControleOperacionalScalarFieldEnum)[keyof typeof ControleOperacionalScalarFieldEnum]


  export const InteracaoRoboScalarFieldEnum: {
    id_interacao: 'id_interacao',
    id_clinica: 'id_clinica',
    id_paciente: 'id_paciente',
    tipo: 'tipo',
    data_interacao: 'data_interacao',
    id_convenio: 'id_convenio'
  };

  export type InteracaoRoboScalarFieldEnum = (typeof InteracaoRoboScalarFieldEnum)[keyof typeof InteracaoRoboScalarFieldEnum]


  export const ConvenioScalarFieldEnum: {
    id_convenio: 'id_convenio',
    nome: 'nome',
    ativo: 'ativo',
    id_clinica: 'id_clinica',
    criado_em: 'criado_em'
  };

  export type ConvenioScalarFieldEnum = (typeof ConvenioScalarFieldEnum)[keyof typeof ConvenioScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type ClinicaWhereInput = {
    AND?: ClinicaWhereInput | ClinicaWhereInput[]
    OR?: ClinicaWhereInput[]
    NOT?: ClinicaWhereInput | ClinicaWhereInput[]
    id_clinica?: IntFilter<"Clinica"> | number
    nome_clinica?: StringFilter<"Clinica"> | string
    telefone?: StringNullableFilter<"Clinica"> | string | null
    email?: StringNullableFilter<"Clinica"> | string | null
    cnpj?: StringNullableFilter<"Clinica"> | string | null
    razao_social?: StringNullableFilter<"Clinica"> | string | null
    cep?: StringNullableFilter<"Clinica"> | string | null
    logradouro?: StringNullableFilter<"Clinica"> | string | null
    numero?: StringNullableFilter<"Clinica"> | string | null
    complemento?: StringNullableFilter<"Clinica"> | string | null
    bairro?: StringNullableFilter<"Clinica"> | string | null
    cidade?: StringNullableFilter<"Clinica"> | string | null
    uf?: StringNullableFilter<"Clinica"> | string | null
    codigo_ibge?: StringNullableFilter<"Clinica"> | string | null
    plano?: StringFilter<"Clinica"> | string
    ativo?: BoolFilter<"Clinica"> | boolean
    criado_em?: DateTimeFilter<"Clinica"> | Date | string
    usuarios?: UsuarioListRelationFilter
    profissionais?: ProfissionalDaSaudeListRelationFilter
    pacientes?: PacienteListRelationFilter
    consultas?: ConsultaListRelationFilter
    procedimentos?: ProcedimentoListRelationFilter
    agendas?: AgendaListRelationFilter
    avaliacoes?: AvaliacaoListRelationFilter
    controle_operacional?: ControleOperacionalListRelationFilter
    interacao_robo?: InteracaoRoboListRelationFilter
    convenios?: ConvenioListRelationFilter
  }

  export type ClinicaOrderByWithRelationInput = {
    id_clinica?: SortOrder
    nome_clinica?: SortOrder
    telefone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    cnpj?: SortOrderInput | SortOrder
    razao_social?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    logradouro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    uf?: SortOrderInput | SortOrder
    codigo_ibge?: SortOrderInput | SortOrder
    plano?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    usuarios?: UsuarioOrderByRelationAggregateInput
    profissionais?: ProfissionalDaSaudeOrderByRelationAggregateInput
    pacientes?: PacienteOrderByRelationAggregateInput
    consultas?: ConsultaOrderByRelationAggregateInput
    procedimentos?: ProcedimentoOrderByRelationAggregateInput
    agendas?: AgendaOrderByRelationAggregateInput
    avaliacoes?: AvaliacaoOrderByRelationAggregateInput
    controle_operacional?: ControleOperacionalOrderByRelationAggregateInput
    interacao_robo?: InteracaoRoboOrderByRelationAggregateInput
    convenios?: ConvenioOrderByRelationAggregateInput
  }

  export type ClinicaWhereUniqueInput = Prisma.AtLeast<{
    id_clinica?: number
    AND?: ClinicaWhereInput | ClinicaWhereInput[]
    OR?: ClinicaWhereInput[]
    NOT?: ClinicaWhereInput | ClinicaWhereInput[]
    nome_clinica?: StringFilter<"Clinica"> | string
    telefone?: StringNullableFilter<"Clinica"> | string | null
    email?: StringNullableFilter<"Clinica"> | string | null
    cnpj?: StringNullableFilter<"Clinica"> | string | null
    razao_social?: StringNullableFilter<"Clinica"> | string | null
    cep?: StringNullableFilter<"Clinica"> | string | null
    logradouro?: StringNullableFilter<"Clinica"> | string | null
    numero?: StringNullableFilter<"Clinica"> | string | null
    complemento?: StringNullableFilter<"Clinica"> | string | null
    bairro?: StringNullableFilter<"Clinica"> | string | null
    cidade?: StringNullableFilter<"Clinica"> | string | null
    uf?: StringNullableFilter<"Clinica"> | string | null
    codigo_ibge?: StringNullableFilter<"Clinica"> | string | null
    plano?: StringFilter<"Clinica"> | string
    ativo?: BoolFilter<"Clinica"> | boolean
    criado_em?: DateTimeFilter<"Clinica"> | Date | string
    usuarios?: UsuarioListRelationFilter
    profissionais?: ProfissionalDaSaudeListRelationFilter
    pacientes?: PacienteListRelationFilter
    consultas?: ConsultaListRelationFilter
    procedimentos?: ProcedimentoListRelationFilter
    agendas?: AgendaListRelationFilter
    avaliacoes?: AvaliacaoListRelationFilter
    controle_operacional?: ControleOperacionalListRelationFilter
    interacao_robo?: InteracaoRoboListRelationFilter
    convenios?: ConvenioListRelationFilter
  }, "id_clinica">

  export type ClinicaOrderByWithAggregationInput = {
    id_clinica?: SortOrder
    nome_clinica?: SortOrder
    telefone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    cnpj?: SortOrderInput | SortOrder
    razao_social?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    logradouro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    uf?: SortOrderInput | SortOrder
    codigo_ibge?: SortOrderInput | SortOrder
    plano?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    _count?: ClinicaCountOrderByAggregateInput
    _avg?: ClinicaAvgOrderByAggregateInput
    _max?: ClinicaMaxOrderByAggregateInput
    _min?: ClinicaMinOrderByAggregateInput
    _sum?: ClinicaSumOrderByAggregateInput
  }

  export type ClinicaScalarWhereWithAggregatesInput = {
    AND?: ClinicaScalarWhereWithAggregatesInput | ClinicaScalarWhereWithAggregatesInput[]
    OR?: ClinicaScalarWhereWithAggregatesInput[]
    NOT?: ClinicaScalarWhereWithAggregatesInput | ClinicaScalarWhereWithAggregatesInput[]
    id_clinica?: IntWithAggregatesFilter<"Clinica"> | number
    nome_clinica?: StringWithAggregatesFilter<"Clinica"> | string
    telefone?: StringNullableWithAggregatesFilter<"Clinica"> | string | null
    email?: StringNullableWithAggregatesFilter<"Clinica"> | string | null
    cnpj?: StringNullableWithAggregatesFilter<"Clinica"> | string | null
    razao_social?: StringNullableWithAggregatesFilter<"Clinica"> | string | null
    cep?: StringNullableWithAggregatesFilter<"Clinica"> | string | null
    logradouro?: StringNullableWithAggregatesFilter<"Clinica"> | string | null
    numero?: StringNullableWithAggregatesFilter<"Clinica"> | string | null
    complemento?: StringNullableWithAggregatesFilter<"Clinica"> | string | null
    bairro?: StringNullableWithAggregatesFilter<"Clinica"> | string | null
    cidade?: StringNullableWithAggregatesFilter<"Clinica"> | string | null
    uf?: StringNullableWithAggregatesFilter<"Clinica"> | string | null
    codigo_ibge?: StringNullableWithAggregatesFilter<"Clinica"> | string | null
    plano?: StringWithAggregatesFilter<"Clinica"> | string
    ativo?: BoolWithAggregatesFilter<"Clinica"> | boolean
    criado_em?: DateTimeWithAggregatesFilter<"Clinica"> | Date | string
  }

  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id_usuario?: IntFilter<"Usuario"> | number
    nome?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    senha?: StringFilter<"Usuario"> | string
    tipo?: StringFilter<"Usuario"> | string
    ativo?: BoolFilter<"Usuario"> | boolean
    criado_em?: DateTimeFilter<"Usuario"> | Date | string
    id_clinica?: IntFilter<"Usuario"> | number
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    profissional?: XOR<ProfissionalDaSaudeNullableScalarRelationFilter, ProfissionalDaSaudeWhereInput> | null
  }

  export type UsuarioOrderByWithRelationInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    tipo?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    id_clinica?: SortOrder
    clinica?: ClinicaOrderByWithRelationInput
    profissional?: ProfissionalDaSaudeOrderByWithRelationInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id_usuario?: number
    email?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nome?: StringFilter<"Usuario"> | string
    senha?: StringFilter<"Usuario"> | string
    tipo?: StringFilter<"Usuario"> | string
    ativo?: BoolFilter<"Usuario"> | boolean
    criado_em?: DateTimeFilter<"Usuario"> | Date | string
    id_clinica?: IntFilter<"Usuario"> | number
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    profissional?: XOR<ProfissionalDaSaudeNullableScalarRelationFilter, ProfissionalDaSaudeWhereInput> | null
  }, "id_usuario" | "email">

  export type UsuarioOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    tipo?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    id_clinica?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id_usuario?: IntWithAggregatesFilter<"Usuario"> | number
    nome?: StringWithAggregatesFilter<"Usuario"> | string
    email?: StringWithAggregatesFilter<"Usuario"> | string
    senha?: StringWithAggregatesFilter<"Usuario"> | string
    tipo?: StringWithAggregatesFilter<"Usuario"> | string
    ativo?: BoolWithAggregatesFilter<"Usuario"> | boolean
    criado_em?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    id_clinica?: IntWithAggregatesFilter<"Usuario"> | number
  }

  export type PacienteWhereInput = {
    AND?: PacienteWhereInput | PacienteWhereInput[]
    OR?: PacienteWhereInput[]
    NOT?: PacienteWhereInput | PacienteWhereInput[]
    id_paciente?: IntFilter<"Paciente"> | number
    cpf?: StringFilter<"Paciente"> | string
    nome?: StringFilter<"Paciente"> | string
    data_nascimento?: DateTimeFilter<"Paciente"> | Date | string
    email?: StringFilter<"Paciente"> | string
    telefone?: StringFilter<"Paciente"> | string
    codigo_ibge?: StringNullableFilter<"Paciente"> | string | null
    cep?: StringNullableFilter<"Paciente"> | string | null
    logradouro?: StringNullableFilter<"Paciente"> | string | null
    numero?: StringNullableFilter<"Paciente"> | string | null
    complemento?: StringNullableFilter<"Paciente"> | string | null
    bairro?: StringNullableFilter<"Paciente"> | string | null
    cidade?: StringNullableFilter<"Paciente"> | string | null
    uf?: StringNullableFilter<"Paciente"> | string | null
    senha?: StringNullableFilter<"Paciente"> | string | null
    ativo?: BoolFilter<"Paciente"> | boolean
    id_clinica?: IntFilter<"Paciente"> | number
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    consultas?: ConsultaListRelationFilter
    interacao_robo?: InteracaoRoboListRelationFilter
  }

  export type PacienteOrderByWithRelationInput = {
    id_paciente?: SortOrder
    cpf?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    codigo_ibge?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    logradouro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    uf?: SortOrderInput | SortOrder
    senha?: SortOrderInput | SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
    clinica?: ClinicaOrderByWithRelationInput
    consultas?: ConsultaOrderByRelationAggregateInput
    interacao_robo?: InteracaoRoboOrderByRelationAggregateInput
  }

  export type PacienteWhereUniqueInput = Prisma.AtLeast<{
    id_paciente?: number
    cpf?: string
    AND?: PacienteWhereInput | PacienteWhereInput[]
    OR?: PacienteWhereInput[]
    NOT?: PacienteWhereInput | PacienteWhereInput[]
    nome?: StringFilter<"Paciente"> | string
    data_nascimento?: DateTimeFilter<"Paciente"> | Date | string
    email?: StringFilter<"Paciente"> | string
    telefone?: StringFilter<"Paciente"> | string
    codigo_ibge?: StringNullableFilter<"Paciente"> | string | null
    cep?: StringNullableFilter<"Paciente"> | string | null
    logradouro?: StringNullableFilter<"Paciente"> | string | null
    numero?: StringNullableFilter<"Paciente"> | string | null
    complemento?: StringNullableFilter<"Paciente"> | string | null
    bairro?: StringNullableFilter<"Paciente"> | string | null
    cidade?: StringNullableFilter<"Paciente"> | string | null
    uf?: StringNullableFilter<"Paciente"> | string | null
    senha?: StringNullableFilter<"Paciente"> | string | null
    ativo?: BoolFilter<"Paciente"> | boolean
    id_clinica?: IntFilter<"Paciente"> | number
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    consultas?: ConsultaListRelationFilter
    interacao_robo?: InteracaoRoboListRelationFilter
  }, "id_paciente" | "cpf">

  export type PacienteOrderByWithAggregationInput = {
    id_paciente?: SortOrder
    cpf?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    codigo_ibge?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    logradouro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    uf?: SortOrderInput | SortOrder
    senha?: SortOrderInput | SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
    _count?: PacienteCountOrderByAggregateInput
    _avg?: PacienteAvgOrderByAggregateInput
    _max?: PacienteMaxOrderByAggregateInput
    _min?: PacienteMinOrderByAggregateInput
    _sum?: PacienteSumOrderByAggregateInput
  }

  export type PacienteScalarWhereWithAggregatesInput = {
    AND?: PacienteScalarWhereWithAggregatesInput | PacienteScalarWhereWithAggregatesInput[]
    OR?: PacienteScalarWhereWithAggregatesInput[]
    NOT?: PacienteScalarWhereWithAggregatesInput | PacienteScalarWhereWithAggregatesInput[]
    id_paciente?: IntWithAggregatesFilter<"Paciente"> | number
    cpf?: StringWithAggregatesFilter<"Paciente"> | string
    nome?: StringWithAggregatesFilter<"Paciente"> | string
    data_nascimento?: DateTimeWithAggregatesFilter<"Paciente"> | Date | string
    email?: StringWithAggregatesFilter<"Paciente"> | string
    telefone?: StringWithAggregatesFilter<"Paciente"> | string
    codigo_ibge?: StringNullableWithAggregatesFilter<"Paciente"> | string | null
    cep?: StringNullableWithAggregatesFilter<"Paciente"> | string | null
    logradouro?: StringNullableWithAggregatesFilter<"Paciente"> | string | null
    numero?: StringNullableWithAggregatesFilter<"Paciente"> | string | null
    complemento?: StringNullableWithAggregatesFilter<"Paciente"> | string | null
    bairro?: StringNullableWithAggregatesFilter<"Paciente"> | string | null
    cidade?: StringNullableWithAggregatesFilter<"Paciente"> | string | null
    uf?: StringNullableWithAggregatesFilter<"Paciente"> | string | null
    senha?: StringNullableWithAggregatesFilter<"Paciente"> | string | null
    ativo?: BoolWithAggregatesFilter<"Paciente"> | boolean
    id_clinica?: IntWithAggregatesFilter<"Paciente"> | number
  }

  export type ProfissionalDaSaudeWhereInput = {
    AND?: ProfissionalDaSaudeWhereInput | ProfissionalDaSaudeWhereInput[]
    OR?: ProfissionalDaSaudeWhereInput[]
    NOT?: ProfissionalDaSaudeWhereInput | ProfissionalDaSaudeWhereInput[]
    id_profissional_saude?: IntFilter<"ProfissionalDaSaude"> | number
    nome_profissional?: StringFilter<"ProfissionalDaSaude"> | string
    imagem_profissional?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    data_nascimento?: DateTimeFilter<"ProfissionalDaSaude"> | Date | string
    cpf?: StringFilter<"ProfissionalDaSaude"> | string
    conselho?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    numero_conselho?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    uf_conselho?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    rqe?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    telefone?: StringFilter<"ProfissionalDaSaude"> | string
    email?: StringFilter<"ProfissionalDaSaude"> | string
    telemedicina?: BoolFilter<"ProfissionalDaSaude"> | boolean
    especialidade?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    ativo?: BoolFilter<"ProfissionalDaSaude"> | boolean
    id_clinica?: IntFilter<"ProfissionalDaSaude"> | number
    usuario_id?: IntNullableFilter<"ProfissionalDaSaude"> | number | null
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    consultas?: ConsultaListRelationFilter
    agenda?: AgendaListRelationFilter
  }

  export type ProfissionalDaSaudeOrderByWithRelationInput = {
    id_profissional_saude?: SortOrder
    nome_profissional?: SortOrder
    imagem_profissional?: SortOrderInput | SortOrder
    data_nascimento?: SortOrder
    cpf?: SortOrder
    conselho?: SortOrderInput | SortOrder
    numero_conselho?: SortOrderInput | SortOrder
    uf_conselho?: SortOrderInput | SortOrder
    rqe?: SortOrderInput | SortOrder
    telefone?: SortOrder
    email?: SortOrder
    telemedicina?: SortOrder
    especialidade?: SortOrderInput | SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
    usuario_id?: SortOrderInput | SortOrder
    clinica?: ClinicaOrderByWithRelationInput
    usuario?: UsuarioOrderByWithRelationInput
    consultas?: ConsultaOrderByRelationAggregateInput
    agenda?: AgendaOrderByRelationAggregateInput
  }

  export type ProfissionalDaSaudeWhereUniqueInput = Prisma.AtLeast<{
    id_profissional_saude?: number
    cpf?: string
    usuario_id?: number
    AND?: ProfissionalDaSaudeWhereInput | ProfissionalDaSaudeWhereInput[]
    OR?: ProfissionalDaSaudeWhereInput[]
    NOT?: ProfissionalDaSaudeWhereInput | ProfissionalDaSaudeWhereInput[]
    nome_profissional?: StringFilter<"ProfissionalDaSaude"> | string
    imagem_profissional?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    data_nascimento?: DateTimeFilter<"ProfissionalDaSaude"> | Date | string
    conselho?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    numero_conselho?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    uf_conselho?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    rqe?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    telefone?: StringFilter<"ProfissionalDaSaude"> | string
    email?: StringFilter<"ProfissionalDaSaude"> | string
    telemedicina?: BoolFilter<"ProfissionalDaSaude"> | boolean
    especialidade?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    ativo?: BoolFilter<"ProfissionalDaSaude"> | boolean
    id_clinica?: IntFilter<"ProfissionalDaSaude"> | number
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    consultas?: ConsultaListRelationFilter
    agenda?: AgendaListRelationFilter
  }, "id_profissional_saude" | "cpf" | "usuario_id">

  export type ProfissionalDaSaudeOrderByWithAggregationInput = {
    id_profissional_saude?: SortOrder
    nome_profissional?: SortOrder
    imagem_profissional?: SortOrderInput | SortOrder
    data_nascimento?: SortOrder
    cpf?: SortOrder
    conselho?: SortOrderInput | SortOrder
    numero_conselho?: SortOrderInput | SortOrder
    uf_conselho?: SortOrderInput | SortOrder
    rqe?: SortOrderInput | SortOrder
    telefone?: SortOrder
    email?: SortOrder
    telemedicina?: SortOrder
    especialidade?: SortOrderInput | SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
    usuario_id?: SortOrderInput | SortOrder
    _count?: ProfissionalDaSaudeCountOrderByAggregateInput
    _avg?: ProfissionalDaSaudeAvgOrderByAggregateInput
    _max?: ProfissionalDaSaudeMaxOrderByAggregateInput
    _min?: ProfissionalDaSaudeMinOrderByAggregateInput
    _sum?: ProfissionalDaSaudeSumOrderByAggregateInput
  }

  export type ProfissionalDaSaudeScalarWhereWithAggregatesInput = {
    AND?: ProfissionalDaSaudeScalarWhereWithAggregatesInput | ProfissionalDaSaudeScalarWhereWithAggregatesInput[]
    OR?: ProfissionalDaSaudeScalarWhereWithAggregatesInput[]
    NOT?: ProfissionalDaSaudeScalarWhereWithAggregatesInput | ProfissionalDaSaudeScalarWhereWithAggregatesInput[]
    id_profissional_saude?: IntWithAggregatesFilter<"ProfissionalDaSaude"> | number
    nome_profissional?: StringWithAggregatesFilter<"ProfissionalDaSaude"> | string
    imagem_profissional?: StringNullableWithAggregatesFilter<"ProfissionalDaSaude"> | string | null
    data_nascimento?: DateTimeWithAggregatesFilter<"ProfissionalDaSaude"> | Date | string
    cpf?: StringWithAggregatesFilter<"ProfissionalDaSaude"> | string
    conselho?: StringNullableWithAggregatesFilter<"ProfissionalDaSaude"> | string | null
    numero_conselho?: StringNullableWithAggregatesFilter<"ProfissionalDaSaude"> | string | null
    uf_conselho?: StringNullableWithAggregatesFilter<"ProfissionalDaSaude"> | string | null
    rqe?: StringNullableWithAggregatesFilter<"ProfissionalDaSaude"> | string | null
    telefone?: StringWithAggregatesFilter<"ProfissionalDaSaude"> | string
    email?: StringWithAggregatesFilter<"ProfissionalDaSaude"> | string
    telemedicina?: BoolWithAggregatesFilter<"ProfissionalDaSaude"> | boolean
    especialidade?: StringNullableWithAggregatesFilter<"ProfissionalDaSaude"> | string | null
    ativo?: BoolWithAggregatesFilter<"ProfissionalDaSaude"> | boolean
    id_clinica?: IntWithAggregatesFilter<"ProfissionalDaSaude"> | number
    usuario_id?: IntNullableWithAggregatesFilter<"ProfissionalDaSaude"> | number | null
  }

  export type ConsultaWhereInput = {
    AND?: ConsultaWhereInput | ConsultaWhereInput[]
    OR?: ConsultaWhereInput[]
    NOT?: ConsultaWhereInput | ConsultaWhereInput[]
    id_consulta?: IntFilter<"Consulta"> | number
    data_hora_inicio?: DateTimeFilter<"Consulta"> | Date | string
    data_hora_fim?: DateTimeNullableFilter<"Consulta"> | Date | string | null
    valor?: FloatNullableFilter<"Consulta"> | number | null
    telemedicina?: BoolFilter<"Consulta"> | boolean
    status?: StringFilter<"Consulta"> | string
    observacoes?: StringNullableFilter<"Consulta"> | string | null
    paciente_id?: IntFilter<"Consulta"> | number
    profissional_id?: IntFilter<"Consulta"> | number
    id_clinica?: IntFilter<"Consulta"> | number
    id_convenio?: IntNullableFilter<"Consulta"> | number | null
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    paciente?: XOR<PacienteScalarRelationFilter, PacienteWhereInput>
    profissional?: XOR<ProfissionalDaSaudeScalarRelationFilter, ProfissionalDaSaudeWhereInput>
    procedimentos?: ConsultaProcedimentoListRelationFilter
    avaliacoes?: AvaliacaoListRelationFilter
    convenio?: XOR<ConvenioNullableScalarRelationFilter, ConvenioWhereInput> | null
  }

  export type ConsultaOrderByWithRelationInput = {
    id_consulta?: SortOrder
    data_hora_inicio?: SortOrder
    data_hora_fim?: SortOrderInput | SortOrder
    valor?: SortOrderInput | SortOrder
    telemedicina?: SortOrder
    status?: SortOrder
    observacoes?: SortOrderInput | SortOrder
    paciente_id?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
    id_convenio?: SortOrderInput | SortOrder
    clinica?: ClinicaOrderByWithRelationInput
    paciente?: PacienteOrderByWithRelationInput
    profissional?: ProfissionalDaSaudeOrderByWithRelationInput
    procedimentos?: ConsultaProcedimentoOrderByRelationAggregateInput
    avaliacoes?: AvaliacaoOrderByRelationAggregateInput
    convenio?: ConvenioOrderByWithRelationInput
  }

  export type ConsultaWhereUniqueInput = Prisma.AtLeast<{
    id_consulta?: number
    AND?: ConsultaWhereInput | ConsultaWhereInput[]
    OR?: ConsultaWhereInput[]
    NOT?: ConsultaWhereInput | ConsultaWhereInput[]
    data_hora_inicio?: DateTimeFilter<"Consulta"> | Date | string
    data_hora_fim?: DateTimeNullableFilter<"Consulta"> | Date | string | null
    valor?: FloatNullableFilter<"Consulta"> | number | null
    telemedicina?: BoolFilter<"Consulta"> | boolean
    status?: StringFilter<"Consulta"> | string
    observacoes?: StringNullableFilter<"Consulta"> | string | null
    paciente_id?: IntFilter<"Consulta"> | number
    profissional_id?: IntFilter<"Consulta"> | number
    id_clinica?: IntFilter<"Consulta"> | number
    id_convenio?: IntNullableFilter<"Consulta"> | number | null
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    paciente?: XOR<PacienteScalarRelationFilter, PacienteWhereInput>
    profissional?: XOR<ProfissionalDaSaudeScalarRelationFilter, ProfissionalDaSaudeWhereInput>
    procedimentos?: ConsultaProcedimentoListRelationFilter
    avaliacoes?: AvaliacaoListRelationFilter
    convenio?: XOR<ConvenioNullableScalarRelationFilter, ConvenioWhereInput> | null
  }, "id_consulta">

  export type ConsultaOrderByWithAggregationInput = {
    id_consulta?: SortOrder
    data_hora_inicio?: SortOrder
    data_hora_fim?: SortOrderInput | SortOrder
    valor?: SortOrderInput | SortOrder
    telemedicina?: SortOrder
    status?: SortOrder
    observacoes?: SortOrderInput | SortOrder
    paciente_id?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
    id_convenio?: SortOrderInput | SortOrder
    _count?: ConsultaCountOrderByAggregateInput
    _avg?: ConsultaAvgOrderByAggregateInput
    _max?: ConsultaMaxOrderByAggregateInput
    _min?: ConsultaMinOrderByAggregateInput
    _sum?: ConsultaSumOrderByAggregateInput
  }

  export type ConsultaScalarWhereWithAggregatesInput = {
    AND?: ConsultaScalarWhereWithAggregatesInput | ConsultaScalarWhereWithAggregatesInput[]
    OR?: ConsultaScalarWhereWithAggregatesInput[]
    NOT?: ConsultaScalarWhereWithAggregatesInput | ConsultaScalarWhereWithAggregatesInput[]
    id_consulta?: IntWithAggregatesFilter<"Consulta"> | number
    data_hora_inicio?: DateTimeWithAggregatesFilter<"Consulta"> | Date | string
    data_hora_fim?: DateTimeNullableWithAggregatesFilter<"Consulta"> | Date | string | null
    valor?: FloatNullableWithAggregatesFilter<"Consulta"> | number | null
    telemedicina?: BoolWithAggregatesFilter<"Consulta"> | boolean
    status?: StringWithAggregatesFilter<"Consulta"> | string
    observacoes?: StringNullableWithAggregatesFilter<"Consulta"> | string | null
    paciente_id?: IntWithAggregatesFilter<"Consulta"> | number
    profissional_id?: IntWithAggregatesFilter<"Consulta"> | number
    id_clinica?: IntWithAggregatesFilter<"Consulta"> | number
    id_convenio?: IntNullableWithAggregatesFilter<"Consulta"> | number | null
  }

  export type AvaliacaoWhereInput = {
    AND?: AvaliacaoWhereInput | AvaliacaoWhereInput[]
    OR?: AvaliacaoWhereInput[]
    NOT?: AvaliacaoWhereInput | AvaliacaoWhereInput[]
    id_avaliacao?: IntFilter<"Avaliacao"> | number
    consulta_id?: IntFilter<"Avaliacao"> | number
    data_avaliacao?: DateTimeFilter<"Avaliacao"> | Date | string
    descricao?: StringNullableFilter<"Avaliacao"> | string | null
    parecer_profissional?: StringNullableFilter<"Avaliacao"> | string | null
    id_clinica?: IntFilter<"Avaliacao"> | number
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    consulta?: XOR<ConsultaScalarRelationFilter, ConsultaWhereInput>
  }

  export type AvaliacaoOrderByWithRelationInput = {
    id_avaliacao?: SortOrder
    consulta_id?: SortOrder
    data_avaliacao?: SortOrder
    descricao?: SortOrderInput | SortOrder
    parecer_profissional?: SortOrderInput | SortOrder
    id_clinica?: SortOrder
    clinica?: ClinicaOrderByWithRelationInput
    consulta?: ConsultaOrderByWithRelationInput
  }

  export type AvaliacaoWhereUniqueInput = Prisma.AtLeast<{
    id_avaliacao?: number
    AND?: AvaliacaoWhereInput | AvaliacaoWhereInput[]
    OR?: AvaliacaoWhereInput[]
    NOT?: AvaliacaoWhereInput | AvaliacaoWhereInput[]
    consulta_id?: IntFilter<"Avaliacao"> | number
    data_avaliacao?: DateTimeFilter<"Avaliacao"> | Date | string
    descricao?: StringNullableFilter<"Avaliacao"> | string | null
    parecer_profissional?: StringNullableFilter<"Avaliacao"> | string | null
    id_clinica?: IntFilter<"Avaliacao"> | number
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    consulta?: XOR<ConsultaScalarRelationFilter, ConsultaWhereInput>
  }, "id_avaliacao">

  export type AvaliacaoOrderByWithAggregationInput = {
    id_avaliacao?: SortOrder
    consulta_id?: SortOrder
    data_avaliacao?: SortOrder
    descricao?: SortOrderInput | SortOrder
    parecer_profissional?: SortOrderInput | SortOrder
    id_clinica?: SortOrder
    _count?: AvaliacaoCountOrderByAggregateInput
    _avg?: AvaliacaoAvgOrderByAggregateInput
    _max?: AvaliacaoMaxOrderByAggregateInput
    _min?: AvaliacaoMinOrderByAggregateInput
    _sum?: AvaliacaoSumOrderByAggregateInput
  }

  export type AvaliacaoScalarWhereWithAggregatesInput = {
    AND?: AvaliacaoScalarWhereWithAggregatesInput | AvaliacaoScalarWhereWithAggregatesInput[]
    OR?: AvaliacaoScalarWhereWithAggregatesInput[]
    NOT?: AvaliacaoScalarWhereWithAggregatesInput | AvaliacaoScalarWhereWithAggregatesInput[]
    id_avaliacao?: IntWithAggregatesFilter<"Avaliacao"> | number
    consulta_id?: IntWithAggregatesFilter<"Avaliacao"> | number
    data_avaliacao?: DateTimeWithAggregatesFilter<"Avaliacao"> | Date | string
    descricao?: StringNullableWithAggregatesFilter<"Avaliacao"> | string | null
    parecer_profissional?: StringNullableWithAggregatesFilter<"Avaliacao"> | string | null
    id_clinica?: IntWithAggregatesFilter<"Avaliacao"> | number
  }

  export type ProcedimentoWhereInput = {
    AND?: ProcedimentoWhereInput | ProcedimentoWhereInput[]
    OR?: ProcedimentoWhereInput[]
    NOT?: ProcedimentoWhereInput | ProcedimentoWhereInput[]
    id_procedimento?: IntFilter<"Procedimento"> | number
    nome_procedimento?: StringFilter<"Procedimento"> | string
    tipo?: StringFilter<"Procedimento"> | string
    valor?: FloatFilter<"Procedimento"> | number
    duracao_minutos?: IntFilter<"Procedimento"> | number
    telemedicina?: BoolFilter<"Procedimento"> | boolean
    descricao?: StringNullableFilter<"Procedimento"> | string | null
    ativo?: BoolFilter<"Procedimento"> | boolean
    criado_em?: DateTimeFilter<"Procedimento"> | Date | string
    atualizado_em?: DateTimeNullableFilter<"Procedimento"> | Date | string | null
    id_clinica?: IntFilter<"Procedimento"> | number
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    consultas?: ConsultaProcedimentoListRelationFilter
  }

  export type ProcedimentoOrderByWithRelationInput = {
    id_procedimento?: SortOrder
    nome_procedimento?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    duracao_minutos?: SortOrder
    telemedicina?: SortOrder
    descricao?: SortOrderInput | SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrderInput | SortOrder
    id_clinica?: SortOrder
    clinica?: ClinicaOrderByWithRelationInput
    consultas?: ConsultaProcedimentoOrderByRelationAggregateInput
  }

  export type ProcedimentoWhereUniqueInput = Prisma.AtLeast<{
    id_procedimento?: number
    nome_procedimento?: string
    AND?: ProcedimentoWhereInput | ProcedimentoWhereInput[]
    OR?: ProcedimentoWhereInput[]
    NOT?: ProcedimentoWhereInput | ProcedimentoWhereInput[]
    tipo?: StringFilter<"Procedimento"> | string
    valor?: FloatFilter<"Procedimento"> | number
    duracao_minutos?: IntFilter<"Procedimento"> | number
    telemedicina?: BoolFilter<"Procedimento"> | boolean
    descricao?: StringNullableFilter<"Procedimento"> | string | null
    ativo?: BoolFilter<"Procedimento"> | boolean
    criado_em?: DateTimeFilter<"Procedimento"> | Date | string
    atualizado_em?: DateTimeNullableFilter<"Procedimento"> | Date | string | null
    id_clinica?: IntFilter<"Procedimento"> | number
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    consultas?: ConsultaProcedimentoListRelationFilter
  }, "id_procedimento" | "nome_procedimento">

  export type ProcedimentoOrderByWithAggregationInput = {
    id_procedimento?: SortOrder
    nome_procedimento?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    duracao_minutos?: SortOrder
    telemedicina?: SortOrder
    descricao?: SortOrderInput | SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrderInput | SortOrder
    id_clinica?: SortOrder
    _count?: ProcedimentoCountOrderByAggregateInput
    _avg?: ProcedimentoAvgOrderByAggregateInput
    _max?: ProcedimentoMaxOrderByAggregateInput
    _min?: ProcedimentoMinOrderByAggregateInput
    _sum?: ProcedimentoSumOrderByAggregateInput
  }

  export type ProcedimentoScalarWhereWithAggregatesInput = {
    AND?: ProcedimentoScalarWhereWithAggregatesInput | ProcedimentoScalarWhereWithAggregatesInput[]
    OR?: ProcedimentoScalarWhereWithAggregatesInput[]
    NOT?: ProcedimentoScalarWhereWithAggregatesInput | ProcedimentoScalarWhereWithAggregatesInput[]
    id_procedimento?: IntWithAggregatesFilter<"Procedimento"> | number
    nome_procedimento?: StringWithAggregatesFilter<"Procedimento"> | string
    tipo?: StringWithAggregatesFilter<"Procedimento"> | string
    valor?: FloatWithAggregatesFilter<"Procedimento"> | number
    duracao_minutos?: IntWithAggregatesFilter<"Procedimento"> | number
    telemedicina?: BoolWithAggregatesFilter<"Procedimento"> | boolean
    descricao?: StringNullableWithAggregatesFilter<"Procedimento"> | string | null
    ativo?: BoolWithAggregatesFilter<"Procedimento"> | boolean
    criado_em?: DateTimeWithAggregatesFilter<"Procedimento"> | Date | string
    atualizado_em?: DateTimeNullableWithAggregatesFilter<"Procedimento"> | Date | string | null
    id_clinica?: IntWithAggregatesFilter<"Procedimento"> | number
  }

  export type ConsultaProcedimentoWhereInput = {
    AND?: ConsultaProcedimentoWhereInput | ConsultaProcedimentoWhereInput[]
    OR?: ConsultaProcedimentoWhereInput[]
    NOT?: ConsultaProcedimentoWhereInput | ConsultaProcedimentoWhereInput[]
    consulta_id?: IntFilter<"ConsultaProcedimento"> | number
    procedimento_id?: IntFilter<"ConsultaProcedimento"> | number
    consulta?: XOR<ConsultaScalarRelationFilter, ConsultaWhereInput>
    procedimento?: XOR<ProcedimentoScalarRelationFilter, ProcedimentoWhereInput>
  }

  export type ConsultaProcedimentoOrderByWithRelationInput = {
    consulta_id?: SortOrder
    procedimento_id?: SortOrder
    consulta?: ConsultaOrderByWithRelationInput
    procedimento?: ProcedimentoOrderByWithRelationInput
  }

  export type ConsultaProcedimentoWhereUniqueInput = Prisma.AtLeast<{
    consulta_id_procedimento_id?: ConsultaProcedimentoConsulta_idProcedimento_idCompoundUniqueInput
    AND?: ConsultaProcedimentoWhereInput | ConsultaProcedimentoWhereInput[]
    OR?: ConsultaProcedimentoWhereInput[]
    NOT?: ConsultaProcedimentoWhereInput | ConsultaProcedimentoWhereInput[]
    consulta_id?: IntFilter<"ConsultaProcedimento"> | number
    procedimento_id?: IntFilter<"ConsultaProcedimento"> | number
    consulta?: XOR<ConsultaScalarRelationFilter, ConsultaWhereInput>
    procedimento?: XOR<ProcedimentoScalarRelationFilter, ProcedimentoWhereInput>
  }, "consulta_id_procedimento_id">

  export type ConsultaProcedimentoOrderByWithAggregationInput = {
    consulta_id?: SortOrder
    procedimento_id?: SortOrder
    _count?: ConsultaProcedimentoCountOrderByAggregateInput
    _avg?: ConsultaProcedimentoAvgOrderByAggregateInput
    _max?: ConsultaProcedimentoMaxOrderByAggregateInput
    _min?: ConsultaProcedimentoMinOrderByAggregateInput
    _sum?: ConsultaProcedimentoSumOrderByAggregateInput
  }

  export type ConsultaProcedimentoScalarWhereWithAggregatesInput = {
    AND?: ConsultaProcedimentoScalarWhereWithAggregatesInput | ConsultaProcedimentoScalarWhereWithAggregatesInput[]
    OR?: ConsultaProcedimentoScalarWhereWithAggregatesInput[]
    NOT?: ConsultaProcedimentoScalarWhereWithAggregatesInput | ConsultaProcedimentoScalarWhereWithAggregatesInput[]
    consulta_id?: IntWithAggregatesFilter<"ConsultaProcedimento"> | number
    procedimento_id?: IntWithAggregatesFilter<"ConsultaProcedimento"> | number
  }

  export type AgendaWhereInput = {
    AND?: AgendaWhereInput | AgendaWhereInput[]
    OR?: AgendaWhereInput[]
    NOT?: AgendaWhereInput | AgendaWhereInput[]
    id_agenda?: IntFilter<"Agenda"> | number
    data?: DateTimeFilter<"Agenda"> | Date | string
    hora_inicio?: DateTimeFilter<"Agenda"> | Date | string
    hora_fim?: DateTimeFilter<"Agenda"> | Date | string
    status?: StringFilter<"Agenda"> | string
    tipo_bloqueio?: StringNullableFilter<"Agenda"> | string | null
    criado_em?: DateTimeFilter<"Agenda"> | Date | string
    profissional_id?: IntFilter<"Agenda"> | number
    id_clinica?: IntFilter<"Agenda"> | number
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    profissional?: XOR<ProfissionalDaSaudeScalarRelationFilter, ProfissionalDaSaudeWhereInput>
  }

  export type AgendaOrderByWithRelationInput = {
    id_agenda?: SortOrder
    data?: SortOrder
    hora_inicio?: SortOrder
    hora_fim?: SortOrder
    status?: SortOrder
    tipo_bloqueio?: SortOrderInput | SortOrder
    criado_em?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
    clinica?: ClinicaOrderByWithRelationInput
    profissional?: ProfissionalDaSaudeOrderByWithRelationInput
  }

  export type AgendaWhereUniqueInput = Prisma.AtLeast<{
    id_agenda?: number
    AND?: AgendaWhereInput | AgendaWhereInput[]
    OR?: AgendaWhereInput[]
    NOT?: AgendaWhereInput | AgendaWhereInput[]
    data?: DateTimeFilter<"Agenda"> | Date | string
    hora_inicio?: DateTimeFilter<"Agenda"> | Date | string
    hora_fim?: DateTimeFilter<"Agenda"> | Date | string
    status?: StringFilter<"Agenda"> | string
    tipo_bloqueio?: StringNullableFilter<"Agenda"> | string | null
    criado_em?: DateTimeFilter<"Agenda"> | Date | string
    profissional_id?: IntFilter<"Agenda"> | number
    id_clinica?: IntFilter<"Agenda"> | number
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    profissional?: XOR<ProfissionalDaSaudeScalarRelationFilter, ProfissionalDaSaudeWhereInput>
  }, "id_agenda">

  export type AgendaOrderByWithAggregationInput = {
    id_agenda?: SortOrder
    data?: SortOrder
    hora_inicio?: SortOrder
    hora_fim?: SortOrder
    status?: SortOrder
    tipo_bloqueio?: SortOrderInput | SortOrder
    criado_em?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
    _count?: AgendaCountOrderByAggregateInput
    _avg?: AgendaAvgOrderByAggregateInput
    _max?: AgendaMaxOrderByAggregateInput
    _min?: AgendaMinOrderByAggregateInput
    _sum?: AgendaSumOrderByAggregateInput
  }

  export type AgendaScalarWhereWithAggregatesInput = {
    AND?: AgendaScalarWhereWithAggregatesInput | AgendaScalarWhereWithAggregatesInput[]
    OR?: AgendaScalarWhereWithAggregatesInput[]
    NOT?: AgendaScalarWhereWithAggregatesInput | AgendaScalarWhereWithAggregatesInput[]
    id_agenda?: IntWithAggregatesFilter<"Agenda"> | number
    data?: DateTimeWithAggregatesFilter<"Agenda"> | Date | string
    hora_inicio?: DateTimeWithAggregatesFilter<"Agenda"> | Date | string
    hora_fim?: DateTimeWithAggregatesFilter<"Agenda"> | Date | string
    status?: StringWithAggregatesFilter<"Agenda"> | string
    tipo_bloqueio?: StringNullableWithAggregatesFilter<"Agenda"> | string | null
    criado_em?: DateTimeWithAggregatesFilter<"Agenda"> | Date | string
    profissional_id?: IntWithAggregatesFilter<"Agenda"> | number
    id_clinica?: IntWithAggregatesFilter<"Agenda"> | number
  }

  export type ControleOperacionalWhereInput = {
    AND?: ControleOperacionalWhereInput | ControleOperacionalWhereInput[]
    OR?: ControleOperacionalWhereInput[]
    NOT?: ControleOperacionalWhereInput | ControleOperacionalWhereInput[]
    id_controle?: IntFilter<"ControleOperacional"> | number
    id_clinica?: IntFilter<"ControleOperacional"> | number
    data_referencia?: DateTimeFilter<"ControleOperacional"> | Date | string
    pacientes_agendados?: IntFilter<"ControleOperacional"> | number
    pacientes_nao_agendados?: IntFilter<"ControleOperacional"> | number
    pacientes_faltantes?: IntFilter<"ControleOperacional"> | number
    nps?: IntNullableFilter<"ControleOperacional"> | number | null
    total_consultas?: IntFilter<"ControleOperacional"> | number
    total_procedimentos?: IntFilter<"ControleOperacional"> | number
    valor_arrecadado?: FloatFilter<"ControleOperacional"> | number
    horas_robo_trabalhadas?: FloatFilter<"ControleOperacional"> | number
    economia_estimada?: FloatFilter<"ControleOperacional"> | number
    criado_em?: DateTimeFilter<"ControleOperacional"> | Date | string
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
  }

  export type ControleOperacionalOrderByWithRelationInput = {
    id_controle?: SortOrder
    id_clinica?: SortOrder
    data_referencia?: SortOrder
    pacientes_agendados?: SortOrder
    pacientes_nao_agendados?: SortOrder
    pacientes_faltantes?: SortOrder
    nps?: SortOrderInput | SortOrder
    total_consultas?: SortOrder
    total_procedimentos?: SortOrder
    valor_arrecadado?: SortOrder
    horas_robo_trabalhadas?: SortOrder
    economia_estimada?: SortOrder
    criado_em?: SortOrder
    clinica?: ClinicaOrderByWithRelationInput
  }

  export type ControleOperacionalWhereUniqueInput = Prisma.AtLeast<{
    id_controle?: number
    AND?: ControleOperacionalWhereInput | ControleOperacionalWhereInput[]
    OR?: ControleOperacionalWhereInput[]
    NOT?: ControleOperacionalWhereInput | ControleOperacionalWhereInput[]
    id_clinica?: IntFilter<"ControleOperacional"> | number
    data_referencia?: DateTimeFilter<"ControleOperacional"> | Date | string
    pacientes_agendados?: IntFilter<"ControleOperacional"> | number
    pacientes_nao_agendados?: IntFilter<"ControleOperacional"> | number
    pacientes_faltantes?: IntFilter<"ControleOperacional"> | number
    nps?: IntNullableFilter<"ControleOperacional"> | number | null
    total_consultas?: IntFilter<"ControleOperacional"> | number
    total_procedimentos?: IntFilter<"ControleOperacional"> | number
    valor_arrecadado?: FloatFilter<"ControleOperacional"> | number
    horas_robo_trabalhadas?: FloatFilter<"ControleOperacional"> | number
    economia_estimada?: FloatFilter<"ControleOperacional"> | number
    criado_em?: DateTimeFilter<"ControleOperacional"> | Date | string
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
  }, "id_controle">

  export type ControleOperacionalOrderByWithAggregationInput = {
    id_controle?: SortOrder
    id_clinica?: SortOrder
    data_referencia?: SortOrder
    pacientes_agendados?: SortOrder
    pacientes_nao_agendados?: SortOrder
    pacientes_faltantes?: SortOrder
    nps?: SortOrderInput | SortOrder
    total_consultas?: SortOrder
    total_procedimentos?: SortOrder
    valor_arrecadado?: SortOrder
    horas_robo_trabalhadas?: SortOrder
    economia_estimada?: SortOrder
    criado_em?: SortOrder
    _count?: ControleOperacionalCountOrderByAggregateInput
    _avg?: ControleOperacionalAvgOrderByAggregateInput
    _max?: ControleOperacionalMaxOrderByAggregateInput
    _min?: ControleOperacionalMinOrderByAggregateInput
    _sum?: ControleOperacionalSumOrderByAggregateInput
  }

  export type ControleOperacionalScalarWhereWithAggregatesInput = {
    AND?: ControleOperacionalScalarWhereWithAggregatesInput | ControleOperacionalScalarWhereWithAggregatesInput[]
    OR?: ControleOperacionalScalarWhereWithAggregatesInput[]
    NOT?: ControleOperacionalScalarWhereWithAggregatesInput | ControleOperacionalScalarWhereWithAggregatesInput[]
    id_controle?: IntWithAggregatesFilter<"ControleOperacional"> | number
    id_clinica?: IntWithAggregatesFilter<"ControleOperacional"> | number
    data_referencia?: DateTimeWithAggregatesFilter<"ControleOperacional"> | Date | string
    pacientes_agendados?: IntWithAggregatesFilter<"ControleOperacional"> | number
    pacientes_nao_agendados?: IntWithAggregatesFilter<"ControleOperacional"> | number
    pacientes_faltantes?: IntWithAggregatesFilter<"ControleOperacional"> | number
    nps?: IntNullableWithAggregatesFilter<"ControleOperacional"> | number | null
    total_consultas?: IntWithAggregatesFilter<"ControleOperacional"> | number
    total_procedimentos?: IntWithAggregatesFilter<"ControleOperacional"> | number
    valor_arrecadado?: FloatWithAggregatesFilter<"ControleOperacional"> | number
    horas_robo_trabalhadas?: FloatWithAggregatesFilter<"ControleOperacional"> | number
    economia_estimada?: FloatWithAggregatesFilter<"ControleOperacional"> | number
    criado_em?: DateTimeWithAggregatesFilter<"ControleOperacional"> | Date | string
  }

  export type InteracaoRoboWhereInput = {
    AND?: InteracaoRoboWhereInput | InteracaoRoboWhereInput[]
    OR?: InteracaoRoboWhereInput[]
    NOT?: InteracaoRoboWhereInput | InteracaoRoboWhereInput[]
    id_interacao?: IntFilter<"InteracaoRobo"> | number
    id_clinica?: IntFilter<"InteracaoRobo"> | number
    id_paciente?: IntFilter<"InteracaoRobo"> | number
    tipo?: StringFilter<"InteracaoRobo"> | string
    data_interacao?: DateTimeFilter<"InteracaoRobo"> | Date | string
    id_convenio?: IntNullableFilter<"InteracaoRobo"> | number | null
    paciente?: XOR<PacienteScalarRelationFilter, PacienteWhereInput>
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    convenio?: XOR<ConvenioNullableScalarRelationFilter, ConvenioWhereInput> | null
  }

  export type InteracaoRoboOrderByWithRelationInput = {
    id_interacao?: SortOrder
    id_clinica?: SortOrder
    id_paciente?: SortOrder
    tipo?: SortOrder
    data_interacao?: SortOrder
    id_convenio?: SortOrderInput | SortOrder
    paciente?: PacienteOrderByWithRelationInput
    clinica?: ClinicaOrderByWithRelationInput
    convenio?: ConvenioOrderByWithRelationInput
  }

  export type InteracaoRoboWhereUniqueInput = Prisma.AtLeast<{
    id_interacao?: number
    AND?: InteracaoRoboWhereInput | InteracaoRoboWhereInput[]
    OR?: InteracaoRoboWhereInput[]
    NOT?: InteracaoRoboWhereInput | InteracaoRoboWhereInput[]
    id_clinica?: IntFilter<"InteracaoRobo"> | number
    id_paciente?: IntFilter<"InteracaoRobo"> | number
    tipo?: StringFilter<"InteracaoRobo"> | string
    data_interacao?: DateTimeFilter<"InteracaoRobo"> | Date | string
    id_convenio?: IntNullableFilter<"InteracaoRobo"> | number | null
    paciente?: XOR<PacienteScalarRelationFilter, PacienteWhereInput>
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    convenio?: XOR<ConvenioNullableScalarRelationFilter, ConvenioWhereInput> | null
  }, "id_interacao">

  export type InteracaoRoboOrderByWithAggregationInput = {
    id_interacao?: SortOrder
    id_clinica?: SortOrder
    id_paciente?: SortOrder
    tipo?: SortOrder
    data_interacao?: SortOrder
    id_convenio?: SortOrderInput | SortOrder
    _count?: InteracaoRoboCountOrderByAggregateInput
    _avg?: InteracaoRoboAvgOrderByAggregateInput
    _max?: InteracaoRoboMaxOrderByAggregateInput
    _min?: InteracaoRoboMinOrderByAggregateInput
    _sum?: InteracaoRoboSumOrderByAggregateInput
  }

  export type InteracaoRoboScalarWhereWithAggregatesInput = {
    AND?: InteracaoRoboScalarWhereWithAggregatesInput | InteracaoRoboScalarWhereWithAggregatesInput[]
    OR?: InteracaoRoboScalarWhereWithAggregatesInput[]
    NOT?: InteracaoRoboScalarWhereWithAggregatesInput | InteracaoRoboScalarWhereWithAggregatesInput[]
    id_interacao?: IntWithAggregatesFilter<"InteracaoRobo"> | number
    id_clinica?: IntWithAggregatesFilter<"InteracaoRobo"> | number
    id_paciente?: IntWithAggregatesFilter<"InteracaoRobo"> | number
    tipo?: StringWithAggregatesFilter<"InteracaoRobo"> | string
    data_interacao?: DateTimeWithAggregatesFilter<"InteracaoRobo"> | Date | string
    id_convenio?: IntNullableWithAggregatesFilter<"InteracaoRobo"> | number | null
  }

  export type ConvenioWhereInput = {
    AND?: ConvenioWhereInput | ConvenioWhereInput[]
    OR?: ConvenioWhereInput[]
    NOT?: ConvenioWhereInput | ConvenioWhereInput[]
    id_convenio?: IntFilter<"Convenio"> | number
    nome?: StringFilter<"Convenio"> | string
    ativo?: BoolFilter<"Convenio"> | boolean
    id_clinica?: IntFilter<"Convenio"> | number
    criado_em?: DateTimeFilter<"Convenio"> | Date | string
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    consultas?: ConsultaListRelationFilter
    interacoes_robo?: InteracaoRoboListRelationFilter
  }

  export type ConvenioOrderByWithRelationInput = {
    id_convenio?: SortOrder
    nome?: SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
    criado_em?: SortOrder
    clinica?: ClinicaOrderByWithRelationInput
    consultas?: ConsultaOrderByRelationAggregateInput
    interacoes_robo?: InteracaoRoboOrderByRelationAggregateInput
  }

  export type ConvenioWhereUniqueInput = Prisma.AtLeast<{
    id_convenio?: number
    AND?: ConvenioWhereInput | ConvenioWhereInput[]
    OR?: ConvenioWhereInput[]
    NOT?: ConvenioWhereInput | ConvenioWhereInput[]
    nome?: StringFilter<"Convenio"> | string
    ativo?: BoolFilter<"Convenio"> | boolean
    id_clinica?: IntFilter<"Convenio"> | number
    criado_em?: DateTimeFilter<"Convenio"> | Date | string
    clinica?: XOR<ClinicaScalarRelationFilter, ClinicaWhereInput>
    consultas?: ConsultaListRelationFilter
    interacoes_robo?: InteracaoRoboListRelationFilter
  }, "id_convenio">

  export type ConvenioOrderByWithAggregationInput = {
    id_convenio?: SortOrder
    nome?: SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
    criado_em?: SortOrder
    _count?: ConvenioCountOrderByAggregateInput
    _avg?: ConvenioAvgOrderByAggregateInput
    _max?: ConvenioMaxOrderByAggregateInput
    _min?: ConvenioMinOrderByAggregateInput
    _sum?: ConvenioSumOrderByAggregateInput
  }

  export type ConvenioScalarWhereWithAggregatesInput = {
    AND?: ConvenioScalarWhereWithAggregatesInput | ConvenioScalarWhereWithAggregatesInput[]
    OR?: ConvenioScalarWhereWithAggregatesInput[]
    NOT?: ConvenioScalarWhereWithAggregatesInput | ConvenioScalarWhereWithAggregatesInput[]
    id_convenio?: IntWithAggregatesFilter<"Convenio"> | number
    nome?: StringWithAggregatesFilter<"Convenio"> | string
    ativo?: BoolWithAggregatesFilter<"Convenio"> | boolean
    id_clinica?: IntWithAggregatesFilter<"Convenio"> | number
    criado_em?: DateTimeWithAggregatesFilter<"Convenio"> | Date | string
  }

  export type ClinicaCreateInput = {
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoCreateNestedManyWithoutClinicaInput
    agendas?: AgendaCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaUncheckedCreateInput = {
    id_clinica?: number
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeUncheckedCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteUncheckedCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaUncheckedCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoUncheckedCreateNestedManyWithoutClinicaInput
    agendas?: AgendaUncheckedCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalUncheckedCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioUncheckedCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaUpdateInput = {
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUpdateManyWithoutClinicaNestedInput
  }

  export type ClinicaUncheckedUpdateInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUncheckedUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUncheckedUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUncheckedUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUncheckedUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUncheckedUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUncheckedUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUncheckedUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUncheckedUpdateManyWithoutClinicaNestedInput
  }

  export type ClinicaCreateManyInput = {
    id_clinica?: number
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
  }

  export type ClinicaUpdateManyMutationInput = {
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClinicaUncheckedUpdateManyInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioCreateInput = {
    nome: string
    email: string
    senha: string
    tipo: string
    ativo?: boolean
    criado_em?: Date | string
    clinica: ClinicaCreateNestedOneWithoutUsuariosInput
    profissional?: ProfissionalDaSaudeCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id_usuario?: number
    nome: string
    email: string
    senha: string
    tipo: string
    ativo?: boolean
    criado_em?: Date | string
    id_clinica: number
    profissional?: ProfissionalDaSaudeUncheckedCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    clinica?: ClinicaUpdateOneRequiredWithoutUsuariosNestedInput
    profissional?: ProfissionalDaSaudeUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    id_clinica?: IntFieldUpdateOperationsInput | number
    profissional?: ProfissionalDaSaudeUncheckedUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id_usuario?: number
    nome: string
    email: string
    senha: string
    tipo: string
    ativo?: boolean
    criado_em?: Date | string
    id_clinica: number
  }

  export type UsuarioUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type PacienteCreateInput = {
    cpf: string
    nome: string
    data_nascimento: Date | string
    email: string
    telefone: string
    codigo_ibge?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    senha?: string | null
    ativo?: boolean
    clinica: ClinicaCreateNestedOneWithoutPacientesInput
    consultas?: ConsultaCreateNestedManyWithoutPacienteInput
    interacao_robo?: InteracaoRoboCreateNestedManyWithoutPacienteInput
  }

  export type PacienteUncheckedCreateInput = {
    id_paciente?: number
    cpf: string
    nome: string
    data_nascimento: Date | string
    email: string
    telefone: string
    codigo_ibge?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    senha?: string | null
    ativo?: boolean
    id_clinica: number
    consultas?: ConsultaUncheckedCreateNestedManyWithoutPacienteInput
    interacao_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutPacienteInput
  }

  export type PacienteUpdateInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    clinica?: ClinicaUpdateOneRequiredWithoutPacientesNestedInput
    consultas?: ConsultaUpdateManyWithoutPacienteNestedInput
    interacao_robo?: InteracaoRoboUpdateManyWithoutPacienteNestedInput
  }

  export type PacienteUncheckedUpdateInput = {
    id_paciente?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    id_clinica?: IntFieldUpdateOperationsInput | number
    consultas?: ConsultaUncheckedUpdateManyWithoutPacienteNestedInput
    interacao_robo?: InteracaoRoboUncheckedUpdateManyWithoutPacienteNestedInput
  }

  export type PacienteCreateManyInput = {
    id_paciente?: number
    cpf: string
    nome: string
    data_nascimento: Date | string
    email: string
    telefone: string
    codigo_ibge?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    senha?: string | null
    ativo?: boolean
    id_clinica: number
  }

  export type PacienteUpdateManyMutationInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PacienteUncheckedUpdateManyInput = {
    id_paciente?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type ProfissionalDaSaudeCreateInput = {
    nome_profissional: string
    imagem_profissional?: string | null
    data_nascimento: Date | string
    cpf: string
    conselho?: string | null
    numero_conselho?: string | null
    uf_conselho?: string | null
    rqe?: string | null
    telefone: string
    email: string
    telemedicina?: boolean
    especialidade?: string | null
    ativo?: boolean
    clinica: ClinicaCreateNestedOneWithoutProfissionaisInput
    usuario?: UsuarioCreateNestedOneWithoutProfissionalInput
    consultas?: ConsultaCreateNestedManyWithoutProfissionalInput
    agenda?: AgendaCreateNestedManyWithoutProfissionalInput
  }

  export type ProfissionalDaSaudeUncheckedCreateInput = {
    id_profissional_saude?: number
    nome_profissional: string
    imagem_profissional?: string | null
    data_nascimento: Date | string
    cpf: string
    conselho?: string | null
    numero_conselho?: string | null
    uf_conselho?: string | null
    rqe?: string | null
    telefone: string
    email: string
    telemedicina?: boolean
    especialidade?: string | null
    ativo?: boolean
    id_clinica: number
    usuario_id?: number | null
    consultas?: ConsultaUncheckedCreateNestedManyWithoutProfissionalInput
    agenda?: AgendaUncheckedCreateNestedManyWithoutProfissionalInput
  }

  export type ProfissionalDaSaudeUpdateInput = {
    nome_profissional?: StringFieldUpdateOperationsInput | string
    imagem_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    conselho?: NullableStringFieldUpdateOperationsInput | string | null
    numero_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    uf_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    rqe?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    clinica?: ClinicaUpdateOneRequiredWithoutProfissionaisNestedInput
    usuario?: UsuarioUpdateOneWithoutProfissionalNestedInput
    consultas?: ConsultaUpdateManyWithoutProfissionalNestedInput
    agenda?: AgendaUpdateManyWithoutProfissionalNestedInput
  }

  export type ProfissionalDaSaudeUncheckedUpdateInput = {
    id_profissional_saude?: IntFieldUpdateOperationsInput | number
    nome_profissional?: StringFieldUpdateOperationsInput | string
    imagem_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    conselho?: NullableStringFieldUpdateOperationsInput | string | null
    numero_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    uf_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    rqe?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    id_clinica?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    consultas?: ConsultaUncheckedUpdateManyWithoutProfissionalNestedInput
    agenda?: AgendaUncheckedUpdateManyWithoutProfissionalNestedInput
  }

  export type ProfissionalDaSaudeCreateManyInput = {
    id_profissional_saude?: number
    nome_profissional: string
    imagem_profissional?: string | null
    data_nascimento: Date | string
    cpf: string
    conselho?: string | null
    numero_conselho?: string | null
    uf_conselho?: string | null
    rqe?: string | null
    telefone: string
    email: string
    telemedicina?: boolean
    especialidade?: string | null
    ativo?: boolean
    id_clinica: number
    usuario_id?: number | null
  }

  export type ProfissionalDaSaudeUpdateManyMutationInput = {
    nome_profissional?: StringFieldUpdateOperationsInput | string
    imagem_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    conselho?: NullableStringFieldUpdateOperationsInput | string | null
    numero_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    uf_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    rqe?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProfissionalDaSaudeUncheckedUpdateManyInput = {
    id_profissional_saude?: IntFieldUpdateOperationsInput | number
    nome_profissional?: StringFieldUpdateOperationsInput | string
    imagem_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    conselho?: NullableStringFieldUpdateOperationsInput | string | null
    numero_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    uf_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    rqe?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    id_clinica?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ConsultaCreateInput = {
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    clinica: ClinicaCreateNestedOneWithoutConsultasInput
    paciente: PacienteCreateNestedOneWithoutConsultasInput
    profissional: ProfissionalDaSaudeCreateNestedOneWithoutConsultasInput
    procedimentos?: ConsultaProcedimentoCreateNestedManyWithoutConsultaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutConsultaInput
    convenio?: ConvenioCreateNestedOneWithoutConsultasInput
  }

  export type ConsultaUncheckedCreateInput = {
    id_consulta?: number
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    paciente_id: number
    profissional_id: number
    id_clinica: number
    id_convenio?: number | null
    procedimentos?: ConsultaProcedimentoUncheckedCreateNestedManyWithoutConsultaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutConsultaInput
  }

  export type ConsultaUpdateInput = {
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    clinica?: ClinicaUpdateOneRequiredWithoutConsultasNestedInput
    paciente?: PacienteUpdateOneRequiredWithoutConsultasNestedInput
    profissional?: ProfissionalDaSaudeUpdateOneRequiredWithoutConsultasNestedInput
    procedimentos?: ConsultaProcedimentoUpdateManyWithoutConsultaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutConsultaNestedInput
    convenio?: ConvenioUpdateOneWithoutConsultasNestedInput
  }

  export type ConsultaUncheckedUpdateInput = {
    id_consulta?: IntFieldUpdateOperationsInput | number
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    paciente_id?: IntFieldUpdateOperationsInput | number
    profissional_id?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
    procedimentos?: ConsultaProcedimentoUncheckedUpdateManyWithoutConsultaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutConsultaNestedInput
  }

  export type ConsultaCreateManyInput = {
    id_consulta?: number
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    paciente_id: number
    profissional_id: number
    id_clinica: number
    id_convenio?: number | null
  }

  export type ConsultaUpdateManyMutationInput = {
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConsultaUncheckedUpdateManyInput = {
    id_consulta?: IntFieldUpdateOperationsInput | number
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    paciente_id?: IntFieldUpdateOperationsInput | number
    profissional_id?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AvaliacaoCreateInput = {
    data_avaliacao: Date | string
    descricao?: string | null
    parecer_profissional?: string | null
    clinica: ClinicaCreateNestedOneWithoutAvaliacoesInput
    consulta: ConsultaCreateNestedOneWithoutAvaliacoesInput
  }

  export type AvaliacaoUncheckedCreateInput = {
    id_avaliacao?: number
    consulta_id: number
    data_avaliacao: Date | string
    descricao?: string | null
    parecer_profissional?: string | null
    id_clinica: number
  }

  export type AvaliacaoUpdateInput = {
    data_avaliacao?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    parecer_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    clinica?: ClinicaUpdateOneRequiredWithoutAvaliacoesNestedInput
    consulta?: ConsultaUpdateOneRequiredWithoutAvaliacoesNestedInput
  }

  export type AvaliacaoUncheckedUpdateInput = {
    id_avaliacao?: IntFieldUpdateOperationsInput | number
    consulta_id?: IntFieldUpdateOperationsInput | number
    data_avaliacao?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    parecer_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type AvaliacaoCreateManyInput = {
    id_avaliacao?: number
    consulta_id: number
    data_avaliacao: Date | string
    descricao?: string | null
    parecer_profissional?: string | null
    id_clinica: number
  }

  export type AvaliacaoUpdateManyMutationInput = {
    data_avaliacao?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    parecer_profissional?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AvaliacaoUncheckedUpdateManyInput = {
    id_avaliacao?: IntFieldUpdateOperationsInput | number
    consulta_id?: IntFieldUpdateOperationsInput | number
    data_avaliacao?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    parecer_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type ProcedimentoCreateInput = {
    nome_procedimento: string
    tipo: string
    valor: number
    duracao_minutos: number
    telemedicina?: boolean
    descricao?: string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string | null
    clinica: ClinicaCreateNestedOneWithoutProcedimentosInput
    consultas?: ConsultaProcedimentoCreateNestedManyWithoutProcedimentoInput
  }

  export type ProcedimentoUncheckedCreateInput = {
    id_procedimento?: number
    nome_procedimento: string
    tipo: string
    valor: number
    duracao_minutos: number
    telemedicina?: boolean
    descricao?: string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string | null
    id_clinica: number
    consultas?: ConsultaProcedimentoUncheckedCreateNestedManyWithoutProcedimentoInput
  }

  export type ProcedimentoUpdateInput = {
    nome_procedimento?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    duracao_minutos?: IntFieldUpdateOperationsInput | number
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clinica?: ClinicaUpdateOneRequiredWithoutProcedimentosNestedInput
    consultas?: ConsultaProcedimentoUpdateManyWithoutProcedimentoNestedInput
  }

  export type ProcedimentoUncheckedUpdateInput = {
    id_procedimento?: IntFieldUpdateOperationsInput | number
    nome_procedimento?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    duracao_minutos?: IntFieldUpdateOperationsInput | number
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_clinica?: IntFieldUpdateOperationsInput | number
    consultas?: ConsultaProcedimentoUncheckedUpdateManyWithoutProcedimentoNestedInput
  }

  export type ProcedimentoCreateManyInput = {
    id_procedimento?: number
    nome_procedimento: string
    tipo: string
    valor: number
    duracao_minutos: number
    telemedicina?: boolean
    descricao?: string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string | null
    id_clinica: number
  }

  export type ProcedimentoUpdateManyMutationInput = {
    nome_procedimento?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    duracao_minutos?: IntFieldUpdateOperationsInput | number
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProcedimentoUncheckedUpdateManyInput = {
    id_procedimento?: IntFieldUpdateOperationsInput | number
    nome_procedimento?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    duracao_minutos?: IntFieldUpdateOperationsInput | number
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type ConsultaProcedimentoCreateInput = {
    consulta: ConsultaCreateNestedOneWithoutProcedimentosInput
    procedimento: ProcedimentoCreateNestedOneWithoutConsultasInput
  }

  export type ConsultaProcedimentoUncheckedCreateInput = {
    consulta_id: number
    procedimento_id: number
  }

  export type ConsultaProcedimentoUpdateInput = {
    consulta?: ConsultaUpdateOneRequiredWithoutProcedimentosNestedInput
    procedimento?: ProcedimentoUpdateOneRequiredWithoutConsultasNestedInput
  }

  export type ConsultaProcedimentoUncheckedUpdateInput = {
    consulta_id?: IntFieldUpdateOperationsInput | number
    procedimento_id?: IntFieldUpdateOperationsInput | number
  }

  export type ConsultaProcedimentoCreateManyInput = {
    consulta_id: number
    procedimento_id: number
  }

  export type ConsultaProcedimentoUpdateManyMutationInput = {

  }

  export type ConsultaProcedimentoUncheckedUpdateManyInput = {
    consulta_id?: IntFieldUpdateOperationsInput | number
    procedimento_id?: IntFieldUpdateOperationsInput | number
  }

  export type AgendaCreateInput = {
    data: Date | string
    hora_inicio: Date | string
    hora_fim: Date | string
    status: string
    tipo_bloqueio?: string | null
    criado_em?: Date | string
    clinica: ClinicaCreateNestedOneWithoutAgendasInput
    profissional: ProfissionalDaSaudeCreateNestedOneWithoutAgendaInput
  }

  export type AgendaUncheckedCreateInput = {
    id_agenda?: number
    data: Date | string
    hora_inicio: Date | string
    hora_fim: Date | string
    status: string
    tipo_bloqueio?: string | null
    criado_em?: Date | string
    profissional_id: number
    id_clinica: number
  }

  export type AgendaUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    tipo_bloqueio?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    clinica?: ClinicaUpdateOneRequiredWithoutAgendasNestedInput
    profissional?: ProfissionalDaSaudeUpdateOneRequiredWithoutAgendaNestedInput
  }

  export type AgendaUncheckedUpdateInput = {
    id_agenda?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    tipo_bloqueio?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    profissional_id?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type AgendaCreateManyInput = {
    id_agenda?: number
    data: Date | string
    hora_inicio: Date | string
    hora_fim: Date | string
    status: string
    tipo_bloqueio?: string | null
    criado_em?: Date | string
    profissional_id: number
    id_clinica: number
  }

  export type AgendaUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    tipo_bloqueio?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgendaUncheckedUpdateManyInput = {
    id_agenda?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    tipo_bloqueio?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    profissional_id?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type ControleOperacionalCreateInput = {
    data_referencia?: Date | string
    pacientes_agendados?: number
    pacientes_nao_agendados?: number
    pacientes_faltantes?: number
    nps?: number | null
    total_consultas?: number
    total_procedimentos?: number
    valor_arrecadado?: number
    horas_robo_trabalhadas?: number
    economia_estimada?: number
    criado_em?: Date | string
    clinica: ClinicaCreateNestedOneWithoutControle_operacionalInput
  }

  export type ControleOperacionalUncheckedCreateInput = {
    id_controle?: number
    id_clinica: number
    data_referencia?: Date | string
    pacientes_agendados?: number
    pacientes_nao_agendados?: number
    pacientes_faltantes?: number
    nps?: number | null
    total_consultas?: number
    total_procedimentos?: number
    valor_arrecadado?: number
    horas_robo_trabalhadas?: number
    economia_estimada?: number
    criado_em?: Date | string
  }

  export type ControleOperacionalUpdateInput = {
    data_referencia?: DateTimeFieldUpdateOperationsInput | Date | string
    pacientes_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_nao_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_faltantes?: IntFieldUpdateOperationsInput | number
    nps?: NullableIntFieldUpdateOperationsInput | number | null
    total_consultas?: IntFieldUpdateOperationsInput | number
    total_procedimentos?: IntFieldUpdateOperationsInput | number
    valor_arrecadado?: FloatFieldUpdateOperationsInput | number
    horas_robo_trabalhadas?: FloatFieldUpdateOperationsInput | number
    economia_estimada?: FloatFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    clinica?: ClinicaUpdateOneRequiredWithoutControle_operacionalNestedInput
  }

  export type ControleOperacionalUncheckedUpdateInput = {
    id_controle?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    data_referencia?: DateTimeFieldUpdateOperationsInput | Date | string
    pacientes_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_nao_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_faltantes?: IntFieldUpdateOperationsInput | number
    nps?: NullableIntFieldUpdateOperationsInput | number | null
    total_consultas?: IntFieldUpdateOperationsInput | number
    total_procedimentos?: IntFieldUpdateOperationsInput | number
    valor_arrecadado?: FloatFieldUpdateOperationsInput | number
    horas_robo_trabalhadas?: FloatFieldUpdateOperationsInput | number
    economia_estimada?: FloatFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ControleOperacionalCreateManyInput = {
    id_controle?: number
    id_clinica: number
    data_referencia?: Date | string
    pacientes_agendados?: number
    pacientes_nao_agendados?: number
    pacientes_faltantes?: number
    nps?: number | null
    total_consultas?: number
    total_procedimentos?: number
    valor_arrecadado?: number
    horas_robo_trabalhadas?: number
    economia_estimada?: number
    criado_em?: Date | string
  }

  export type ControleOperacionalUpdateManyMutationInput = {
    data_referencia?: DateTimeFieldUpdateOperationsInput | Date | string
    pacientes_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_nao_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_faltantes?: IntFieldUpdateOperationsInput | number
    nps?: NullableIntFieldUpdateOperationsInput | number | null
    total_consultas?: IntFieldUpdateOperationsInput | number
    total_procedimentos?: IntFieldUpdateOperationsInput | number
    valor_arrecadado?: FloatFieldUpdateOperationsInput | number
    horas_robo_trabalhadas?: FloatFieldUpdateOperationsInput | number
    economia_estimada?: FloatFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ControleOperacionalUncheckedUpdateManyInput = {
    id_controle?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    data_referencia?: DateTimeFieldUpdateOperationsInput | Date | string
    pacientes_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_nao_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_faltantes?: IntFieldUpdateOperationsInput | number
    nps?: NullableIntFieldUpdateOperationsInput | number | null
    total_consultas?: IntFieldUpdateOperationsInput | number
    total_procedimentos?: IntFieldUpdateOperationsInput | number
    valor_arrecadado?: FloatFieldUpdateOperationsInput | number
    horas_robo_trabalhadas?: FloatFieldUpdateOperationsInput | number
    economia_estimada?: FloatFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InteracaoRoboCreateInput = {
    tipo: string
    data_interacao?: Date | string
    paciente: PacienteCreateNestedOneWithoutInteracao_roboInput
    clinica: ClinicaCreateNestedOneWithoutInteracao_roboInput
    convenio?: ConvenioCreateNestedOneWithoutInteracoes_roboInput
  }

  export type InteracaoRoboUncheckedCreateInput = {
    id_interacao?: number
    id_clinica: number
    id_paciente: number
    tipo: string
    data_interacao?: Date | string
    id_convenio?: number | null
  }

  export type InteracaoRoboUpdateInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    data_interacao?: DateTimeFieldUpdateOperationsInput | Date | string
    paciente?: PacienteUpdateOneRequiredWithoutInteracao_roboNestedInput
    clinica?: ClinicaUpdateOneRequiredWithoutInteracao_roboNestedInput
    convenio?: ConvenioUpdateOneWithoutInteracoes_roboNestedInput
  }

  export type InteracaoRoboUncheckedUpdateInput = {
    id_interacao?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    id_paciente?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    data_interacao?: DateTimeFieldUpdateOperationsInput | Date | string
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InteracaoRoboCreateManyInput = {
    id_interacao?: number
    id_clinica: number
    id_paciente: number
    tipo: string
    data_interacao?: Date | string
    id_convenio?: number | null
  }

  export type InteracaoRoboUpdateManyMutationInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    data_interacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InteracaoRoboUncheckedUpdateManyInput = {
    id_interacao?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    id_paciente?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    data_interacao?: DateTimeFieldUpdateOperationsInput | Date | string
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ConvenioCreateInput = {
    nome: string
    ativo?: boolean
    criado_em?: Date | string
    clinica: ClinicaCreateNestedOneWithoutConveniosInput
    consultas?: ConsultaCreateNestedManyWithoutConvenioInput
    interacoes_robo?: InteracaoRoboCreateNestedManyWithoutConvenioInput
  }

  export type ConvenioUncheckedCreateInput = {
    id_convenio?: number
    nome: string
    ativo?: boolean
    id_clinica: number
    criado_em?: Date | string
    consultas?: ConsultaUncheckedCreateNestedManyWithoutConvenioInput
    interacoes_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutConvenioInput
  }

  export type ConvenioUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    clinica?: ClinicaUpdateOneRequiredWithoutConveniosNestedInput
    consultas?: ConsultaUpdateManyWithoutConvenioNestedInput
    interacoes_robo?: InteracaoRoboUpdateManyWithoutConvenioNestedInput
  }

  export type ConvenioUncheckedUpdateInput = {
    id_convenio?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    id_clinica?: IntFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    consultas?: ConsultaUncheckedUpdateManyWithoutConvenioNestedInput
    interacoes_robo?: InteracaoRoboUncheckedUpdateManyWithoutConvenioNestedInput
  }

  export type ConvenioCreateManyInput = {
    id_convenio?: number
    nome: string
    ativo?: boolean
    id_clinica: number
    criado_em?: Date | string
  }

  export type ConvenioUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConvenioUncheckedUpdateManyInput = {
    id_convenio?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    id_clinica?: IntFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UsuarioListRelationFilter = {
    every?: UsuarioWhereInput
    some?: UsuarioWhereInput
    none?: UsuarioWhereInput
  }

  export type ProfissionalDaSaudeListRelationFilter = {
    every?: ProfissionalDaSaudeWhereInput
    some?: ProfissionalDaSaudeWhereInput
    none?: ProfissionalDaSaudeWhereInput
  }

  export type PacienteListRelationFilter = {
    every?: PacienteWhereInput
    some?: PacienteWhereInput
    none?: PacienteWhereInput
  }

  export type ConsultaListRelationFilter = {
    every?: ConsultaWhereInput
    some?: ConsultaWhereInput
    none?: ConsultaWhereInput
  }

  export type ProcedimentoListRelationFilter = {
    every?: ProcedimentoWhereInput
    some?: ProcedimentoWhereInput
    none?: ProcedimentoWhereInput
  }

  export type AgendaListRelationFilter = {
    every?: AgendaWhereInput
    some?: AgendaWhereInput
    none?: AgendaWhereInput
  }

  export type AvaliacaoListRelationFilter = {
    every?: AvaliacaoWhereInput
    some?: AvaliacaoWhereInput
    none?: AvaliacaoWhereInput
  }

  export type ControleOperacionalListRelationFilter = {
    every?: ControleOperacionalWhereInput
    some?: ControleOperacionalWhereInput
    none?: ControleOperacionalWhereInput
  }

  export type InteracaoRoboListRelationFilter = {
    every?: InteracaoRoboWhereInput
    some?: InteracaoRoboWhereInput
    none?: InteracaoRoboWhereInput
  }

  export type ConvenioListRelationFilter = {
    every?: ConvenioWhereInput
    some?: ConvenioWhereInput
    none?: ConvenioWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProfissionalDaSaudeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PacienteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ConsultaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProcedimentoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AgendaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AvaliacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ControleOperacionalOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InteracaoRoboOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ConvenioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClinicaCountOrderByAggregateInput = {
    id_clinica?: SortOrder
    nome_clinica?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    cnpj?: SortOrder
    razao_social?: SortOrder
    cep?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    codigo_ibge?: SortOrder
    plano?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
  }

  export type ClinicaAvgOrderByAggregateInput = {
    id_clinica?: SortOrder
  }

  export type ClinicaMaxOrderByAggregateInput = {
    id_clinica?: SortOrder
    nome_clinica?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    cnpj?: SortOrder
    razao_social?: SortOrder
    cep?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    codigo_ibge?: SortOrder
    plano?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
  }

  export type ClinicaMinOrderByAggregateInput = {
    id_clinica?: SortOrder
    nome_clinica?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    cnpj?: SortOrder
    razao_social?: SortOrder
    cep?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    codigo_ibge?: SortOrder
    plano?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
  }

  export type ClinicaSumOrderByAggregateInput = {
    id_clinica?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type ClinicaScalarRelationFilter = {
    is?: ClinicaWhereInput
    isNot?: ClinicaWhereInput
  }

  export type ProfissionalDaSaudeNullableScalarRelationFilter = {
    is?: ProfissionalDaSaudeWhereInput | null
    isNot?: ProfissionalDaSaudeWhereInput | null
  }

  export type UsuarioCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    tipo?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    id_clinica?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_clinica?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    tipo?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    id_clinica?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    tipo?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    id_clinica?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_clinica?: SortOrder
  }

  export type PacienteCountOrderByAggregateInput = {
    id_paciente?: SortOrder
    cpf?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    codigo_ibge?: SortOrder
    cep?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    senha?: SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
  }

  export type PacienteAvgOrderByAggregateInput = {
    id_paciente?: SortOrder
    id_clinica?: SortOrder
  }

  export type PacienteMaxOrderByAggregateInput = {
    id_paciente?: SortOrder
    cpf?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    codigo_ibge?: SortOrder
    cep?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    senha?: SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
  }

  export type PacienteMinOrderByAggregateInput = {
    id_paciente?: SortOrder
    cpf?: SortOrder
    nome?: SortOrder
    data_nascimento?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    codigo_ibge?: SortOrder
    cep?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cidade?: SortOrder
    uf?: SortOrder
    senha?: SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
  }

  export type PacienteSumOrderByAggregateInput = {
    id_paciente?: SortOrder
    id_clinica?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UsuarioNullableScalarRelationFilter = {
    is?: UsuarioWhereInput | null
    isNot?: UsuarioWhereInput | null
  }

  export type ProfissionalDaSaudeCountOrderByAggregateInput = {
    id_profissional_saude?: SortOrder
    nome_profissional?: SortOrder
    imagem_profissional?: SortOrder
    data_nascimento?: SortOrder
    cpf?: SortOrder
    conselho?: SortOrder
    numero_conselho?: SortOrder
    uf_conselho?: SortOrder
    rqe?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    telemedicina?: SortOrder
    especialidade?: SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
    usuario_id?: SortOrder
  }

  export type ProfissionalDaSaudeAvgOrderByAggregateInput = {
    id_profissional_saude?: SortOrder
    id_clinica?: SortOrder
    usuario_id?: SortOrder
  }

  export type ProfissionalDaSaudeMaxOrderByAggregateInput = {
    id_profissional_saude?: SortOrder
    nome_profissional?: SortOrder
    imagem_profissional?: SortOrder
    data_nascimento?: SortOrder
    cpf?: SortOrder
    conselho?: SortOrder
    numero_conselho?: SortOrder
    uf_conselho?: SortOrder
    rqe?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    telemedicina?: SortOrder
    especialidade?: SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
    usuario_id?: SortOrder
  }

  export type ProfissionalDaSaudeMinOrderByAggregateInput = {
    id_profissional_saude?: SortOrder
    nome_profissional?: SortOrder
    imagem_profissional?: SortOrder
    data_nascimento?: SortOrder
    cpf?: SortOrder
    conselho?: SortOrder
    numero_conselho?: SortOrder
    uf_conselho?: SortOrder
    rqe?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    telemedicina?: SortOrder
    especialidade?: SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
    usuario_id?: SortOrder
  }

  export type ProfissionalDaSaudeSumOrderByAggregateInput = {
    id_profissional_saude?: SortOrder
    id_clinica?: SortOrder
    usuario_id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type PacienteScalarRelationFilter = {
    is?: PacienteWhereInput
    isNot?: PacienteWhereInput
  }

  export type ProfissionalDaSaudeScalarRelationFilter = {
    is?: ProfissionalDaSaudeWhereInput
    isNot?: ProfissionalDaSaudeWhereInput
  }

  export type ConsultaProcedimentoListRelationFilter = {
    every?: ConsultaProcedimentoWhereInput
    some?: ConsultaProcedimentoWhereInput
    none?: ConsultaProcedimentoWhereInput
  }

  export type ConvenioNullableScalarRelationFilter = {
    is?: ConvenioWhereInput | null
    isNot?: ConvenioWhereInput | null
  }

  export type ConsultaProcedimentoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ConsultaCountOrderByAggregateInput = {
    id_consulta?: SortOrder
    data_hora_inicio?: SortOrder
    data_hora_fim?: SortOrder
    valor?: SortOrder
    telemedicina?: SortOrder
    status?: SortOrder
    observacoes?: SortOrder
    paciente_id?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
    id_convenio?: SortOrder
  }

  export type ConsultaAvgOrderByAggregateInput = {
    id_consulta?: SortOrder
    valor?: SortOrder
    paciente_id?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
    id_convenio?: SortOrder
  }

  export type ConsultaMaxOrderByAggregateInput = {
    id_consulta?: SortOrder
    data_hora_inicio?: SortOrder
    data_hora_fim?: SortOrder
    valor?: SortOrder
    telemedicina?: SortOrder
    status?: SortOrder
    observacoes?: SortOrder
    paciente_id?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
    id_convenio?: SortOrder
  }

  export type ConsultaMinOrderByAggregateInput = {
    id_consulta?: SortOrder
    data_hora_inicio?: SortOrder
    data_hora_fim?: SortOrder
    valor?: SortOrder
    telemedicina?: SortOrder
    status?: SortOrder
    observacoes?: SortOrder
    paciente_id?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
    id_convenio?: SortOrder
  }

  export type ConsultaSumOrderByAggregateInput = {
    id_consulta?: SortOrder
    valor?: SortOrder
    paciente_id?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
    id_convenio?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type ConsultaScalarRelationFilter = {
    is?: ConsultaWhereInput
    isNot?: ConsultaWhereInput
  }

  export type AvaliacaoCountOrderByAggregateInput = {
    id_avaliacao?: SortOrder
    consulta_id?: SortOrder
    data_avaliacao?: SortOrder
    descricao?: SortOrder
    parecer_profissional?: SortOrder
    id_clinica?: SortOrder
  }

  export type AvaliacaoAvgOrderByAggregateInput = {
    id_avaliacao?: SortOrder
    consulta_id?: SortOrder
    id_clinica?: SortOrder
  }

  export type AvaliacaoMaxOrderByAggregateInput = {
    id_avaliacao?: SortOrder
    consulta_id?: SortOrder
    data_avaliacao?: SortOrder
    descricao?: SortOrder
    parecer_profissional?: SortOrder
    id_clinica?: SortOrder
  }

  export type AvaliacaoMinOrderByAggregateInput = {
    id_avaliacao?: SortOrder
    consulta_id?: SortOrder
    data_avaliacao?: SortOrder
    descricao?: SortOrder
    parecer_profissional?: SortOrder
    id_clinica?: SortOrder
  }

  export type AvaliacaoSumOrderByAggregateInput = {
    id_avaliacao?: SortOrder
    consulta_id?: SortOrder
    id_clinica?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type ProcedimentoCountOrderByAggregateInput = {
    id_procedimento?: SortOrder
    nome_procedimento?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    duracao_minutos?: SortOrder
    telemedicina?: SortOrder
    descricao?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    id_clinica?: SortOrder
  }

  export type ProcedimentoAvgOrderByAggregateInput = {
    id_procedimento?: SortOrder
    valor?: SortOrder
    duracao_minutos?: SortOrder
    id_clinica?: SortOrder
  }

  export type ProcedimentoMaxOrderByAggregateInput = {
    id_procedimento?: SortOrder
    nome_procedimento?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    duracao_minutos?: SortOrder
    telemedicina?: SortOrder
    descricao?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    id_clinica?: SortOrder
  }

  export type ProcedimentoMinOrderByAggregateInput = {
    id_procedimento?: SortOrder
    nome_procedimento?: SortOrder
    tipo?: SortOrder
    valor?: SortOrder
    duracao_minutos?: SortOrder
    telemedicina?: SortOrder
    descricao?: SortOrder
    ativo?: SortOrder
    criado_em?: SortOrder
    atualizado_em?: SortOrder
    id_clinica?: SortOrder
  }

  export type ProcedimentoSumOrderByAggregateInput = {
    id_procedimento?: SortOrder
    valor?: SortOrder
    duracao_minutos?: SortOrder
    id_clinica?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type ProcedimentoScalarRelationFilter = {
    is?: ProcedimentoWhereInput
    isNot?: ProcedimentoWhereInput
  }

  export type ConsultaProcedimentoConsulta_idProcedimento_idCompoundUniqueInput = {
    consulta_id: number
    procedimento_id: number
  }

  export type ConsultaProcedimentoCountOrderByAggregateInput = {
    consulta_id?: SortOrder
    procedimento_id?: SortOrder
  }

  export type ConsultaProcedimentoAvgOrderByAggregateInput = {
    consulta_id?: SortOrder
    procedimento_id?: SortOrder
  }

  export type ConsultaProcedimentoMaxOrderByAggregateInput = {
    consulta_id?: SortOrder
    procedimento_id?: SortOrder
  }

  export type ConsultaProcedimentoMinOrderByAggregateInput = {
    consulta_id?: SortOrder
    procedimento_id?: SortOrder
  }

  export type ConsultaProcedimentoSumOrderByAggregateInput = {
    consulta_id?: SortOrder
    procedimento_id?: SortOrder
  }

  export type AgendaCountOrderByAggregateInput = {
    id_agenda?: SortOrder
    data?: SortOrder
    hora_inicio?: SortOrder
    hora_fim?: SortOrder
    status?: SortOrder
    tipo_bloqueio?: SortOrder
    criado_em?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
  }

  export type AgendaAvgOrderByAggregateInput = {
    id_agenda?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
  }

  export type AgendaMaxOrderByAggregateInput = {
    id_agenda?: SortOrder
    data?: SortOrder
    hora_inicio?: SortOrder
    hora_fim?: SortOrder
    status?: SortOrder
    tipo_bloqueio?: SortOrder
    criado_em?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
  }

  export type AgendaMinOrderByAggregateInput = {
    id_agenda?: SortOrder
    data?: SortOrder
    hora_inicio?: SortOrder
    hora_fim?: SortOrder
    status?: SortOrder
    tipo_bloqueio?: SortOrder
    criado_em?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
  }

  export type AgendaSumOrderByAggregateInput = {
    id_agenda?: SortOrder
    profissional_id?: SortOrder
    id_clinica?: SortOrder
  }

  export type ControleOperacionalCountOrderByAggregateInput = {
    id_controle?: SortOrder
    id_clinica?: SortOrder
    data_referencia?: SortOrder
    pacientes_agendados?: SortOrder
    pacientes_nao_agendados?: SortOrder
    pacientes_faltantes?: SortOrder
    nps?: SortOrder
    total_consultas?: SortOrder
    total_procedimentos?: SortOrder
    valor_arrecadado?: SortOrder
    horas_robo_trabalhadas?: SortOrder
    economia_estimada?: SortOrder
    criado_em?: SortOrder
  }

  export type ControleOperacionalAvgOrderByAggregateInput = {
    id_controle?: SortOrder
    id_clinica?: SortOrder
    pacientes_agendados?: SortOrder
    pacientes_nao_agendados?: SortOrder
    pacientes_faltantes?: SortOrder
    nps?: SortOrder
    total_consultas?: SortOrder
    total_procedimentos?: SortOrder
    valor_arrecadado?: SortOrder
    horas_robo_trabalhadas?: SortOrder
    economia_estimada?: SortOrder
  }

  export type ControleOperacionalMaxOrderByAggregateInput = {
    id_controle?: SortOrder
    id_clinica?: SortOrder
    data_referencia?: SortOrder
    pacientes_agendados?: SortOrder
    pacientes_nao_agendados?: SortOrder
    pacientes_faltantes?: SortOrder
    nps?: SortOrder
    total_consultas?: SortOrder
    total_procedimentos?: SortOrder
    valor_arrecadado?: SortOrder
    horas_robo_trabalhadas?: SortOrder
    economia_estimada?: SortOrder
    criado_em?: SortOrder
  }

  export type ControleOperacionalMinOrderByAggregateInput = {
    id_controle?: SortOrder
    id_clinica?: SortOrder
    data_referencia?: SortOrder
    pacientes_agendados?: SortOrder
    pacientes_nao_agendados?: SortOrder
    pacientes_faltantes?: SortOrder
    nps?: SortOrder
    total_consultas?: SortOrder
    total_procedimentos?: SortOrder
    valor_arrecadado?: SortOrder
    horas_robo_trabalhadas?: SortOrder
    economia_estimada?: SortOrder
    criado_em?: SortOrder
  }

  export type ControleOperacionalSumOrderByAggregateInput = {
    id_controle?: SortOrder
    id_clinica?: SortOrder
    pacientes_agendados?: SortOrder
    pacientes_nao_agendados?: SortOrder
    pacientes_faltantes?: SortOrder
    nps?: SortOrder
    total_consultas?: SortOrder
    total_procedimentos?: SortOrder
    valor_arrecadado?: SortOrder
    horas_robo_trabalhadas?: SortOrder
    economia_estimada?: SortOrder
  }

  export type InteracaoRoboCountOrderByAggregateInput = {
    id_interacao?: SortOrder
    id_clinica?: SortOrder
    id_paciente?: SortOrder
    tipo?: SortOrder
    data_interacao?: SortOrder
    id_convenio?: SortOrder
  }

  export type InteracaoRoboAvgOrderByAggregateInput = {
    id_interacao?: SortOrder
    id_clinica?: SortOrder
    id_paciente?: SortOrder
    id_convenio?: SortOrder
  }

  export type InteracaoRoboMaxOrderByAggregateInput = {
    id_interacao?: SortOrder
    id_clinica?: SortOrder
    id_paciente?: SortOrder
    tipo?: SortOrder
    data_interacao?: SortOrder
    id_convenio?: SortOrder
  }

  export type InteracaoRoboMinOrderByAggregateInput = {
    id_interacao?: SortOrder
    id_clinica?: SortOrder
    id_paciente?: SortOrder
    tipo?: SortOrder
    data_interacao?: SortOrder
    id_convenio?: SortOrder
  }

  export type InteracaoRoboSumOrderByAggregateInput = {
    id_interacao?: SortOrder
    id_clinica?: SortOrder
    id_paciente?: SortOrder
    id_convenio?: SortOrder
  }

  export type ConvenioCountOrderByAggregateInput = {
    id_convenio?: SortOrder
    nome?: SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
    criado_em?: SortOrder
  }

  export type ConvenioAvgOrderByAggregateInput = {
    id_convenio?: SortOrder
    id_clinica?: SortOrder
  }

  export type ConvenioMaxOrderByAggregateInput = {
    id_convenio?: SortOrder
    nome?: SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
    criado_em?: SortOrder
  }

  export type ConvenioMinOrderByAggregateInput = {
    id_convenio?: SortOrder
    nome?: SortOrder
    ativo?: SortOrder
    id_clinica?: SortOrder
    criado_em?: SortOrder
  }

  export type ConvenioSumOrderByAggregateInput = {
    id_convenio?: SortOrder
    id_clinica?: SortOrder
  }

  export type UsuarioCreateNestedManyWithoutClinicaInput = {
    create?: XOR<UsuarioCreateWithoutClinicaInput, UsuarioUncheckedCreateWithoutClinicaInput> | UsuarioCreateWithoutClinicaInput[] | UsuarioUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutClinicaInput | UsuarioCreateOrConnectWithoutClinicaInput[]
    createMany?: UsuarioCreateManyClinicaInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type ProfissionalDaSaudeCreateNestedManyWithoutClinicaInput = {
    create?: XOR<ProfissionalDaSaudeCreateWithoutClinicaInput, ProfissionalDaSaudeUncheckedCreateWithoutClinicaInput> | ProfissionalDaSaudeCreateWithoutClinicaInput[] | ProfissionalDaSaudeUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ProfissionalDaSaudeCreateOrConnectWithoutClinicaInput | ProfissionalDaSaudeCreateOrConnectWithoutClinicaInput[]
    createMany?: ProfissionalDaSaudeCreateManyClinicaInputEnvelope
    connect?: ProfissionalDaSaudeWhereUniqueInput | ProfissionalDaSaudeWhereUniqueInput[]
  }

  export type PacienteCreateNestedManyWithoutClinicaInput = {
    create?: XOR<PacienteCreateWithoutClinicaInput, PacienteUncheckedCreateWithoutClinicaInput> | PacienteCreateWithoutClinicaInput[] | PacienteUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: PacienteCreateOrConnectWithoutClinicaInput | PacienteCreateOrConnectWithoutClinicaInput[]
    createMany?: PacienteCreateManyClinicaInputEnvelope
    connect?: PacienteWhereUniqueInput | PacienteWhereUniqueInput[]
  }

  export type ConsultaCreateNestedManyWithoutClinicaInput = {
    create?: XOR<ConsultaCreateWithoutClinicaInput, ConsultaUncheckedCreateWithoutClinicaInput> | ConsultaCreateWithoutClinicaInput[] | ConsultaUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutClinicaInput | ConsultaCreateOrConnectWithoutClinicaInput[]
    createMany?: ConsultaCreateManyClinicaInputEnvelope
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
  }

  export type ProcedimentoCreateNestedManyWithoutClinicaInput = {
    create?: XOR<ProcedimentoCreateWithoutClinicaInput, ProcedimentoUncheckedCreateWithoutClinicaInput> | ProcedimentoCreateWithoutClinicaInput[] | ProcedimentoUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ProcedimentoCreateOrConnectWithoutClinicaInput | ProcedimentoCreateOrConnectWithoutClinicaInput[]
    createMany?: ProcedimentoCreateManyClinicaInputEnvelope
    connect?: ProcedimentoWhereUniqueInput | ProcedimentoWhereUniqueInput[]
  }

  export type AgendaCreateNestedManyWithoutClinicaInput = {
    create?: XOR<AgendaCreateWithoutClinicaInput, AgendaUncheckedCreateWithoutClinicaInput> | AgendaCreateWithoutClinicaInput[] | AgendaUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: AgendaCreateOrConnectWithoutClinicaInput | AgendaCreateOrConnectWithoutClinicaInput[]
    createMany?: AgendaCreateManyClinicaInputEnvelope
    connect?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
  }

  export type AvaliacaoCreateNestedManyWithoutClinicaInput = {
    create?: XOR<AvaliacaoCreateWithoutClinicaInput, AvaliacaoUncheckedCreateWithoutClinicaInput> | AvaliacaoCreateWithoutClinicaInput[] | AvaliacaoUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutClinicaInput | AvaliacaoCreateOrConnectWithoutClinicaInput[]
    createMany?: AvaliacaoCreateManyClinicaInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type ControleOperacionalCreateNestedManyWithoutClinicaInput = {
    create?: XOR<ControleOperacionalCreateWithoutClinicaInput, ControleOperacionalUncheckedCreateWithoutClinicaInput> | ControleOperacionalCreateWithoutClinicaInput[] | ControleOperacionalUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ControleOperacionalCreateOrConnectWithoutClinicaInput | ControleOperacionalCreateOrConnectWithoutClinicaInput[]
    createMany?: ControleOperacionalCreateManyClinicaInputEnvelope
    connect?: ControleOperacionalWhereUniqueInput | ControleOperacionalWhereUniqueInput[]
  }

  export type InteracaoRoboCreateNestedManyWithoutClinicaInput = {
    create?: XOR<InteracaoRoboCreateWithoutClinicaInput, InteracaoRoboUncheckedCreateWithoutClinicaInput> | InteracaoRoboCreateWithoutClinicaInput[] | InteracaoRoboUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: InteracaoRoboCreateOrConnectWithoutClinicaInput | InteracaoRoboCreateOrConnectWithoutClinicaInput[]
    createMany?: InteracaoRoboCreateManyClinicaInputEnvelope
    connect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
  }

  export type ConvenioCreateNestedManyWithoutClinicaInput = {
    create?: XOR<ConvenioCreateWithoutClinicaInput, ConvenioUncheckedCreateWithoutClinicaInput> | ConvenioCreateWithoutClinicaInput[] | ConvenioUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ConvenioCreateOrConnectWithoutClinicaInput | ConvenioCreateOrConnectWithoutClinicaInput[]
    createMany?: ConvenioCreateManyClinicaInputEnvelope
    connect?: ConvenioWhereUniqueInput | ConvenioWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutClinicaInput = {
    create?: XOR<UsuarioCreateWithoutClinicaInput, UsuarioUncheckedCreateWithoutClinicaInput> | UsuarioCreateWithoutClinicaInput[] | UsuarioUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutClinicaInput | UsuarioCreateOrConnectWithoutClinicaInput[]
    createMany?: UsuarioCreateManyClinicaInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type ProfissionalDaSaudeUncheckedCreateNestedManyWithoutClinicaInput = {
    create?: XOR<ProfissionalDaSaudeCreateWithoutClinicaInput, ProfissionalDaSaudeUncheckedCreateWithoutClinicaInput> | ProfissionalDaSaudeCreateWithoutClinicaInput[] | ProfissionalDaSaudeUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ProfissionalDaSaudeCreateOrConnectWithoutClinicaInput | ProfissionalDaSaudeCreateOrConnectWithoutClinicaInput[]
    createMany?: ProfissionalDaSaudeCreateManyClinicaInputEnvelope
    connect?: ProfissionalDaSaudeWhereUniqueInput | ProfissionalDaSaudeWhereUniqueInput[]
  }

  export type PacienteUncheckedCreateNestedManyWithoutClinicaInput = {
    create?: XOR<PacienteCreateWithoutClinicaInput, PacienteUncheckedCreateWithoutClinicaInput> | PacienteCreateWithoutClinicaInput[] | PacienteUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: PacienteCreateOrConnectWithoutClinicaInput | PacienteCreateOrConnectWithoutClinicaInput[]
    createMany?: PacienteCreateManyClinicaInputEnvelope
    connect?: PacienteWhereUniqueInput | PacienteWhereUniqueInput[]
  }

  export type ConsultaUncheckedCreateNestedManyWithoutClinicaInput = {
    create?: XOR<ConsultaCreateWithoutClinicaInput, ConsultaUncheckedCreateWithoutClinicaInput> | ConsultaCreateWithoutClinicaInput[] | ConsultaUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutClinicaInput | ConsultaCreateOrConnectWithoutClinicaInput[]
    createMany?: ConsultaCreateManyClinicaInputEnvelope
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
  }

  export type ProcedimentoUncheckedCreateNestedManyWithoutClinicaInput = {
    create?: XOR<ProcedimentoCreateWithoutClinicaInput, ProcedimentoUncheckedCreateWithoutClinicaInput> | ProcedimentoCreateWithoutClinicaInput[] | ProcedimentoUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ProcedimentoCreateOrConnectWithoutClinicaInput | ProcedimentoCreateOrConnectWithoutClinicaInput[]
    createMany?: ProcedimentoCreateManyClinicaInputEnvelope
    connect?: ProcedimentoWhereUniqueInput | ProcedimentoWhereUniqueInput[]
  }

  export type AgendaUncheckedCreateNestedManyWithoutClinicaInput = {
    create?: XOR<AgendaCreateWithoutClinicaInput, AgendaUncheckedCreateWithoutClinicaInput> | AgendaCreateWithoutClinicaInput[] | AgendaUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: AgendaCreateOrConnectWithoutClinicaInput | AgendaCreateOrConnectWithoutClinicaInput[]
    createMany?: AgendaCreateManyClinicaInputEnvelope
    connect?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
  }

  export type AvaliacaoUncheckedCreateNestedManyWithoutClinicaInput = {
    create?: XOR<AvaliacaoCreateWithoutClinicaInput, AvaliacaoUncheckedCreateWithoutClinicaInput> | AvaliacaoCreateWithoutClinicaInput[] | AvaliacaoUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutClinicaInput | AvaliacaoCreateOrConnectWithoutClinicaInput[]
    createMany?: AvaliacaoCreateManyClinicaInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type ControleOperacionalUncheckedCreateNestedManyWithoutClinicaInput = {
    create?: XOR<ControleOperacionalCreateWithoutClinicaInput, ControleOperacionalUncheckedCreateWithoutClinicaInput> | ControleOperacionalCreateWithoutClinicaInput[] | ControleOperacionalUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ControleOperacionalCreateOrConnectWithoutClinicaInput | ControleOperacionalCreateOrConnectWithoutClinicaInput[]
    createMany?: ControleOperacionalCreateManyClinicaInputEnvelope
    connect?: ControleOperacionalWhereUniqueInput | ControleOperacionalWhereUniqueInput[]
  }

  export type InteracaoRoboUncheckedCreateNestedManyWithoutClinicaInput = {
    create?: XOR<InteracaoRoboCreateWithoutClinicaInput, InteracaoRoboUncheckedCreateWithoutClinicaInput> | InteracaoRoboCreateWithoutClinicaInput[] | InteracaoRoboUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: InteracaoRoboCreateOrConnectWithoutClinicaInput | InteracaoRoboCreateOrConnectWithoutClinicaInput[]
    createMany?: InteracaoRoboCreateManyClinicaInputEnvelope
    connect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
  }

  export type ConvenioUncheckedCreateNestedManyWithoutClinicaInput = {
    create?: XOR<ConvenioCreateWithoutClinicaInput, ConvenioUncheckedCreateWithoutClinicaInput> | ConvenioCreateWithoutClinicaInput[] | ConvenioUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ConvenioCreateOrConnectWithoutClinicaInput | ConvenioCreateOrConnectWithoutClinicaInput[]
    createMany?: ConvenioCreateManyClinicaInputEnvelope
    connect?: ConvenioWhereUniqueInput | ConvenioWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UsuarioUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<UsuarioCreateWithoutClinicaInput, UsuarioUncheckedCreateWithoutClinicaInput> | UsuarioCreateWithoutClinicaInput[] | UsuarioUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutClinicaInput | UsuarioCreateOrConnectWithoutClinicaInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutClinicaInput | UsuarioUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: UsuarioCreateManyClinicaInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutClinicaInput | UsuarioUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutClinicaInput | UsuarioUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type ProfissionalDaSaudeUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<ProfissionalDaSaudeCreateWithoutClinicaInput, ProfissionalDaSaudeUncheckedCreateWithoutClinicaInput> | ProfissionalDaSaudeCreateWithoutClinicaInput[] | ProfissionalDaSaudeUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ProfissionalDaSaudeCreateOrConnectWithoutClinicaInput | ProfissionalDaSaudeCreateOrConnectWithoutClinicaInput[]
    upsert?: ProfissionalDaSaudeUpsertWithWhereUniqueWithoutClinicaInput | ProfissionalDaSaudeUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: ProfissionalDaSaudeCreateManyClinicaInputEnvelope
    set?: ProfissionalDaSaudeWhereUniqueInput | ProfissionalDaSaudeWhereUniqueInput[]
    disconnect?: ProfissionalDaSaudeWhereUniqueInput | ProfissionalDaSaudeWhereUniqueInput[]
    delete?: ProfissionalDaSaudeWhereUniqueInput | ProfissionalDaSaudeWhereUniqueInput[]
    connect?: ProfissionalDaSaudeWhereUniqueInput | ProfissionalDaSaudeWhereUniqueInput[]
    update?: ProfissionalDaSaudeUpdateWithWhereUniqueWithoutClinicaInput | ProfissionalDaSaudeUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: ProfissionalDaSaudeUpdateManyWithWhereWithoutClinicaInput | ProfissionalDaSaudeUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: ProfissionalDaSaudeScalarWhereInput | ProfissionalDaSaudeScalarWhereInput[]
  }

  export type PacienteUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<PacienteCreateWithoutClinicaInput, PacienteUncheckedCreateWithoutClinicaInput> | PacienteCreateWithoutClinicaInput[] | PacienteUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: PacienteCreateOrConnectWithoutClinicaInput | PacienteCreateOrConnectWithoutClinicaInput[]
    upsert?: PacienteUpsertWithWhereUniqueWithoutClinicaInput | PacienteUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: PacienteCreateManyClinicaInputEnvelope
    set?: PacienteWhereUniqueInput | PacienteWhereUniqueInput[]
    disconnect?: PacienteWhereUniqueInput | PacienteWhereUniqueInput[]
    delete?: PacienteWhereUniqueInput | PacienteWhereUniqueInput[]
    connect?: PacienteWhereUniqueInput | PacienteWhereUniqueInput[]
    update?: PacienteUpdateWithWhereUniqueWithoutClinicaInput | PacienteUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: PacienteUpdateManyWithWhereWithoutClinicaInput | PacienteUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: PacienteScalarWhereInput | PacienteScalarWhereInput[]
  }

  export type ConsultaUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<ConsultaCreateWithoutClinicaInput, ConsultaUncheckedCreateWithoutClinicaInput> | ConsultaCreateWithoutClinicaInput[] | ConsultaUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutClinicaInput | ConsultaCreateOrConnectWithoutClinicaInput[]
    upsert?: ConsultaUpsertWithWhereUniqueWithoutClinicaInput | ConsultaUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: ConsultaCreateManyClinicaInputEnvelope
    set?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    disconnect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    delete?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    update?: ConsultaUpdateWithWhereUniqueWithoutClinicaInput | ConsultaUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: ConsultaUpdateManyWithWhereWithoutClinicaInput | ConsultaUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: ConsultaScalarWhereInput | ConsultaScalarWhereInput[]
  }

  export type ProcedimentoUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<ProcedimentoCreateWithoutClinicaInput, ProcedimentoUncheckedCreateWithoutClinicaInput> | ProcedimentoCreateWithoutClinicaInput[] | ProcedimentoUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ProcedimentoCreateOrConnectWithoutClinicaInput | ProcedimentoCreateOrConnectWithoutClinicaInput[]
    upsert?: ProcedimentoUpsertWithWhereUniqueWithoutClinicaInput | ProcedimentoUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: ProcedimentoCreateManyClinicaInputEnvelope
    set?: ProcedimentoWhereUniqueInput | ProcedimentoWhereUniqueInput[]
    disconnect?: ProcedimentoWhereUniqueInput | ProcedimentoWhereUniqueInput[]
    delete?: ProcedimentoWhereUniqueInput | ProcedimentoWhereUniqueInput[]
    connect?: ProcedimentoWhereUniqueInput | ProcedimentoWhereUniqueInput[]
    update?: ProcedimentoUpdateWithWhereUniqueWithoutClinicaInput | ProcedimentoUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: ProcedimentoUpdateManyWithWhereWithoutClinicaInput | ProcedimentoUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: ProcedimentoScalarWhereInput | ProcedimentoScalarWhereInput[]
  }

  export type AgendaUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<AgendaCreateWithoutClinicaInput, AgendaUncheckedCreateWithoutClinicaInput> | AgendaCreateWithoutClinicaInput[] | AgendaUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: AgendaCreateOrConnectWithoutClinicaInput | AgendaCreateOrConnectWithoutClinicaInput[]
    upsert?: AgendaUpsertWithWhereUniqueWithoutClinicaInput | AgendaUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: AgendaCreateManyClinicaInputEnvelope
    set?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    disconnect?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    delete?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    connect?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    update?: AgendaUpdateWithWhereUniqueWithoutClinicaInput | AgendaUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: AgendaUpdateManyWithWhereWithoutClinicaInput | AgendaUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: AgendaScalarWhereInput | AgendaScalarWhereInput[]
  }

  export type AvaliacaoUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutClinicaInput, AvaliacaoUncheckedCreateWithoutClinicaInput> | AvaliacaoCreateWithoutClinicaInput[] | AvaliacaoUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutClinicaInput | AvaliacaoCreateOrConnectWithoutClinicaInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutClinicaInput | AvaliacaoUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: AvaliacaoCreateManyClinicaInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutClinicaInput | AvaliacaoUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutClinicaInput | AvaliacaoUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type ControleOperacionalUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<ControleOperacionalCreateWithoutClinicaInput, ControleOperacionalUncheckedCreateWithoutClinicaInput> | ControleOperacionalCreateWithoutClinicaInput[] | ControleOperacionalUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ControleOperacionalCreateOrConnectWithoutClinicaInput | ControleOperacionalCreateOrConnectWithoutClinicaInput[]
    upsert?: ControleOperacionalUpsertWithWhereUniqueWithoutClinicaInput | ControleOperacionalUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: ControleOperacionalCreateManyClinicaInputEnvelope
    set?: ControleOperacionalWhereUniqueInput | ControleOperacionalWhereUniqueInput[]
    disconnect?: ControleOperacionalWhereUniqueInput | ControleOperacionalWhereUniqueInput[]
    delete?: ControleOperacionalWhereUniqueInput | ControleOperacionalWhereUniqueInput[]
    connect?: ControleOperacionalWhereUniqueInput | ControleOperacionalWhereUniqueInput[]
    update?: ControleOperacionalUpdateWithWhereUniqueWithoutClinicaInput | ControleOperacionalUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: ControleOperacionalUpdateManyWithWhereWithoutClinicaInput | ControleOperacionalUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: ControleOperacionalScalarWhereInput | ControleOperacionalScalarWhereInput[]
  }

  export type InteracaoRoboUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<InteracaoRoboCreateWithoutClinicaInput, InteracaoRoboUncheckedCreateWithoutClinicaInput> | InteracaoRoboCreateWithoutClinicaInput[] | InteracaoRoboUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: InteracaoRoboCreateOrConnectWithoutClinicaInput | InteracaoRoboCreateOrConnectWithoutClinicaInput[]
    upsert?: InteracaoRoboUpsertWithWhereUniqueWithoutClinicaInput | InteracaoRoboUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: InteracaoRoboCreateManyClinicaInputEnvelope
    set?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    disconnect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    delete?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    connect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    update?: InteracaoRoboUpdateWithWhereUniqueWithoutClinicaInput | InteracaoRoboUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: InteracaoRoboUpdateManyWithWhereWithoutClinicaInput | InteracaoRoboUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: InteracaoRoboScalarWhereInput | InteracaoRoboScalarWhereInput[]
  }

  export type ConvenioUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<ConvenioCreateWithoutClinicaInput, ConvenioUncheckedCreateWithoutClinicaInput> | ConvenioCreateWithoutClinicaInput[] | ConvenioUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ConvenioCreateOrConnectWithoutClinicaInput | ConvenioCreateOrConnectWithoutClinicaInput[]
    upsert?: ConvenioUpsertWithWhereUniqueWithoutClinicaInput | ConvenioUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: ConvenioCreateManyClinicaInputEnvelope
    set?: ConvenioWhereUniqueInput | ConvenioWhereUniqueInput[]
    disconnect?: ConvenioWhereUniqueInput | ConvenioWhereUniqueInput[]
    delete?: ConvenioWhereUniqueInput | ConvenioWhereUniqueInput[]
    connect?: ConvenioWhereUniqueInput | ConvenioWhereUniqueInput[]
    update?: ConvenioUpdateWithWhereUniqueWithoutClinicaInput | ConvenioUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: ConvenioUpdateManyWithWhereWithoutClinicaInput | ConvenioUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: ConvenioScalarWhereInput | ConvenioScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UsuarioUncheckedUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<UsuarioCreateWithoutClinicaInput, UsuarioUncheckedCreateWithoutClinicaInput> | UsuarioCreateWithoutClinicaInput[] | UsuarioUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutClinicaInput | UsuarioCreateOrConnectWithoutClinicaInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutClinicaInput | UsuarioUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: UsuarioCreateManyClinicaInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutClinicaInput | UsuarioUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutClinicaInput | UsuarioUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type ProfissionalDaSaudeUncheckedUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<ProfissionalDaSaudeCreateWithoutClinicaInput, ProfissionalDaSaudeUncheckedCreateWithoutClinicaInput> | ProfissionalDaSaudeCreateWithoutClinicaInput[] | ProfissionalDaSaudeUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ProfissionalDaSaudeCreateOrConnectWithoutClinicaInput | ProfissionalDaSaudeCreateOrConnectWithoutClinicaInput[]
    upsert?: ProfissionalDaSaudeUpsertWithWhereUniqueWithoutClinicaInput | ProfissionalDaSaudeUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: ProfissionalDaSaudeCreateManyClinicaInputEnvelope
    set?: ProfissionalDaSaudeWhereUniqueInput | ProfissionalDaSaudeWhereUniqueInput[]
    disconnect?: ProfissionalDaSaudeWhereUniqueInput | ProfissionalDaSaudeWhereUniqueInput[]
    delete?: ProfissionalDaSaudeWhereUniqueInput | ProfissionalDaSaudeWhereUniqueInput[]
    connect?: ProfissionalDaSaudeWhereUniqueInput | ProfissionalDaSaudeWhereUniqueInput[]
    update?: ProfissionalDaSaudeUpdateWithWhereUniqueWithoutClinicaInput | ProfissionalDaSaudeUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: ProfissionalDaSaudeUpdateManyWithWhereWithoutClinicaInput | ProfissionalDaSaudeUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: ProfissionalDaSaudeScalarWhereInput | ProfissionalDaSaudeScalarWhereInput[]
  }

  export type PacienteUncheckedUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<PacienteCreateWithoutClinicaInput, PacienteUncheckedCreateWithoutClinicaInput> | PacienteCreateWithoutClinicaInput[] | PacienteUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: PacienteCreateOrConnectWithoutClinicaInput | PacienteCreateOrConnectWithoutClinicaInput[]
    upsert?: PacienteUpsertWithWhereUniqueWithoutClinicaInput | PacienteUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: PacienteCreateManyClinicaInputEnvelope
    set?: PacienteWhereUniqueInput | PacienteWhereUniqueInput[]
    disconnect?: PacienteWhereUniqueInput | PacienteWhereUniqueInput[]
    delete?: PacienteWhereUniqueInput | PacienteWhereUniqueInput[]
    connect?: PacienteWhereUniqueInput | PacienteWhereUniqueInput[]
    update?: PacienteUpdateWithWhereUniqueWithoutClinicaInput | PacienteUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: PacienteUpdateManyWithWhereWithoutClinicaInput | PacienteUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: PacienteScalarWhereInput | PacienteScalarWhereInput[]
  }

  export type ConsultaUncheckedUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<ConsultaCreateWithoutClinicaInput, ConsultaUncheckedCreateWithoutClinicaInput> | ConsultaCreateWithoutClinicaInput[] | ConsultaUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutClinicaInput | ConsultaCreateOrConnectWithoutClinicaInput[]
    upsert?: ConsultaUpsertWithWhereUniqueWithoutClinicaInput | ConsultaUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: ConsultaCreateManyClinicaInputEnvelope
    set?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    disconnect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    delete?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    update?: ConsultaUpdateWithWhereUniqueWithoutClinicaInput | ConsultaUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: ConsultaUpdateManyWithWhereWithoutClinicaInput | ConsultaUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: ConsultaScalarWhereInput | ConsultaScalarWhereInput[]
  }

  export type ProcedimentoUncheckedUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<ProcedimentoCreateWithoutClinicaInput, ProcedimentoUncheckedCreateWithoutClinicaInput> | ProcedimentoCreateWithoutClinicaInput[] | ProcedimentoUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ProcedimentoCreateOrConnectWithoutClinicaInput | ProcedimentoCreateOrConnectWithoutClinicaInput[]
    upsert?: ProcedimentoUpsertWithWhereUniqueWithoutClinicaInput | ProcedimentoUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: ProcedimentoCreateManyClinicaInputEnvelope
    set?: ProcedimentoWhereUniqueInput | ProcedimentoWhereUniqueInput[]
    disconnect?: ProcedimentoWhereUniqueInput | ProcedimentoWhereUniqueInput[]
    delete?: ProcedimentoWhereUniqueInput | ProcedimentoWhereUniqueInput[]
    connect?: ProcedimentoWhereUniqueInput | ProcedimentoWhereUniqueInput[]
    update?: ProcedimentoUpdateWithWhereUniqueWithoutClinicaInput | ProcedimentoUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: ProcedimentoUpdateManyWithWhereWithoutClinicaInput | ProcedimentoUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: ProcedimentoScalarWhereInput | ProcedimentoScalarWhereInput[]
  }

  export type AgendaUncheckedUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<AgendaCreateWithoutClinicaInput, AgendaUncheckedCreateWithoutClinicaInput> | AgendaCreateWithoutClinicaInput[] | AgendaUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: AgendaCreateOrConnectWithoutClinicaInput | AgendaCreateOrConnectWithoutClinicaInput[]
    upsert?: AgendaUpsertWithWhereUniqueWithoutClinicaInput | AgendaUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: AgendaCreateManyClinicaInputEnvelope
    set?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    disconnect?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    delete?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    connect?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    update?: AgendaUpdateWithWhereUniqueWithoutClinicaInput | AgendaUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: AgendaUpdateManyWithWhereWithoutClinicaInput | AgendaUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: AgendaScalarWhereInput | AgendaScalarWhereInput[]
  }

  export type AvaliacaoUncheckedUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutClinicaInput, AvaliacaoUncheckedCreateWithoutClinicaInput> | AvaliacaoCreateWithoutClinicaInput[] | AvaliacaoUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutClinicaInput | AvaliacaoCreateOrConnectWithoutClinicaInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutClinicaInput | AvaliacaoUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: AvaliacaoCreateManyClinicaInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutClinicaInput | AvaliacaoUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutClinicaInput | AvaliacaoUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type ControleOperacionalUncheckedUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<ControleOperacionalCreateWithoutClinicaInput, ControleOperacionalUncheckedCreateWithoutClinicaInput> | ControleOperacionalCreateWithoutClinicaInput[] | ControleOperacionalUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ControleOperacionalCreateOrConnectWithoutClinicaInput | ControleOperacionalCreateOrConnectWithoutClinicaInput[]
    upsert?: ControleOperacionalUpsertWithWhereUniqueWithoutClinicaInput | ControleOperacionalUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: ControleOperacionalCreateManyClinicaInputEnvelope
    set?: ControleOperacionalWhereUniqueInput | ControleOperacionalWhereUniqueInput[]
    disconnect?: ControleOperacionalWhereUniqueInput | ControleOperacionalWhereUniqueInput[]
    delete?: ControleOperacionalWhereUniqueInput | ControleOperacionalWhereUniqueInput[]
    connect?: ControleOperacionalWhereUniqueInput | ControleOperacionalWhereUniqueInput[]
    update?: ControleOperacionalUpdateWithWhereUniqueWithoutClinicaInput | ControleOperacionalUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: ControleOperacionalUpdateManyWithWhereWithoutClinicaInput | ControleOperacionalUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: ControleOperacionalScalarWhereInput | ControleOperacionalScalarWhereInput[]
  }

  export type InteracaoRoboUncheckedUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<InteracaoRoboCreateWithoutClinicaInput, InteracaoRoboUncheckedCreateWithoutClinicaInput> | InteracaoRoboCreateWithoutClinicaInput[] | InteracaoRoboUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: InteracaoRoboCreateOrConnectWithoutClinicaInput | InteracaoRoboCreateOrConnectWithoutClinicaInput[]
    upsert?: InteracaoRoboUpsertWithWhereUniqueWithoutClinicaInput | InteracaoRoboUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: InteracaoRoboCreateManyClinicaInputEnvelope
    set?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    disconnect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    delete?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    connect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    update?: InteracaoRoboUpdateWithWhereUniqueWithoutClinicaInput | InteracaoRoboUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: InteracaoRoboUpdateManyWithWhereWithoutClinicaInput | InteracaoRoboUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: InteracaoRoboScalarWhereInput | InteracaoRoboScalarWhereInput[]
  }

  export type ConvenioUncheckedUpdateManyWithoutClinicaNestedInput = {
    create?: XOR<ConvenioCreateWithoutClinicaInput, ConvenioUncheckedCreateWithoutClinicaInput> | ConvenioCreateWithoutClinicaInput[] | ConvenioUncheckedCreateWithoutClinicaInput[]
    connectOrCreate?: ConvenioCreateOrConnectWithoutClinicaInput | ConvenioCreateOrConnectWithoutClinicaInput[]
    upsert?: ConvenioUpsertWithWhereUniqueWithoutClinicaInput | ConvenioUpsertWithWhereUniqueWithoutClinicaInput[]
    createMany?: ConvenioCreateManyClinicaInputEnvelope
    set?: ConvenioWhereUniqueInput | ConvenioWhereUniqueInput[]
    disconnect?: ConvenioWhereUniqueInput | ConvenioWhereUniqueInput[]
    delete?: ConvenioWhereUniqueInput | ConvenioWhereUniqueInput[]
    connect?: ConvenioWhereUniqueInput | ConvenioWhereUniqueInput[]
    update?: ConvenioUpdateWithWhereUniqueWithoutClinicaInput | ConvenioUpdateWithWhereUniqueWithoutClinicaInput[]
    updateMany?: ConvenioUpdateManyWithWhereWithoutClinicaInput | ConvenioUpdateManyWithWhereWithoutClinicaInput[]
    deleteMany?: ConvenioScalarWhereInput | ConvenioScalarWhereInput[]
  }

  export type ClinicaCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<ClinicaCreateWithoutUsuariosInput, ClinicaUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutUsuariosInput
    connect?: ClinicaWhereUniqueInput
  }

  export type ProfissionalDaSaudeCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<ProfissionalDaSaudeCreateWithoutUsuarioInput, ProfissionalDaSaudeUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ProfissionalDaSaudeCreateOrConnectWithoutUsuarioInput
    connect?: ProfissionalDaSaudeWhereUniqueInput
  }

  export type ProfissionalDaSaudeUncheckedCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<ProfissionalDaSaudeCreateWithoutUsuarioInput, ProfissionalDaSaudeUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ProfissionalDaSaudeCreateOrConnectWithoutUsuarioInput
    connect?: ProfissionalDaSaudeWhereUniqueInput
  }

  export type ClinicaUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<ClinicaCreateWithoutUsuariosInput, ClinicaUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutUsuariosInput
    upsert?: ClinicaUpsertWithoutUsuariosInput
    connect?: ClinicaWhereUniqueInput
    update?: XOR<XOR<ClinicaUpdateToOneWithWhereWithoutUsuariosInput, ClinicaUpdateWithoutUsuariosInput>, ClinicaUncheckedUpdateWithoutUsuariosInput>
  }

  export type ProfissionalDaSaudeUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<ProfissionalDaSaudeCreateWithoutUsuarioInput, ProfissionalDaSaudeUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ProfissionalDaSaudeCreateOrConnectWithoutUsuarioInput
    upsert?: ProfissionalDaSaudeUpsertWithoutUsuarioInput
    disconnect?: ProfissionalDaSaudeWhereInput | boolean
    delete?: ProfissionalDaSaudeWhereInput | boolean
    connect?: ProfissionalDaSaudeWhereUniqueInput
    update?: XOR<XOR<ProfissionalDaSaudeUpdateToOneWithWhereWithoutUsuarioInput, ProfissionalDaSaudeUpdateWithoutUsuarioInput>, ProfissionalDaSaudeUncheckedUpdateWithoutUsuarioInput>
  }

  export type ProfissionalDaSaudeUncheckedUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<ProfissionalDaSaudeCreateWithoutUsuarioInput, ProfissionalDaSaudeUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ProfissionalDaSaudeCreateOrConnectWithoutUsuarioInput
    upsert?: ProfissionalDaSaudeUpsertWithoutUsuarioInput
    disconnect?: ProfissionalDaSaudeWhereInput | boolean
    delete?: ProfissionalDaSaudeWhereInput | boolean
    connect?: ProfissionalDaSaudeWhereUniqueInput
    update?: XOR<XOR<ProfissionalDaSaudeUpdateToOneWithWhereWithoutUsuarioInput, ProfissionalDaSaudeUpdateWithoutUsuarioInput>, ProfissionalDaSaudeUncheckedUpdateWithoutUsuarioInput>
  }

  export type ClinicaCreateNestedOneWithoutPacientesInput = {
    create?: XOR<ClinicaCreateWithoutPacientesInput, ClinicaUncheckedCreateWithoutPacientesInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutPacientesInput
    connect?: ClinicaWhereUniqueInput
  }

  export type ConsultaCreateNestedManyWithoutPacienteInput = {
    create?: XOR<ConsultaCreateWithoutPacienteInput, ConsultaUncheckedCreateWithoutPacienteInput> | ConsultaCreateWithoutPacienteInput[] | ConsultaUncheckedCreateWithoutPacienteInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutPacienteInput | ConsultaCreateOrConnectWithoutPacienteInput[]
    createMany?: ConsultaCreateManyPacienteInputEnvelope
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
  }

  export type InteracaoRoboCreateNestedManyWithoutPacienteInput = {
    create?: XOR<InteracaoRoboCreateWithoutPacienteInput, InteracaoRoboUncheckedCreateWithoutPacienteInput> | InteracaoRoboCreateWithoutPacienteInput[] | InteracaoRoboUncheckedCreateWithoutPacienteInput[]
    connectOrCreate?: InteracaoRoboCreateOrConnectWithoutPacienteInput | InteracaoRoboCreateOrConnectWithoutPacienteInput[]
    createMany?: InteracaoRoboCreateManyPacienteInputEnvelope
    connect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
  }

  export type ConsultaUncheckedCreateNestedManyWithoutPacienteInput = {
    create?: XOR<ConsultaCreateWithoutPacienteInput, ConsultaUncheckedCreateWithoutPacienteInput> | ConsultaCreateWithoutPacienteInput[] | ConsultaUncheckedCreateWithoutPacienteInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutPacienteInput | ConsultaCreateOrConnectWithoutPacienteInput[]
    createMany?: ConsultaCreateManyPacienteInputEnvelope
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
  }

  export type InteracaoRoboUncheckedCreateNestedManyWithoutPacienteInput = {
    create?: XOR<InteracaoRoboCreateWithoutPacienteInput, InteracaoRoboUncheckedCreateWithoutPacienteInput> | InteracaoRoboCreateWithoutPacienteInput[] | InteracaoRoboUncheckedCreateWithoutPacienteInput[]
    connectOrCreate?: InteracaoRoboCreateOrConnectWithoutPacienteInput | InteracaoRoboCreateOrConnectWithoutPacienteInput[]
    createMany?: InteracaoRoboCreateManyPacienteInputEnvelope
    connect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
  }

  export type ClinicaUpdateOneRequiredWithoutPacientesNestedInput = {
    create?: XOR<ClinicaCreateWithoutPacientesInput, ClinicaUncheckedCreateWithoutPacientesInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutPacientesInput
    upsert?: ClinicaUpsertWithoutPacientesInput
    connect?: ClinicaWhereUniqueInput
    update?: XOR<XOR<ClinicaUpdateToOneWithWhereWithoutPacientesInput, ClinicaUpdateWithoutPacientesInput>, ClinicaUncheckedUpdateWithoutPacientesInput>
  }

  export type ConsultaUpdateManyWithoutPacienteNestedInput = {
    create?: XOR<ConsultaCreateWithoutPacienteInput, ConsultaUncheckedCreateWithoutPacienteInput> | ConsultaCreateWithoutPacienteInput[] | ConsultaUncheckedCreateWithoutPacienteInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutPacienteInput | ConsultaCreateOrConnectWithoutPacienteInput[]
    upsert?: ConsultaUpsertWithWhereUniqueWithoutPacienteInput | ConsultaUpsertWithWhereUniqueWithoutPacienteInput[]
    createMany?: ConsultaCreateManyPacienteInputEnvelope
    set?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    disconnect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    delete?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    update?: ConsultaUpdateWithWhereUniqueWithoutPacienteInput | ConsultaUpdateWithWhereUniqueWithoutPacienteInput[]
    updateMany?: ConsultaUpdateManyWithWhereWithoutPacienteInput | ConsultaUpdateManyWithWhereWithoutPacienteInput[]
    deleteMany?: ConsultaScalarWhereInput | ConsultaScalarWhereInput[]
  }

  export type InteracaoRoboUpdateManyWithoutPacienteNestedInput = {
    create?: XOR<InteracaoRoboCreateWithoutPacienteInput, InteracaoRoboUncheckedCreateWithoutPacienteInput> | InteracaoRoboCreateWithoutPacienteInput[] | InteracaoRoboUncheckedCreateWithoutPacienteInput[]
    connectOrCreate?: InteracaoRoboCreateOrConnectWithoutPacienteInput | InteracaoRoboCreateOrConnectWithoutPacienteInput[]
    upsert?: InteracaoRoboUpsertWithWhereUniqueWithoutPacienteInput | InteracaoRoboUpsertWithWhereUniqueWithoutPacienteInput[]
    createMany?: InteracaoRoboCreateManyPacienteInputEnvelope
    set?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    disconnect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    delete?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    connect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    update?: InteracaoRoboUpdateWithWhereUniqueWithoutPacienteInput | InteracaoRoboUpdateWithWhereUniqueWithoutPacienteInput[]
    updateMany?: InteracaoRoboUpdateManyWithWhereWithoutPacienteInput | InteracaoRoboUpdateManyWithWhereWithoutPacienteInput[]
    deleteMany?: InteracaoRoboScalarWhereInput | InteracaoRoboScalarWhereInput[]
  }

  export type ConsultaUncheckedUpdateManyWithoutPacienteNestedInput = {
    create?: XOR<ConsultaCreateWithoutPacienteInput, ConsultaUncheckedCreateWithoutPacienteInput> | ConsultaCreateWithoutPacienteInput[] | ConsultaUncheckedCreateWithoutPacienteInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutPacienteInput | ConsultaCreateOrConnectWithoutPacienteInput[]
    upsert?: ConsultaUpsertWithWhereUniqueWithoutPacienteInput | ConsultaUpsertWithWhereUniqueWithoutPacienteInput[]
    createMany?: ConsultaCreateManyPacienteInputEnvelope
    set?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    disconnect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    delete?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    update?: ConsultaUpdateWithWhereUniqueWithoutPacienteInput | ConsultaUpdateWithWhereUniqueWithoutPacienteInput[]
    updateMany?: ConsultaUpdateManyWithWhereWithoutPacienteInput | ConsultaUpdateManyWithWhereWithoutPacienteInput[]
    deleteMany?: ConsultaScalarWhereInput | ConsultaScalarWhereInput[]
  }

  export type InteracaoRoboUncheckedUpdateManyWithoutPacienteNestedInput = {
    create?: XOR<InteracaoRoboCreateWithoutPacienteInput, InteracaoRoboUncheckedCreateWithoutPacienteInput> | InteracaoRoboCreateWithoutPacienteInput[] | InteracaoRoboUncheckedCreateWithoutPacienteInput[]
    connectOrCreate?: InteracaoRoboCreateOrConnectWithoutPacienteInput | InteracaoRoboCreateOrConnectWithoutPacienteInput[]
    upsert?: InteracaoRoboUpsertWithWhereUniqueWithoutPacienteInput | InteracaoRoboUpsertWithWhereUniqueWithoutPacienteInput[]
    createMany?: InteracaoRoboCreateManyPacienteInputEnvelope
    set?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    disconnect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    delete?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    connect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    update?: InteracaoRoboUpdateWithWhereUniqueWithoutPacienteInput | InteracaoRoboUpdateWithWhereUniqueWithoutPacienteInput[]
    updateMany?: InteracaoRoboUpdateManyWithWhereWithoutPacienteInput | InteracaoRoboUpdateManyWithWhereWithoutPacienteInput[]
    deleteMany?: InteracaoRoboScalarWhereInput | InteracaoRoboScalarWhereInput[]
  }

  export type ClinicaCreateNestedOneWithoutProfissionaisInput = {
    create?: XOR<ClinicaCreateWithoutProfissionaisInput, ClinicaUncheckedCreateWithoutProfissionaisInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutProfissionaisInput
    connect?: ClinicaWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutProfissionalInput = {
    create?: XOR<UsuarioCreateWithoutProfissionalInput, UsuarioUncheckedCreateWithoutProfissionalInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutProfissionalInput
    connect?: UsuarioWhereUniqueInput
  }

  export type ConsultaCreateNestedManyWithoutProfissionalInput = {
    create?: XOR<ConsultaCreateWithoutProfissionalInput, ConsultaUncheckedCreateWithoutProfissionalInput> | ConsultaCreateWithoutProfissionalInput[] | ConsultaUncheckedCreateWithoutProfissionalInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutProfissionalInput | ConsultaCreateOrConnectWithoutProfissionalInput[]
    createMany?: ConsultaCreateManyProfissionalInputEnvelope
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
  }

  export type AgendaCreateNestedManyWithoutProfissionalInput = {
    create?: XOR<AgendaCreateWithoutProfissionalInput, AgendaUncheckedCreateWithoutProfissionalInput> | AgendaCreateWithoutProfissionalInput[] | AgendaUncheckedCreateWithoutProfissionalInput[]
    connectOrCreate?: AgendaCreateOrConnectWithoutProfissionalInput | AgendaCreateOrConnectWithoutProfissionalInput[]
    createMany?: AgendaCreateManyProfissionalInputEnvelope
    connect?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
  }

  export type ConsultaUncheckedCreateNestedManyWithoutProfissionalInput = {
    create?: XOR<ConsultaCreateWithoutProfissionalInput, ConsultaUncheckedCreateWithoutProfissionalInput> | ConsultaCreateWithoutProfissionalInput[] | ConsultaUncheckedCreateWithoutProfissionalInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutProfissionalInput | ConsultaCreateOrConnectWithoutProfissionalInput[]
    createMany?: ConsultaCreateManyProfissionalInputEnvelope
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
  }

  export type AgendaUncheckedCreateNestedManyWithoutProfissionalInput = {
    create?: XOR<AgendaCreateWithoutProfissionalInput, AgendaUncheckedCreateWithoutProfissionalInput> | AgendaCreateWithoutProfissionalInput[] | AgendaUncheckedCreateWithoutProfissionalInput[]
    connectOrCreate?: AgendaCreateOrConnectWithoutProfissionalInput | AgendaCreateOrConnectWithoutProfissionalInput[]
    createMany?: AgendaCreateManyProfissionalInputEnvelope
    connect?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
  }

  export type ClinicaUpdateOneRequiredWithoutProfissionaisNestedInput = {
    create?: XOR<ClinicaCreateWithoutProfissionaisInput, ClinicaUncheckedCreateWithoutProfissionaisInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutProfissionaisInput
    upsert?: ClinicaUpsertWithoutProfissionaisInput
    connect?: ClinicaWhereUniqueInput
    update?: XOR<XOR<ClinicaUpdateToOneWithWhereWithoutProfissionaisInput, ClinicaUpdateWithoutProfissionaisInput>, ClinicaUncheckedUpdateWithoutProfissionaisInput>
  }

  export type UsuarioUpdateOneWithoutProfissionalNestedInput = {
    create?: XOR<UsuarioCreateWithoutProfissionalInput, UsuarioUncheckedCreateWithoutProfissionalInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutProfissionalInput
    upsert?: UsuarioUpsertWithoutProfissionalInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutProfissionalInput, UsuarioUpdateWithoutProfissionalInput>, UsuarioUncheckedUpdateWithoutProfissionalInput>
  }

  export type ConsultaUpdateManyWithoutProfissionalNestedInput = {
    create?: XOR<ConsultaCreateWithoutProfissionalInput, ConsultaUncheckedCreateWithoutProfissionalInput> | ConsultaCreateWithoutProfissionalInput[] | ConsultaUncheckedCreateWithoutProfissionalInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutProfissionalInput | ConsultaCreateOrConnectWithoutProfissionalInput[]
    upsert?: ConsultaUpsertWithWhereUniqueWithoutProfissionalInput | ConsultaUpsertWithWhereUniqueWithoutProfissionalInput[]
    createMany?: ConsultaCreateManyProfissionalInputEnvelope
    set?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    disconnect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    delete?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    update?: ConsultaUpdateWithWhereUniqueWithoutProfissionalInput | ConsultaUpdateWithWhereUniqueWithoutProfissionalInput[]
    updateMany?: ConsultaUpdateManyWithWhereWithoutProfissionalInput | ConsultaUpdateManyWithWhereWithoutProfissionalInput[]
    deleteMany?: ConsultaScalarWhereInput | ConsultaScalarWhereInput[]
  }

  export type AgendaUpdateManyWithoutProfissionalNestedInput = {
    create?: XOR<AgendaCreateWithoutProfissionalInput, AgendaUncheckedCreateWithoutProfissionalInput> | AgendaCreateWithoutProfissionalInput[] | AgendaUncheckedCreateWithoutProfissionalInput[]
    connectOrCreate?: AgendaCreateOrConnectWithoutProfissionalInput | AgendaCreateOrConnectWithoutProfissionalInput[]
    upsert?: AgendaUpsertWithWhereUniqueWithoutProfissionalInput | AgendaUpsertWithWhereUniqueWithoutProfissionalInput[]
    createMany?: AgendaCreateManyProfissionalInputEnvelope
    set?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    disconnect?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    delete?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    connect?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    update?: AgendaUpdateWithWhereUniqueWithoutProfissionalInput | AgendaUpdateWithWhereUniqueWithoutProfissionalInput[]
    updateMany?: AgendaUpdateManyWithWhereWithoutProfissionalInput | AgendaUpdateManyWithWhereWithoutProfissionalInput[]
    deleteMany?: AgendaScalarWhereInput | AgendaScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ConsultaUncheckedUpdateManyWithoutProfissionalNestedInput = {
    create?: XOR<ConsultaCreateWithoutProfissionalInput, ConsultaUncheckedCreateWithoutProfissionalInput> | ConsultaCreateWithoutProfissionalInput[] | ConsultaUncheckedCreateWithoutProfissionalInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutProfissionalInput | ConsultaCreateOrConnectWithoutProfissionalInput[]
    upsert?: ConsultaUpsertWithWhereUniqueWithoutProfissionalInput | ConsultaUpsertWithWhereUniqueWithoutProfissionalInput[]
    createMany?: ConsultaCreateManyProfissionalInputEnvelope
    set?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    disconnect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    delete?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    update?: ConsultaUpdateWithWhereUniqueWithoutProfissionalInput | ConsultaUpdateWithWhereUniqueWithoutProfissionalInput[]
    updateMany?: ConsultaUpdateManyWithWhereWithoutProfissionalInput | ConsultaUpdateManyWithWhereWithoutProfissionalInput[]
    deleteMany?: ConsultaScalarWhereInput | ConsultaScalarWhereInput[]
  }

  export type AgendaUncheckedUpdateManyWithoutProfissionalNestedInput = {
    create?: XOR<AgendaCreateWithoutProfissionalInput, AgendaUncheckedCreateWithoutProfissionalInput> | AgendaCreateWithoutProfissionalInput[] | AgendaUncheckedCreateWithoutProfissionalInput[]
    connectOrCreate?: AgendaCreateOrConnectWithoutProfissionalInput | AgendaCreateOrConnectWithoutProfissionalInput[]
    upsert?: AgendaUpsertWithWhereUniqueWithoutProfissionalInput | AgendaUpsertWithWhereUniqueWithoutProfissionalInput[]
    createMany?: AgendaCreateManyProfissionalInputEnvelope
    set?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    disconnect?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    delete?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    connect?: AgendaWhereUniqueInput | AgendaWhereUniqueInput[]
    update?: AgendaUpdateWithWhereUniqueWithoutProfissionalInput | AgendaUpdateWithWhereUniqueWithoutProfissionalInput[]
    updateMany?: AgendaUpdateManyWithWhereWithoutProfissionalInput | AgendaUpdateManyWithWhereWithoutProfissionalInput[]
    deleteMany?: AgendaScalarWhereInput | AgendaScalarWhereInput[]
  }

  export type ClinicaCreateNestedOneWithoutConsultasInput = {
    create?: XOR<ClinicaCreateWithoutConsultasInput, ClinicaUncheckedCreateWithoutConsultasInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutConsultasInput
    connect?: ClinicaWhereUniqueInput
  }

  export type PacienteCreateNestedOneWithoutConsultasInput = {
    create?: XOR<PacienteCreateWithoutConsultasInput, PacienteUncheckedCreateWithoutConsultasInput>
    connectOrCreate?: PacienteCreateOrConnectWithoutConsultasInput
    connect?: PacienteWhereUniqueInput
  }

  export type ProfissionalDaSaudeCreateNestedOneWithoutConsultasInput = {
    create?: XOR<ProfissionalDaSaudeCreateWithoutConsultasInput, ProfissionalDaSaudeUncheckedCreateWithoutConsultasInput>
    connectOrCreate?: ProfissionalDaSaudeCreateOrConnectWithoutConsultasInput
    connect?: ProfissionalDaSaudeWhereUniqueInput
  }

  export type ConsultaProcedimentoCreateNestedManyWithoutConsultaInput = {
    create?: XOR<ConsultaProcedimentoCreateWithoutConsultaInput, ConsultaProcedimentoUncheckedCreateWithoutConsultaInput> | ConsultaProcedimentoCreateWithoutConsultaInput[] | ConsultaProcedimentoUncheckedCreateWithoutConsultaInput[]
    connectOrCreate?: ConsultaProcedimentoCreateOrConnectWithoutConsultaInput | ConsultaProcedimentoCreateOrConnectWithoutConsultaInput[]
    createMany?: ConsultaProcedimentoCreateManyConsultaInputEnvelope
    connect?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
  }

  export type AvaliacaoCreateNestedManyWithoutConsultaInput = {
    create?: XOR<AvaliacaoCreateWithoutConsultaInput, AvaliacaoUncheckedCreateWithoutConsultaInput> | AvaliacaoCreateWithoutConsultaInput[] | AvaliacaoUncheckedCreateWithoutConsultaInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutConsultaInput | AvaliacaoCreateOrConnectWithoutConsultaInput[]
    createMany?: AvaliacaoCreateManyConsultaInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type ConvenioCreateNestedOneWithoutConsultasInput = {
    create?: XOR<ConvenioCreateWithoutConsultasInput, ConvenioUncheckedCreateWithoutConsultasInput>
    connectOrCreate?: ConvenioCreateOrConnectWithoutConsultasInput
    connect?: ConvenioWhereUniqueInput
  }

  export type ConsultaProcedimentoUncheckedCreateNestedManyWithoutConsultaInput = {
    create?: XOR<ConsultaProcedimentoCreateWithoutConsultaInput, ConsultaProcedimentoUncheckedCreateWithoutConsultaInput> | ConsultaProcedimentoCreateWithoutConsultaInput[] | ConsultaProcedimentoUncheckedCreateWithoutConsultaInput[]
    connectOrCreate?: ConsultaProcedimentoCreateOrConnectWithoutConsultaInput | ConsultaProcedimentoCreateOrConnectWithoutConsultaInput[]
    createMany?: ConsultaProcedimentoCreateManyConsultaInputEnvelope
    connect?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
  }

  export type AvaliacaoUncheckedCreateNestedManyWithoutConsultaInput = {
    create?: XOR<AvaliacaoCreateWithoutConsultaInput, AvaliacaoUncheckedCreateWithoutConsultaInput> | AvaliacaoCreateWithoutConsultaInput[] | AvaliacaoUncheckedCreateWithoutConsultaInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutConsultaInput | AvaliacaoCreateOrConnectWithoutConsultaInput[]
    createMany?: AvaliacaoCreateManyConsultaInputEnvelope
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ClinicaUpdateOneRequiredWithoutConsultasNestedInput = {
    create?: XOR<ClinicaCreateWithoutConsultasInput, ClinicaUncheckedCreateWithoutConsultasInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutConsultasInput
    upsert?: ClinicaUpsertWithoutConsultasInput
    connect?: ClinicaWhereUniqueInput
    update?: XOR<XOR<ClinicaUpdateToOneWithWhereWithoutConsultasInput, ClinicaUpdateWithoutConsultasInput>, ClinicaUncheckedUpdateWithoutConsultasInput>
  }

  export type PacienteUpdateOneRequiredWithoutConsultasNestedInput = {
    create?: XOR<PacienteCreateWithoutConsultasInput, PacienteUncheckedCreateWithoutConsultasInput>
    connectOrCreate?: PacienteCreateOrConnectWithoutConsultasInput
    upsert?: PacienteUpsertWithoutConsultasInput
    connect?: PacienteWhereUniqueInput
    update?: XOR<XOR<PacienteUpdateToOneWithWhereWithoutConsultasInput, PacienteUpdateWithoutConsultasInput>, PacienteUncheckedUpdateWithoutConsultasInput>
  }

  export type ProfissionalDaSaudeUpdateOneRequiredWithoutConsultasNestedInput = {
    create?: XOR<ProfissionalDaSaudeCreateWithoutConsultasInput, ProfissionalDaSaudeUncheckedCreateWithoutConsultasInput>
    connectOrCreate?: ProfissionalDaSaudeCreateOrConnectWithoutConsultasInput
    upsert?: ProfissionalDaSaudeUpsertWithoutConsultasInput
    connect?: ProfissionalDaSaudeWhereUniqueInput
    update?: XOR<XOR<ProfissionalDaSaudeUpdateToOneWithWhereWithoutConsultasInput, ProfissionalDaSaudeUpdateWithoutConsultasInput>, ProfissionalDaSaudeUncheckedUpdateWithoutConsultasInput>
  }

  export type ConsultaProcedimentoUpdateManyWithoutConsultaNestedInput = {
    create?: XOR<ConsultaProcedimentoCreateWithoutConsultaInput, ConsultaProcedimentoUncheckedCreateWithoutConsultaInput> | ConsultaProcedimentoCreateWithoutConsultaInput[] | ConsultaProcedimentoUncheckedCreateWithoutConsultaInput[]
    connectOrCreate?: ConsultaProcedimentoCreateOrConnectWithoutConsultaInput | ConsultaProcedimentoCreateOrConnectWithoutConsultaInput[]
    upsert?: ConsultaProcedimentoUpsertWithWhereUniqueWithoutConsultaInput | ConsultaProcedimentoUpsertWithWhereUniqueWithoutConsultaInput[]
    createMany?: ConsultaProcedimentoCreateManyConsultaInputEnvelope
    set?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    disconnect?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    delete?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    connect?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    update?: ConsultaProcedimentoUpdateWithWhereUniqueWithoutConsultaInput | ConsultaProcedimentoUpdateWithWhereUniqueWithoutConsultaInput[]
    updateMany?: ConsultaProcedimentoUpdateManyWithWhereWithoutConsultaInput | ConsultaProcedimentoUpdateManyWithWhereWithoutConsultaInput[]
    deleteMany?: ConsultaProcedimentoScalarWhereInput | ConsultaProcedimentoScalarWhereInput[]
  }

  export type AvaliacaoUpdateManyWithoutConsultaNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutConsultaInput, AvaliacaoUncheckedCreateWithoutConsultaInput> | AvaliacaoCreateWithoutConsultaInput[] | AvaliacaoUncheckedCreateWithoutConsultaInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutConsultaInput | AvaliacaoCreateOrConnectWithoutConsultaInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutConsultaInput | AvaliacaoUpsertWithWhereUniqueWithoutConsultaInput[]
    createMany?: AvaliacaoCreateManyConsultaInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutConsultaInput | AvaliacaoUpdateWithWhereUniqueWithoutConsultaInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutConsultaInput | AvaliacaoUpdateManyWithWhereWithoutConsultaInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type ConvenioUpdateOneWithoutConsultasNestedInput = {
    create?: XOR<ConvenioCreateWithoutConsultasInput, ConvenioUncheckedCreateWithoutConsultasInput>
    connectOrCreate?: ConvenioCreateOrConnectWithoutConsultasInput
    upsert?: ConvenioUpsertWithoutConsultasInput
    disconnect?: ConvenioWhereInput | boolean
    delete?: ConvenioWhereInput | boolean
    connect?: ConvenioWhereUniqueInput
    update?: XOR<XOR<ConvenioUpdateToOneWithWhereWithoutConsultasInput, ConvenioUpdateWithoutConsultasInput>, ConvenioUncheckedUpdateWithoutConsultasInput>
  }

  export type ConsultaProcedimentoUncheckedUpdateManyWithoutConsultaNestedInput = {
    create?: XOR<ConsultaProcedimentoCreateWithoutConsultaInput, ConsultaProcedimentoUncheckedCreateWithoutConsultaInput> | ConsultaProcedimentoCreateWithoutConsultaInput[] | ConsultaProcedimentoUncheckedCreateWithoutConsultaInput[]
    connectOrCreate?: ConsultaProcedimentoCreateOrConnectWithoutConsultaInput | ConsultaProcedimentoCreateOrConnectWithoutConsultaInput[]
    upsert?: ConsultaProcedimentoUpsertWithWhereUniqueWithoutConsultaInput | ConsultaProcedimentoUpsertWithWhereUniqueWithoutConsultaInput[]
    createMany?: ConsultaProcedimentoCreateManyConsultaInputEnvelope
    set?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    disconnect?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    delete?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    connect?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    update?: ConsultaProcedimentoUpdateWithWhereUniqueWithoutConsultaInput | ConsultaProcedimentoUpdateWithWhereUniqueWithoutConsultaInput[]
    updateMany?: ConsultaProcedimentoUpdateManyWithWhereWithoutConsultaInput | ConsultaProcedimentoUpdateManyWithWhereWithoutConsultaInput[]
    deleteMany?: ConsultaProcedimentoScalarWhereInput | ConsultaProcedimentoScalarWhereInput[]
  }

  export type AvaliacaoUncheckedUpdateManyWithoutConsultaNestedInput = {
    create?: XOR<AvaliacaoCreateWithoutConsultaInput, AvaliacaoUncheckedCreateWithoutConsultaInput> | AvaliacaoCreateWithoutConsultaInput[] | AvaliacaoUncheckedCreateWithoutConsultaInput[]
    connectOrCreate?: AvaliacaoCreateOrConnectWithoutConsultaInput | AvaliacaoCreateOrConnectWithoutConsultaInput[]
    upsert?: AvaliacaoUpsertWithWhereUniqueWithoutConsultaInput | AvaliacaoUpsertWithWhereUniqueWithoutConsultaInput[]
    createMany?: AvaliacaoCreateManyConsultaInputEnvelope
    set?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    disconnect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    delete?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    connect?: AvaliacaoWhereUniqueInput | AvaliacaoWhereUniqueInput[]
    update?: AvaliacaoUpdateWithWhereUniqueWithoutConsultaInput | AvaliacaoUpdateWithWhereUniqueWithoutConsultaInput[]
    updateMany?: AvaliacaoUpdateManyWithWhereWithoutConsultaInput | AvaliacaoUpdateManyWithWhereWithoutConsultaInput[]
    deleteMany?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
  }

  export type ClinicaCreateNestedOneWithoutAvaliacoesInput = {
    create?: XOR<ClinicaCreateWithoutAvaliacoesInput, ClinicaUncheckedCreateWithoutAvaliacoesInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutAvaliacoesInput
    connect?: ClinicaWhereUniqueInput
  }

  export type ConsultaCreateNestedOneWithoutAvaliacoesInput = {
    create?: XOR<ConsultaCreateWithoutAvaliacoesInput, ConsultaUncheckedCreateWithoutAvaliacoesInput>
    connectOrCreate?: ConsultaCreateOrConnectWithoutAvaliacoesInput
    connect?: ConsultaWhereUniqueInput
  }

  export type ClinicaUpdateOneRequiredWithoutAvaliacoesNestedInput = {
    create?: XOR<ClinicaCreateWithoutAvaliacoesInput, ClinicaUncheckedCreateWithoutAvaliacoesInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutAvaliacoesInput
    upsert?: ClinicaUpsertWithoutAvaliacoesInput
    connect?: ClinicaWhereUniqueInput
    update?: XOR<XOR<ClinicaUpdateToOneWithWhereWithoutAvaliacoesInput, ClinicaUpdateWithoutAvaliacoesInput>, ClinicaUncheckedUpdateWithoutAvaliacoesInput>
  }

  export type ConsultaUpdateOneRequiredWithoutAvaliacoesNestedInput = {
    create?: XOR<ConsultaCreateWithoutAvaliacoesInput, ConsultaUncheckedCreateWithoutAvaliacoesInput>
    connectOrCreate?: ConsultaCreateOrConnectWithoutAvaliacoesInput
    upsert?: ConsultaUpsertWithoutAvaliacoesInput
    connect?: ConsultaWhereUniqueInput
    update?: XOR<XOR<ConsultaUpdateToOneWithWhereWithoutAvaliacoesInput, ConsultaUpdateWithoutAvaliacoesInput>, ConsultaUncheckedUpdateWithoutAvaliacoesInput>
  }

  export type ClinicaCreateNestedOneWithoutProcedimentosInput = {
    create?: XOR<ClinicaCreateWithoutProcedimentosInput, ClinicaUncheckedCreateWithoutProcedimentosInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutProcedimentosInput
    connect?: ClinicaWhereUniqueInput
  }

  export type ConsultaProcedimentoCreateNestedManyWithoutProcedimentoInput = {
    create?: XOR<ConsultaProcedimentoCreateWithoutProcedimentoInput, ConsultaProcedimentoUncheckedCreateWithoutProcedimentoInput> | ConsultaProcedimentoCreateWithoutProcedimentoInput[] | ConsultaProcedimentoUncheckedCreateWithoutProcedimentoInput[]
    connectOrCreate?: ConsultaProcedimentoCreateOrConnectWithoutProcedimentoInput | ConsultaProcedimentoCreateOrConnectWithoutProcedimentoInput[]
    createMany?: ConsultaProcedimentoCreateManyProcedimentoInputEnvelope
    connect?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
  }

  export type ConsultaProcedimentoUncheckedCreateNestedManyWithoutProcedimentoInput = {
    create?: XOR<ConsultaProcedimentoCreateWithoutProcedimentoInput, ConsultaProcedimentoUncheckedCreateWithoutProcedimentoInput> | ConsultaProcedimentoCreateWithoutProcedimentoInput[] | ConsultaProcedimentoUncheckedCreateWithoutProcedimentoInput[]
    connectOrCreate?: ConsultaProcedimentoCreateOrConnectWithoutProcedimentoInput | ConsultaProcedimentoCreateOrConnectWithoutProcedimentoInput[]
    createMany?: ConsultaProcedimentoCreateManyProcedimentoInputEnvelope
    connect?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ClinicaUpdateOneRequiredWithoutProcedimentosNestedInput = {
    create?: XOR<ClinicaCreateWithoutProcedimentosInput, ClinicaUncheckedCreateWithoutProcedimentosInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutProcedimentosInput
    upsert?: ClinicaUpsertWithoutProcedimentosInput
    connect?: ClinicaWhereUniqueInput
    update?: XOR<XOR<ClinicaUpdateToOneWithWhereWithoutProcedimentosInput, ClinicaUpdateWithoutProcedimentosInput>, ClinicaUncheckedUpdateWithoutProcedimentosInput>
  }

  export type ConsultaProcedimentoUpdateManyWithoutProcedimentoNestedInput = {
    create?: XOR<ConsultaProcedimentoCreateWithoutProcedimentoInput, ConsultaProcedimentoUncheckedCreateWithoutProcedimentoInput> | ConsultaProcedimentoCreateWithoutProcedimentoInput[] | ConsultaProcedimentoUncheckedCreateWithoutProcedimentoInput[]
    connectOrCreate?: ConsultaProcedimentoCreateOrConnectWithoutProcedimentoInput | ConsultaProcedimentoCreateOrConnectWithoutProcedimentoInput[]
    upsert?: ConsultaProcedimentoUpsertWithWhereUniqueWithoutProcedimentoInput | ConsultaProcedimentoUpsertWithWhereUniqueWithoutProcedimentoInput[]
    createMany?: ConsultaProcedimentoCreateManyProcedimentoInputEnvelope
    set?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    disconnect?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    delete?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    connect?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    update?: ConsultaProcedimentoUpdateWithWhereUniqueWithoutProcedimentoInput | ConsultaProcedimentoUpdateWithWhereUniqueWithoutProcedimentoInput[]
    updateMany?: ConsultaProcedimentoUpdateManyWithWhereWithoutProcedimentoInput | ConsultaProcedimentoUpdateManyWithWhereWithoutProcedimentoInput[]
    deleteMany?: ConsultaProcedimentoScalarWhereInput | ConsultaProcedimentoScalarWhereInput[]
  }

  export type ConsultaProcedimentoUncheckedUpdateManyWithoutProcedimentoNestedInput = {
    create?: XOR<ConsultaProcedimentoCreateWithoutProcedimentoInput, ConsultaProcedimentoUncheckedCreateWithoutProcedimentoInput> | ConsultaProcedimentoCreateWithoutProcedimentoInput[] | ConsultaProcedimentoUncheckedCreateWithoutProcedimentoInput[]
    connectOrCreate?: ConsultaProcedimentoCreateOrConnectWithoutProcedimentoInput | ConsultaProcedimentoCreateOrConnectWithoutProcedimentoInput[]
    upsert?: ConsultaProcedimentoUpsertWithWhereUniqueWithoutProcedimentoInput | ConsultaProcedimentoUpsertWithWhereUniqueWithoutProcedimentoInput[]
    createMany?: ConsultaProcedimentoCreateManyProcedimentoInputEnvelope
    set?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    disconnect?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    delete?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    connect?: ConsultaProcedimentoWhereUniqueInput | ConsultaProcedimentoWhereUniqueInput[]
    update?: ConsultaProcedimentoUpdateWithWhereUniqueWithoutProcedimentoInput | ConsultaProcedimentoUpdateWithWhereUniqueWithoutProcedimentoInput[]
    updateMany?: ConsultaProcedimentoUpdateManyWithWhereWithoutProcedimentoInput | ConsultaProcedimentoUpdateManyWithWhereWithoutProcedimentoInput[]
    deleteMany?: ConsultaProcedimentoScalarWhereInput | ConsultaProcedimentoScalarWhereInput[]
  }

  export type ConsultaCreateNestedOneWithoutProcedimentosInput = {
    create?: XOR<ConsultaCreateWithoutProcedimentosInput, ConsultaUncheckedCreateWithoutProcedimentosInput>
    connectOrCreate?: ConsultaCreateOrConnectWithoutProcedimentosInput
    connect?: ConsultaWhereUniqueInput
  }

  export type ProcedimentoCreateNestedOneWithoutConsultasInput = {
    create?: XOR<ProcedimentoCreateWithoutConsultasInput, ProcedimentoUncheckedCreateWithoutConsultasInput>
    connectOrCreate?: ProcedimentoCreateOrConnectWithoutConsultasInput
    connect?: ProcedimentoWhereUniqueInput
  }

  export type ConsultaUpdateOneRequiredWithoutProcedimentosNestedInput = {
    create?: XOR<ConsultaCreateWithoutProcedimentosInput, ConsultaUncheckedCreateWithoutProcedimentosInput>
    connectOrCreate?: ConsultaCreateOrConnectWithoutProcedimentosInput
    upsert?: ConsultaUpsertWithoutProcedimentosInput
    connect?: ConsultaWhereUniqueInput
    update?: XOR<XOR<ConsultaUpdateToOneWithWhereWithoutProcedimentosInput, ConsultaUpdateWithoutProcedimentosInput>, ConsultaUncheckedUpdateWithoutProcedimentosInput>
  }

  export type ProcedimentoUpdateOneRequiredWithoutConsultasNestedInput = {
    create?: XOR<ProcedimentoCreateWithoutConsultasInput, ProcedimentoUncheckedCreateWithoutConsultasInput>
    connectOrCreate?: ProcedimentoCreateOrConnectWithoutConsultasInput
    upsert?: ProcedimentoUpsertWithoutConsultasInput
    connect?: ProcedimentoWhereUniqueInput
    update?: XOR<XOR<ProcedimentoUpdateToOneWithWhereWithoutConsultasInput, ProcedimentoUpdateWithoutConsultasInput>, ProcedimentoUncheckedUpdateWithoutConsultasInput>
  }

  export type ClinicaCreateNestedOneWithoutAgendasInput = {
    create?: XOR<ClinicaCreateWithoutAgendasInput, ClinicaUncheckedCreateWithoutAgendasInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutAgendasInput
    connect?: ClinicaWhereUniqueInput
  }

  export type ProfissionalDaSaudeCreateNestedOneWithoutAgendaInput = {
    create?: XOR<ProfissionalDaSaudeCreateWithoutAgendaInput, ProfissionalDaSaudeUncheckedCreateWithoutAgendaInput>
    connectOrCreate?: ProfissionalDaSaudeCreateOrConnectWithoutAgendaInput
    connect?: ProfissionalDaSaudeWhereUniqueInput
  }

  export type ClinicaUpdateOneRequiredWithoutAgendasNestedInput = {
    create?: XOR<ClinicaCreateWithoutAgendasInput, ClinicaUncheckedCreateWithoutAgendasInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutAgendasInput
    upsert?: ClinicaUpsertWithoutAgendasInput
    connect?: ClinicaWhereUniqueInput
    update?: XOR<XOR<ClinicaUpdateToOneWithWhereWithoutAgendasInput, ClinicaUpdateWithoutAgendasInput>, ClinicaUncheckedUpdateWithoutAgendasInput>
  }

  export type ProfissionalDaSaudeUpdateOneRequiredWithoutAgendaNestedInput = {
    create?: XOR<ProfissionalDaSaudeCreateWithoutAgendaInput, ProfissionalDaSaudeUncheckedCreateWithoutAgendaInput>
    connectOrCreate?: ProfissionalDaSaudeCreateOrConnectWithoutAgendaInput
    upsert?: ProfissionalDaSaudeUpsertWithoutAgendaInput
    connect?: ProfissionalDaSaudeWhereUniqueInput
    update?: XOR<XOR<ProfissionalDaSaudeUpdateToOneWithWhereWithoutAgendaInput, ProfissionalDaSaudeUpdateWithoutAgendaInput>, ProfissionalDaSaudeUncheckedUpdateWithoutAgendaInput>
  }

  export type ClinicaCreateNestedOneWithoutControle_operacionalInput = {
    create?: XOR<ClinicaCreateWithoutControle_operacionalInput, ClinicaUncheckedCreateWithoutControle_operacionalInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutControle_operacionalInput
    connect?: ClinicaWhereUniqueInput
  }

  export type ClinicaUpdateOneRequiredWithoutControle_operacionalNestedInput = {
    create?: XOR<ClinicaCreateWithoutControle_operacionalInput, ClinicaUncheckedCreateWithoutControle_operacionalInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutControle_operacionalInput
    upsert?: ClinicaUpsertWithoutControle_operacionalInput
    connect?: ClinicaWhereUniqueInput
    update?: XOR<XOR<ClinicaUpdateToOneWithWhereWithoutControle_operacionalInput, ClinicaUpdateWithoutControle_operacionalInput>, ClinicaUncheckedUpdateWithoutControle_operacionalInput>
  }

  export type PacienteCreateNestedOneWithoutInteracao_roboInput = {
    create?: XOR<PacienteCreateWithoutInteracao_roboInput, PacienteUncheckedCreateWithoutInteracao_roboInput>
    connectOrCreate?: PacienteCreateOrConnectWithoutInteracao_roboInput
    connect?: PacienteWhereUniqueInput
  }

  export type ClinicaCreateNestedOneWithoutInteracao_roboInput = {
    create?: XOR<ClinicaCreateWithoutInteracao_roboInput, ClinicaUncheckedCreateWithoutInteracao_roboInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutInteracao_roboInput
    connect?: ClinicaWhereUniqueInput
  }

  export type ConvenioCreateNestedOneWithoutInteracoes_roboInput = {
    create?: XOR<ConvenioCreateWithoutInteracoes_roboInput, ConvenioUncheckedCreateWithoutInteracoes_roboInput>
    connectOrCreate?: ConvenioCreateOrConnectWithoutInteracoes_roboInput
    connect?: ConvenioWhereUniqueInput
  }

  export type PacienteUpdateOneRequiredWithoutInteracao_roboNestedInput = {
    create?: XOR<PacienteCreateWithoutInteracao_roboInput, PacienteUncheckedCreateWithoutInteracao_roboInput>
    connectOrCreate?: PacienteCreateOrConnectWithoutInteracao_roboInput
    upsert?: PacienteUpsertWithoutInteracao_roboInput
    connect?: PacienteWhereUniqueInput
    update?: XOR<XOR<PacienteUpdateToOneWithWhereWithoutInteracao_roboInput, PacienteUpdateWithoutInteracao_roboInput>, PacienteUncheckedUpdateWithoutInteracao_roboInput>
  }

  export type ClinicaUpdateOneRequiredWithoutInteracao_roboNestedInput = {
    create?: XOR<ClinicaCreateWithoutInteracao_roboInput, ClinicaUncheckedCreateWithoutInteracao_roboInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutInteracao_roboInput
    upsert?: ClinicaUpsertWithoutInteracao_roboInput
    connect?: ClinicaWhereUniqueInput
    update?: XOR<XOR<ClinicaUpdateToOneWithWhereWithoutInteracao_roboInput, ClinicaUpdateWithoutInteracao_roboInput>, ClinicaUncheckedUpdateWithoutInteracao_roboInput>
  }

  export type ConvenioUpdateOneWithoutInteracoes_roboNestedInput = {
    create?: XOR<ConvenioCreateWithoutInteracoes_roboInput, ConvenioUncheckedCreateWithoutInteracoes_roboInput>
    connectOrCreate?: ConvenioCreateOrConnectWithoutInteracoes_roboInput
    upsert?: ConvenioUpsertWithoutInteracoes_roboInput
    disconnect?: ConvenioWhereInput | boolean
    delete?: ConvenioWhereInput | boolean
    connect?: ConvenioWhereUniqueInput
    update?: XOR<XOR<ConvenioUpdateToOneWithWhereWithoutInteracoes_roboInput, ConvenioUpdateWithoutInteracoes_roboInput>, ConvenioUncheckedUpdateWithoutInteracoes_roboInput>
  }

  export type ClinicaCreateNestedOneWithoutConveniosInput = {
    create?: XOR<ClinicaCreateWithoutConveniosInput, ClinicaUncheckedCreateWithoutConveniosInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutConveniosInput
    connect?: ClinicaWhereUniqueInput
  }

  export type ConsultaCreateNestedManyWithoutConvenioInput = {
    create?: XOR<ConsultaCreateWithoutConvenioInput, ConsultaUncheckedCreateWithoutConvenioInput> | ConsultaCreateWithoutConvenioInput[] | ConsultaUncheckedCreateWithoutConvenioInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutConvenioInput | ConsultaCreateOrConnectWithoutConvenioInput[]
    createMany?: ConsultaCreateManyConvenioInputEnvelope
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
  }

  export type InteracaoRoboCreateNestedManyWithoutConvenioInput = {
    create?: XOR<InteracaoRoboCreateWithoutConvenioInput, InteracaoRoboUncheckedCreateWithoutConvenioInput> | InteracaoRoboCreateWithoutConvenioInput[] | InteracaoRoboUncheckedCreateWithoutConvenioInput[]
    connectOrCreate?: InteracaoRoboCreateOrConnectWithoutConvenioInput | InteracaoRoboCreateOrConnectWithoutConvenioInput[]
    createMany?: InteracaoRoboCreateManyConvenioInputEnvelope
    connect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
  }

  export type ConsultaUncheckedCreateNestedManyWithoutConvenioInput = {
    create?: XOR<ConsultaCreateWithoutConvenioInput, ConsultaUncheckedCreateWithoutConvenioInput> | ConsultaCreateWithoutConvenioInput[] | ConsultaUncheckedCreateWithoutConvenioInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutConvenioInput | ConsultaCreateOrConnectWithoutConvenioInput[]
    createMany?: ConsultaCreateManyConvenioInputEnvelope
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
  }

  export type InteracaoRoboUncheckedCreateNestedManyWithoutConvenioInput = {
    create?: XOR<InteracaoRoboCreateWithoutConvenioInput, InteracaoRoboUncheckedCreateWithoutConvenioInput> | InteracaoRoboCreateWithoutConvenioInput[] | InteracaoRoboUncheckedCreateWithoutConvenioInput[]
    connectOrCreate?: InteracaoRoboCreateOrConnectWithoutConvenioInput | InteracaoRoboCreateOrConnectWithoutConvenioInput[]
    createMany?: InteracaoRoboCreateManyConvenioInputEnvelope
    connect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
  }

  export type ClinicaUpdateOneRequiredWithoutConveniosNestedInput = {
    create?: XOR<ClinicaCreateWithoutConveniosInput, ClinicaUncheckedCreateWithoutConveniosInput>
    connectOrCreate?: ClinicaCreateOrConnectWithoutConveniosInput
    upsert?: ClinicaUpsertWithoutConveniosInput
    connect?: ClinicaWhereUniqueInput
    update?: XOR<XOR<ClinicaUpdateToOneWithWhereWithoutConveniosInput, ClinicaUpdateWithoutConveniosInput>, ClinicaUncheckedUpdateWithoutConveniosInput>
  }

  export type ConsultaUpdateManyWithoutConvenioNestedInput = {
    create?: XOR<ConsultaCreateWithoutConvenioInput, ConsultaUncheckedCreateWithoutConvenioInput> | ConsultaCreateWithoutConvenioInput[] | ConsultaUncheckedCreateWithoutConvenioInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutConvenioInput | ConsultaCreateOrConnectWithoutConvenioInput[]
    upsert?: ConsultaUpsertWithWhereUniqueWithoutConvenioInput | ConsultaUpsertWithWhereUniqueWithoutConvenioInput[]
    createMany?: ConsultaCreateManyConvenioInputEnvelope
    set?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    disconnect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    delete?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    update?: ConsultaUpdateWithWhereUniqueWithoutConvenioInput | ConsultaUpdateWithWhereUniqueWithoutConvenioInput[]
    updateMany?: ConsultaUpdateManyWithWhereWithoutConvenioInput | ConsultaUpdateManyWithWhereWithoutConvenioInput[]
    deleteMany?: ConsultaScalarWhereInput | ConsultaScalarWhereInput[]
  }

  export type InteracaoRoboUpdateManyWithoutConvenioNestedInput = {
    create?: XOR<InteracaoRoboCreateWithoutConvenioInput, InteracaoRoboUncheckedCreateWithoutConvenioInput> | InteracaoRoboCreateWithoutConvenioInput[] | InteracaoRoboUncheckedCreateWithoutConvenioInput[]
    connectOrCreate?: InteracaoRoboCreateOrConnectWithoutConvenioInput | InteracaoRoboCreateOrConnectWithoutConvenioInput[]
    upsert?: InteracaoRoboUpsertWithWhereUniqueWithoutConvenioInput | InteracaoRoboUpsertWithWhereUniqueWithoutConvenioInput[]
    createMany?: InteracaoRoboCreateManyConvenioInputEnvelope
    set?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    disconnect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    delete?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    connect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    update?: InteracaoRoboUpdateWithWhereUniqueWithoutConvenioInput | InteracaoRoboUpdateWithWhereUniqueWithoutConvenioInput[]
    updateMany?: InteracaoRoboUpdateManyWithWhereWithoutConvenioInput | InteracaoRoboUpdateManyWithWhereWithoutConvenioInput[]
    deleteMany?: InteracaoRoboScalarWhereInput | InteracaoRoboScalarWhereInput[]
  }

  export type ConsultaUncheckedUpdateManyWithoutConvenioNestedInput = {
    create?: XOR<ConsultaCreateWithoutConvenioInput, ConsultaUncheckedCreateWithoutConvenioInput> | ConsultaCreateWithoutConvenioInput[] | ConsultaUncheckedCreateWithoutConvenioInput[]
    connectOrCreate?: ConsultaCreateOrConnectWithoutConvenioInput | ConsultaCreateOrConnectWithoutConvenioInput[]
    upsert?: ConsultaUpsertWithWhereUniqueWithoutConvenioInput | ConsultaUpsertWithWhereUniqueWithoutConvenioInput[]
    createMany?: ConsultaCreateManyConvenioInputEnvelope
    set?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    disconnect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    delete?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    connect?: ConsultaWhereUniqueInput | ConsultaWhereUniqueInput[]
    update?: ConsultaUpdateWithWhereUniqueWithoutConvenioInput | ConsultaUpdateWithWhereUniqueWithoutConvenioInput[]
    updateMany?: ConsultaUpdateManyWithWhereWithoutConvenioInput | ConsultaUpdateManyWithWhereWithoutConvenioInput[]
    deleteMany?: ConsultaScalarWhereInput | ConsultaScalarWhereInput[]
  }

  export type InteracaoRoboUncheckedUpdateManyWithoutConvenioNestedInput = {
    create?: XOR<InteracaoRoboCreateWithoutConvenioInput, InteracaoRoboUncheckedCreateWithoutConvenioInput> | InteracaoRoboCreateWithoutConvenioInput[] | InteracaoRoboUncheckedCreateWithoutConvenioInput[]
    connectOrCreate?: InteracaoRoboCreateOrConnectWithoutConvenioInput | InteracaoRoboCreateOrConnectWithoutConvenioInput[]
    upsert?: InteracaoRoboUpsertWithWhereUniqueWithoutConvenioInput | InteracaoRoboUpsertWithWhereUniqueWithoutConvenioInput[]
    createMany?: InteracaoRoboCreateManyConvenioInputEnvelope
    set?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    disconnect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    delete?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    connect?: InteracaoRoboWhereUniqueInput | InteracaoRoboWhereUniqueInput[]
    update?: InteracaoRoboUpdateWithWhereUniqueWithoutConvenioInput | InteracaoRoboUpdateWithWhereUniqueWithoutConvenioInput[]
    updateMany?: InteracaoRoboUpdateManyWithWhereWithoutConvenioInput | InteracaoRoboUpdateManyWithWhereWithoutConvenioInput[]
    deleteMany?: InteracaoRoboScalarWhereInput | InteracaoRoboScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type UsuarioCreateWithoutClinicaInput = {
    nome: string
    email: string
    senha: string
    tipo: string
    ativo?: boolean
    criado_em?: Date | string
    profissional?: ProfissionalDaSaudeCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutClinicaInput = {
    id_usuario?: number
    nome: string
    email: string
    senha: string
    tipo: string
    ativo?: boolean
    criado_em?: Date | string
    profissional?: ProfissionalDaSaudeUncheckedCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutClinicaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutClinicaInput, UsuarioUncheckedCreateWithoutClinicaInput>
  }

  export type UsuarioCreateManyClinicaInputEnvelope = {
    data: UsuarioCreateManyClinicaInput | UsuarioCreateManyClinicaInput[]
    skipDuplicates?: boolean
  }

  export type ProfissionalDaSaudeCreateWithoutClinicaInput = {
    nome_profissional: string
    imagem_profissional?: string | null
    data_nascimento: Date | string
    cpf: string
    conselho?: string | null
    numero_conselho?: string | null
    uf_conselho?: string | null
    rqe?: string | null
    telefone: string
    email: string
    telemedicina?: boolean
    especialidade?: string | null
    ativo?: boolean
    usuario?: UsuarioCreateNestedOneWithoutProfissionalInput
    consultas?: ConsultaCreateNestedManyWithoutProfissionalInput
    agenda?: AgendaCreateNestedManyWithoutProfissionalInput
  }

  export type ProfissionalDaSaudeUncheckedCreateWithoutClinicaInput = {
    id_profissional_saude?: number
    nome_profissional: string
    imagem_profissional?: string | null
    data_nascimento: Date | string
    cpf: string
    conselho?: string | null
    numero_conselho?: string | null
    uf_conselho?: string | null
    rqe?: string | null
    telefone: string
    email: string
    telemedicina?: boolean
    especialidade?: string | null
    ativo?: boolean
    usuario_id?: number | null
    consultas?: ConsultaUncheckedCreateNestedManyWithoutProfissionalInput
    agenda?: AgendaUncheckedCreateNestedManyWithoutProfissionalInput
  }

  export type ProfissionalDaSaudeCreateOrConnectWithoutClinicaInput = {
    where: ProfissionalDaSaudeWhereUniqueInput
    create: XOR<ProfissionalDaSaudeCreateWithoutClinicaInput, ProfissionalDaSaudeUncheckedCreateWithoutClinicaInput>
  }

  export type ProfissionalDaSaudeCreateManyClinicaInputEnvelope = {
    data: ProfissionalDaSaudeCreateManyClinicaInput | ProfissionalDaSaudeCreateManyClinicaInput[]
    skipDuplicates?: boolean
  }

  export type PacienteCreateWithoutClinicaInput = {
    cpf: string
    nome: string
    data_nascimento: Date | string
    email: string
    telefone: string
    codigo_ibge?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    senha?: string | null
    ativo?: boolean
    consultas?: ConsultaCreateNestedManyWithoutPacienteInput
    interacao_robo?: InteracaoRoboCreateNestedManyWithoutPacienteInput
  }

  export type PacienteUncheckedCreateWithoutClinicaInput = {
    id_paciente?: number
    cpf: string
    nome: string
    data_nascimento: Date | string
    email: string
    telefone: string
    codigo_ibge?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    senha?: string | null
    ativo?: boolean
    consultas?: ConsultaUncheckedCreateNestedManyWithoutPacienteInput
    interacao_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutPacienteInput
  }

  export type PacienteCreateOrConnectWithoutClinicaInput = {
    where: PacienteWhereUniqueInput
    create: XOR<PacienteCreateWithoutClinicaInput, PacienteUncheckedCreateWithoutClinicaInput>
  }

  export type PacienteCreateManyClinicaInputEnvelope = {
    data: PacienteCreateManyClinicaInput | PacienteCreateManyClinicaInput[]
    skipDuplicates?: boolean
  }

  export type ConsultaCreateWithoutClinicaInput = {
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    paciente: PacienteCreateNestedOneWithoutConsultasInput
    profissional: ProfissionalDaSaudeCreateNestedOneWithoutConsultasInput
    procedimentos?: ConsultaProcedimentoCreateNestedManyWithoutConsultaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutConsultaInput
    convenio?: ConvenioCreateNestedOneWithoutConsultasInput
  }

  export type ConsultaUncheckedCreateWithoutClinicaInput = {
    id_consulta?: number
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    paciente_id: number
    profissional_id: number
    id_convenio?: number | null
    procedimentos?: ConsultaProcedimentoUncheckedCreateNestedManyWithoutConsultaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutConsultaInput
  }

  export type ConsultaCreateOrConnectWithoutClinicaInput = {
    where: ConsultaWhereUniqueInput
    create: XOR<ConsultaCreateWithoutClinicaInput, ConsultaUncheckedCreateWithoutClinicaInput>
  }

  export type ConsultaCreateManyClinicaInputEnvelope = {
    data: ConsultaCreateManyClinicaInput | ConsultaCreateManyClinicaInput[]
    skipDuplicates?: boolean
  }

  export type ProcedimentoCreateWithoutClinicaInput = {
    nome_procedimento: string
    tipo: string
    valor: number
    duracao_minutos: number
    telemedicina?: boolean
    descricao?: string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string | null
    consultas?: ConsultaProcedimentoCreateNestedManyWithoutProcedimentoInput
  }

  export type ProcedimentoUncheckedCreateWithoutClinicaInput = {
    id_procedimento?: number
    nome_procedimento: string
    tipo: string
    valor: number
    duracao_minutos: number
    telemedicina?: boolean
    descricao?: string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string | null
    consultas?: ConsultaProcedimentoUncheckedCreateNestedManyWithoutProcedimentoInput
  }

  export type ProcedimentoCreateOrConnectWithoutClinicaInput = {
    where: ProcedimentoWhereUniqueInput
    create: XOR<ProcedimentoCreateWithoutClinicaInput, ProcedimentoUncheckedCreateWithoutClinicaInput>
  }

  export type ProcedimentoCreateManyClinicaInputEnvelope = {
    data: ProcedimentoCreateManyClinicaInput | ProcedimentoCreateManyClinicaInput[]
    skipDuplicates?: boolean
  }

  export type AgendaCreateWithoutClinicaInput = {
    data: Date | string
    hora_inicio: Date | string
    hora_fim: Date | string
    status: string
    tipo_bloqueio?: string | null
    criado_em?: Date | string
    profissional: ProfissionalDaSaudeCreateNestedOneWithoutAgendaInput
  }

  export type AgendaUncheckedCreateWithoutClinicaInput = {
    id_agenda?: number
    data: Date | string
    hora_inicio: Date | string
    hora_fim: Date | string
    status: string
    tipo_bloqueio?: string | null
    criado_em?: Date | string
    profissional_id: number
  }

  export type AgendaCreateOrConnectWithoutClinicaInput = {
    where: AgendaWhereUniqueInput
    create: XOR<AgendaCreateWithoutClinicaInput, AgendaUncheckedCreateWithoutClinicaInput>
  }

  export type AgendaCreateManyClinicaInputEnvelope = {
    data: AgendaCreateManyClinicaInput | AgendaCreateManyClinicaInput[]
    skipDuplicates?: boolean
  }

  export type AvaliacaoCreateWithoutClinicaInput = {
    data_avaliacao: Date | string
    descricao?: string | null
    parecer_profissional?: string | null
    consulta: ConsultaCreateNestedOneWithoutAvaliacoesInput
  }

  export type AvaliacaoUncheckedCreateWithoutClinicaInput = {
    id_avaliacao?: number
    consulta_id: number
    data_avaliacao: Date | string
    descricao?: string | null
    parecer_profissional?: string | null
  }

  export type AvaliacaoCreateOrConnectWithoutClinicaInput = {
    where: AvaliacaoWhereUniqueInput
    create: XOR<AvaliacaoCreateWithoutClinicaInput, AvaliacaoUncheckedCreateWithoutClinicaInput>
  }

  export type AvaliacaoCreateManyClinicaInputEnvelope = {
    data: AvaliacaoCreateManyClinicaInput | AvaliacaoCreateManyClinicaInput[]
    skipDuplicates?: boolean
  }

  export type ControleOperacionalCreateWithoutClinicaInput = {
    data_referencia?: Date | string
    pacientes_agendados?: number
    pacientes_nao_agendados?: number
    pacientes_faltantes?: number
    nps?: number | null
    total_consultas?: number
    total_procedimentos?: number
    valor_arrecadado?: number
    horas_robo_trabalhadas?: number
    economia_estimada?: number
    criado_em?: Date | string
  }

  export type ControleOperacionalUncheckedCreateWithoutClinicaInput = {
    id_controle?: number
    data_referencia?: Date | string
    pacientes_agendados?: number
    pacientes_nao_agendados?: number
    pacientes_faltantes?: number
    nps?: number | null
    total_consultas?: number
    total_procedimentos?: number
    valor_arrecadado?: number
    horas_robo_trabalhadas?: number
    economia_estimada?: number
    criado_em?: Date | string
  }

  export type ControleOperacionalCreateOrConnectWithoutClinicaInput = {
    where: ControleOperacionalWhereUniqueInput
    create: XOR<ControleOperacionalCreateWithoutClinicaInput, ControleOperacionalUncheckedCreateWithoutClinicaInput>
  }

  export type ControleOperacionalCreateManyClinicaInputEnvelope = {
    data: ControleOperacionalCreateManyClinicaInput | ControleOperacionalCreateManyClinicaInput[]
    skipDuplicates?: boolean
  }

  export type InteracaoRoboCreateWithoutClinicaInput = {
    tipo: string
    data_interacao?: Date | string
    paciente: PacienteCreateNestedOneWithoutInteracao_roboInput
    convenio?: ConvenioCreateNestedOneWithoutInteracoes_roboInput
  }

  export type InteracaoRoboUncheckedCreateWithoutClinicaInput = {
    id_interacao?: number
    id_paciente: number
    tipo: string
    data_interacao?: Date | string
    id_convenio?: number | null
  }

  export type InteracaoRoboCreateOrConnectWithoutClinicaInput = {
    where: InteracaoRoboWhereUniqueInput
    create: XOR<InteracaoRoboCreateWithoutClinicaInput, InteracaoRoboUncheckedCreateWithoutClinicaInput>
  }

  export type InteracaoRoboCreateManyClinicaInputEnvelope = {
    data: InteracaoRoboCreateManyClinicaInput | InteracaoRoboCreateManyClinicaInput[]
    skipDuplicates?: boolean
  }

  export type ConvenioCreateWithoutClinicaInput = {
    nome: string
    ativo?: boolean
    criado_em?: Date | string
    consultas?: ConsultaCreateNestedManyWithoutConvenioInput
    interacoes_robo?: InteracaoRoboCreateNestedManyWithoutConvenioInput
  }

  export type ConvenioUncheckedCreateWithoutClinicaInput = {
    id_convenio?: number
    nome: string
    ativo?: boolean
    criado_em?: Date | string
    consultas?: ConsultaUncheckedCreateNestedManyWithoutConvenioInput
    interacoes_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutConvenioInput
  }

  export type ConvenioCreateOrConnectWithoutClinicaInput = {
    where: ConvenioWhereUniqueInput
    create: XOR<ConvenioCreateWithoutClinicaInput, ConvenioUncheckedCreateWithoutClinicaInput>
  }

  export type ConvenioCreateManyClinicaInputEnvelope = {
    data: ConvenioCreateManyClinicaInput | ConvenioCreateManyClinicaInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithWhereUniqueWithoutClinicaInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutClinicaInput, UsuarioUncheckedUpdateWithoutClinicaInput>
    create: XOR<UsuarioCreateWithoutClinicaInput, UsuarioUncheckedCreateWithoutClinicaInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutClinicaInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutClinicaInput, UsuarioUncheckedUpdateWithoutClinicaInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutClinicaInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutClinicaInput>
  }

  export type UsuarioScalarWhereInput = {
    AND?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    OR?: UsuarioScalarWhereInput[]
    NOT?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    id_usuario?: IntFilter<"Usuario"> | number
    nome?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    senha?: StringFilter<"Usuario"> | string
    tipo?: StringFilter<"Usuario"> | string
    ativo?: BoolFilter<"Usuario"> | boolean
    criado_em?: DateTimeFilter<"Usuario"> | Date | string
    id_clinica?: IntFilter<"Usuario"> | number
  }

  export type ProfissionalDaSaudeUpsertWithWhereUniqueWithoutClinicaInput = {
    where: ProfissionalDaSaudeWhereUniqueInput
    update: XOR<ProfissionalDaSaudeUpdateWithoutClinicaInput, ProfissionalDaSaudeUncheckedUpdateWithoutClinicaInput>
    create: XOR<ProfissionalDaSaudeCreateWithoutClinicaInput, ProfissionalDaSaudeUncheckedCreateWithoutClinicaInput>
  }

  export type ProfissionalDaSaudeUpdateWithWhereUniqueWithoutClinicaInput = {
    where: ProfissionalDaSaudeWhereUniqueInput
    data: XOR<ProfissionalDaSaudeUpdateWithoutClinicaInput, ProfissionalDaSaudeUncheckedUpdateWithoutClinicaInput>
  }

  export type ProfissionalDaSaudeUpdateManyWithWhereWithoutClinicaInput = {
    where: ProfissionalDaSaudeScalarWhereInput
    data: XOR<ProfissionalDaSaudeUpdateManyMutationInput, ProfissionalDaSaudeUncheckedUpdateManyWithoutClinicaInput>
  }

  export type ProfissionalDaSaudeScalarWhereInput = {
    AND?: ProfissionalDaSaudeScalarWhereInput | ProfissionalDaSaudeScalarWhereInput[]
    OR?: ProfissionalDaSaudeScalarWhereInput[]
    NOT?: ProfissionalDaSaudeScalarWhereInput | ProfissionalDaSaudeScalarWhereInput[]
    id_profissional_saude?: IntFilter<"ProfissionalDaSaude"> | number
    nome_profissional?: StringFilter<"ProfissionalDaSaude"> | string
    imagem_profissional?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    data_nascimento?: DateTimeFilter<"ProfissionalDaSaude"> | Date | string
    cpf?: StringFilter<"ProfissionalDaSaude"> | string
    conselho?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    numero_conselho?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    uf_conselho?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    rqe?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    telefone?: StringFilter<"ProfissionalDaSaude"> | string
    email?: StringFilter<"ProfissionalDaSaude"> | string
    telemedicina?: BoolFilter<"ProfissionalDaSaude"> | boolean
    especialidade?: StringNullableFilter<"ProfissionalDaSaude"> | string | null
    ativo?: BoolFilter<"ProfissionalDaSaude"> | boolean
    id_clinica?: IntFilter<"ProfissionalDaSaude"> | number
    usuario_id?: IntNullableFilter<"ProfissionalDaSaude"> | number | null
  }

  export type PacienteUpsertWithWhereUniqueWithoutClinicaInput = {
    where: PacienteWhereUniqueInput
    update: XOR<PacienteUpdateWithoutClinicaInput, PacienteUncheckedUpdateWithoutClinicaInput>
    create: XOR<PacienteCreateWithoutClinicaInput, PacienteUncheckedCreateWithoutClinicaInput>
  }

  export type PacienteUpdateWithWhereUniqueWithoutClinicaInput = {
    where: PacienteWhereUniqueInput
    data: XOR<PacienteUpdateWithoutClinicaInput, PacienteUncheckedUpdateWithoutClinicaInput>
  }

  export type PacienteUpdateManyWithWhereWithoutClinicaInput = {
    where: PacienteScalarWhereInput
    data: XOR<PacienteUpdateManyMutationInput, PacienteUncheckedUpdateManyWithoutClinicaInput>
  }

  export type PacienteScalarWhereInput = {
    AND?: PacienteScalarWhereInput | PacienteScalarWhereInput[]
    OR?: PacienteScalarWhereInput[]
    NOT?: PacienteScalarWhereInput | PacienteScalarWhereInput[]
    id_paciente?: IntFilter<"Paciente"> | number
    cpf?: StringFilter<"Paciente"> | string
    nome?: StringFilter<"Paciente"> | string
    data_nascimento?: DateTimeFilter<"Paciente"> | Date | string
    email?: StringFilter<"Paciente"> | string
    telefone?: StringFilter<"Paciente"> | string
    codigo_ibge?: StringNullableFilter<"Paciente"> | string | null
    cep?: StringNullableFilter<"Paciente"> | string | null
    logradouro?: StringNullableFilter<"Paciente"> | string | null
    numero?: StringNullableFilter<"Paciente"> | string | null
    complemento?: StringNullableFilter<"Paciente"> | string | null
    bairro?: StringNullableFilter<"Paciente"> | string | null
    cidade?: StringNullableFilter<"Paciente"> | string | null
    uf?: StringNullableFilter<"Paciente"> | string | null
    senha?: StringNullableFilter<"Paciente"> | string | null
    ativo?: BoolFilter<"Paciente"> | boolean
    id_clinica?: IntFilter<"Paciente"> | number
  }

  export type ConsultaUpsertWithWhereUniqueWithoutClinicaInput = {
    where: ConsultaWhereUniqueInput
    update: XOR<ConsultaUpdateWithoutClinicaInput, ConsultaUncheckedUpdateWithoutClinicaInput>
    create: XOR<ConsultaCreateWithoutClinicaInput, ConsultaUncheckedCreateWithoutClinicaInput>
  }

  export type ConsultaUpdateWithWhereUniqueWithoutClinicaInput = {
    where: ConsultaWhereUniqueInput
    data: XOR<ConsultaUpdateWithoutClinicaInput, ConsultaUncheckedUpdateWithoutClinicaInput>
  }

  export type ConsultaUpdateManyWithWhereWithoutClinicaInput = {
    where: ConsultaScalarWhereInput
    data: XOR<ConsultaUpdateManyMutationInput, ConsultaUncheckedUpdateManyWithoutClinicaInput>
  }

  export type ConsultaScalarWhereInput = {
    AND?: ConsultaScalarWhereInput | ConsultaScalarWhereInput[]
    OR?: ConsultaScalarWhereInput[]
    NOT?: ConsultaScalarWhereInput | ConsultaScalarWhereInput[]
    id_consulta?: IntFilter<"Consulta"> | number
    data_hora_inicio?: DateTimeFilter<"Consulta"> | Date | string
    data_hora_fim?: DateTimeNullableFilter<"Consulta"> | Date | string | null
    valor?: FloatNullableFilter<"Consulta"> | number | null
    telemedicina?: BoolFilter<"Consulta"> | boolean
    status?: StringFilter<"Consulta"> | string
    observacoes?: StringNullableFilter<"Consulta"> | string | null
    paciente_id?: IntFilter<"Consulta"> | number
    profissional_id?: IntFilter<"Consulta"> | number
    id_clinica?: IntFilter<"Consulta"> | number
    id_convenio?: IntNullableFilter<"Consulta"> | number | null
  }

  export type ProcedimentoUpsertWithWhereUniqueWithoutClinicaInput = {
    where: ProcedimentoWhereUniqueInput
    update: XOR<ProcedimentoUpdateWithoutClinicaInput, ProcedimentoUncheckedUpdateWithoutClinicaInput>
    create: XOR<ProcedimentoCreateWithoutClinicaInput, ProcedimentoUncheckedCreateWithoutClinicaInput>
  }

  export type ProcedimentoUpdateWithWhereUniqueWithoutClinicaInput = {
    where: ProcedimentoWhereUniqueInput
    data: XOR<ProcedimentoUpdateWithoutClinicaInput, ProcedimentoUncheckedUpdateWithoutClinicaInput>
  }

  export type ProcedimentoUpdateManyWithWhereWithoutClinicaInput = {
    where: ProcedimentoScalarWhereInput
    data: XOR<ProcedimentoUpdateManyMutationInput, ProcedimentoUncheckedUpdateManyWithoutClinicaInput>
  }

  export type ProcedimentoScalarWhereInput = {
    AND?: ProcedimentoScalarWhereInput | ProcedimentoScalarWhereInput[]
    OR?: ProcedimentoScalarWhereInput[]
    NOT?: ProcedimentoScalarWhereInput | ProcedimentoScalarWhereInput[]
    id_procedimento?: IntFilter<"Procedimento"> | number
    nome_procedimento?: StringFilter<"Procedimento"> | string
    tipo?: StringFilter<"Procedimento"> | string
    valor?: FloatFilter<"Procedimento"> | number
    duracao_minutos?: IntFilter<"Procedimento"> | number
    telemedicina?: BoolFilter<"Procedimento"> | boolean
    descricao?: StringNullableFilter<"Procedimento"> | string | null
    ativo?: BoolFilter<"Procedimento"> | boolean
    criado_em?: DateTimeFilter<"Procedimento"> | Date | string
    atualizado_em?: DateTimeNullableFilter<"Procedimento"> | Date | string | null
    id_clinica?: IntFilter<"Procedimento"> | number
  }

  export type AgendaUpsertWithWhereUniqueWithoutClinicaInput = {
    where: AgendaWhereUniqueInput
    update: XOR<AgendaUpdateWithoutClinicaInput, AgendaUncheckedUpdateWithoutClinicaInput>
    create: XOR<AgendaCreateWithoutClinicaInput, AgendaUncheckedCreateWithoutClinicaInput>
  }

  export type AgendaUpdateWithWhereUniqueWithoutClinicaInput = {
    where: AgendaWhereUniqueInput
    data: XOR<AgendaUpdateWithoutClinicaInput, AgendaUncheckedUpdateWithoutClinicaInput>
  }

  export type AgendaUpdateManyWithWhereWithoutClinicaInput = {
    where: AgendaScalarWhereInput
    data: XOR<AgendaUpdateManyMutationInput, AgendaUncheckedUpdateManyWithoutClinicaInput>
  }

  export type AgendaScalarWhereInput = {
    AND?: AgendaScalarWhereInput | AgendaScalarWhereInput[]
    OR?: AgendaScalarWhereInput[]
    NOT?: AgendaScalarWhereInput | AgendaScalarWhereInput[]
    id_agenda?: IntFilter<"Agenda"> | number
    data?: DateTimeFilter<"Agenda"> | Date | string
    hora_inicio?: DateTimeFilter<"Agenda"> | Date | string
    hora_fim?: DateTimeFilter<"Agenda"> | Date | string
    status?: StringFilter<"Agenda"> | string
    tipo_bloqueio?: StringNullableFilter<"Agenda"> | string | null
    criado_em?: DateTimeFilter<"Agenda"> | Date | string
    profissional_id?: IntFilter<"Agenda"> | number
    id_clinica?: IntFilter<"Agenda"> | number
  }

  export type AvaliacaoUpsertWithWhereUniqueWithoutClinicaInput = {
    where: AvaliacaoWhereUniqueInput
    update: XOR<AvaliacaoUpdateWithoutClinicaInput, AvaliacaoUncheckedUpdateWithoutClinicaInput>
    create: XOR<AvaliacaoCreateWithoutClinicaInput, AvaliacaoUncheckedCreateWithoutClinicaInput>
  }

  export type AvaliacaoUpdateWithWhereUniqueWithoutClinicaInput = {
    where: AvaliacaoWhereUniqueInput
    data: XOR<AvaliacaoUpdateWithoutClinicaInput, AvaliacaoUncheckedUpdateWithoutClinicaInput>
  }

  export type AvaliacaoUpdateManyWithWhereWithoutClinicaInput = {
    where: AvaliacaoScalarWhereInput
    data: XOR<AvaliacaoUpdateManyMutationInput, AvaliacaoUncheckedUpdateManyWithoutClinicaInput>
  }

  export type AvaliacaoScalarWhereInput = {
    AND?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
    OR?: AvaliacaoScalarWhereInput[]
    NOT?: AvaliacaoScalarWhereInput | AvaliacaoScalarWhereInput[]
    id_avaliacao?: IntFilter<"Avaliacao"> | number
    consulta_id?: IntFilter<"Avaliacao"> | number
    data_avaliacao?: DateTimeFilter<"Avaliacao"> | Date | string
    descricao?: StringNullableFilter<"Avaliacao"> | string | null
    parecer_profissional?: StringNullableFilter<"Avaliacao"> | string | null
    id_clinica?: IntFilter<"Avaliacao"> | number
  }

  export type ControleOperacionalUpsertWithWhereUniqueWithoutClinicaInput = {
    where: ControleOperacionalWhereUniqueInput
    update: XOR<ControleOperacionalUpdateWithoutClinicaInput, ControleOperacionalUncheckedUpdateWithoutClinicaInput>
    create: XOR<ControleOperacionalCreateWithoutClinicaInput, ControleOperacionalUncheckedCreateWithoutClinicaInput>
  }

  export type ControleOperacionalUpdateWithWhereUniqueWithoutClinicaInput = {
    where: ControleOperacionalWhereUniqueInput
    data: XOR<ControleOperacionalUpdateWithoutClinicaInput, ControleOperacionalUncheckedUpdateWithoutClinicaInput>
  }

  export type ControleOperacionalUpdateManyWithWhereWithoutClinicaInput = {
    where: ControleOperacionalScalarWhereInput
    data: XOR<ControleOperacionalUpdateManyMutationInput, ControleOperacionalUncheckedUpdateManyWithoutClinicaInput>
  }

  export type ControleOperacionalScalarWhereInput = {
    AND?: ControleOperacionalScalarWhereInput | ControleOperacionalScalarWhereInput[]
    OR?: ControleOperacionalScalarWhereInput[]
    NOT?: ControleOperacionalScalarWhereInput | ControleOperacionalScalarWhereInput[]
    id_controle?: IntFilter<"ControleOperacional"> | number
    id_clinica?: IntFilter<"ControleOperacional"> | number
    data_referencia?: DateTimeFilter<"ControleOperacional"> | Date | string
    pacientes_agendados?: IntFilter<"ControleOperacional"> | number
    pacientes_nao_agendados?: IntFilter<"ControleOperacional"> | number
    pacientes_faltantes?: IntFilter<"ControleOperacional"> | number
    nps?: IntNullableFilter<"ControleOperacional"> | number | null
    total_consultas?: IntFilter<"ControleOperacional"> | number
    total_procedimentos?: IntFilter<"ControleOperacional"> | number
    valor_arrecadado?: FloatFilter<"ControleOperacional"> | number
    horas_robo_trabalhadas?: FloatFilter<"ControleOperacional"> | number
    economia_estimada?: FloatFilter<"ControleOperacional"> | number
    criado_em?: DateTimeFilter<"ControleOperacional"> | Date | string
  }

  export type InteracaoRoboUpsertWithWhereUniqueWithoutClinicaInput = {
    where: InteracaoRoboWhereUniqueInput
    update: XOR<InteracaoRoboUpdateWithoutClinicaInput, InteracaoRoboUncheckedUpdateWithoutClinicaInput>
    create: XOR<InteracaoRoboCreateWithoutClinicaInput, InteracaoRoboUncheckedCreateWithoutClinicaInput>
  }

  export type InteracaoRoboUpdateWithWhereUniqueWithoutClinicaInput = {
    where: InteracaoRoboWhereUniqueInput
    data: XOR<InteracaoRoboUpdateWithoutClinicaInput, InteracaoRoboUncheckedUpdateWithoutClinicaInput>
  }

  export type InteracaoRoboUpdateManyWithWhereWithoutClinicaInput = {
    where: InteracaoRoboScalarWhereInput
    data: XOR<InteracaoRoboUpdateManyMutationInput, InteracaoRoboUncheckedUpdateManyWithoutClinicaInput>
  }

  export type InteracaoRoboScalarWhereInput = {
    AND?: InteracaoRoboScalarWhereInput | InteracaoRoboScalarWhereInput[]
    OR?: InteracaoRoboScalarWhereInput[]
    NOT?: InteracaoRoboScalarWhereInput | InteracaoRoboScalarWhereInput[]
    id_interacao?: IntFilter<"InteracaoRobo"> | number
    id_clinica?: IntFilter<"InteracaoRobo"> | number
    id_paciente?: IntFilter<"InteracaoRobo"> | number
    tipo?: StringFilter<"InteracaoRobo"> | string
    data_interacao?: DateTimeFilter<"InteracaoRobo"> | Date | string
    id_convenio?: IntNullableFilter<"InteracaoRobo"> | number | null
  }

  export type ConvenioUpsertWithWhereUniqueWithoutClinicaInput = {
    where: ConvenioWhereUniqueInput
    update: XOR<ConvenioUpdateWithoutClinicaInput, ConvenioUncheckedUpdateWithoutClinicaInput>
    create: XOR<ConvenioCreateWithoutClinicaInput, ConvenioUncheckedCreateWithoutClinicaInput>
  }

  export type ConvenioUpdateWithWhereUniqueWithoutClinicaInput = {
    where: ConvenioWhereUniqueInput
    data: XOR<ConvenioUpdateWithoutClinicaInput, ConvenioUncheckedUpdateWithoutClinicaInput>
  }

  export type ConvenioUpdateManyWithWhereWithoutClinicaInput = {
    where: ConvenioScalarWhereInput
    data: XOR<ConvenioUpdateManyMutationInput, ConvenioUncheckedUpdateManyWithoutClinicaInput>
  }

  export type ConvenioScalarWhereInput = {
    AND?: ConvenioScalarWhereInput | ConvenioScalarWhereInput[]
    OR?: ConvenioScalarWhereInput[]
    NOT?: ConvenioScalarWhereInput | ConvenioScalarWhereInput[]
    id_convenio?: IntFilter<"Convenio"> | number
    nome?: StringFilter<"Convenio"> | string
    ativo?: BoolFilter<"Convenio"> | boolean
    id_clinica?: IntFilter<"Convenio"> | number
    criado_em?: DateTimeFilter<"Convenio"> | Date | string
  }

  export type ClinicaCreateWithoutUsuariosInput = {
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    profissionais?: ProfissionalDaSaudeCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoCreateNestedManyWithoutClinicaInput
    agendas?: AgendaCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaUncheckedCreateWithoutUsuariosInput = {
    id_clinica?: number
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    profissionais?: ProfissionalDaSaudeUncheckedCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteUncheckedCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaUncheckedCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoUncheckedCreateNestedManyWithoutClinicaInput
    agendas?: AgendaUncheckedCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalUncheckedCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioUncheckedCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaCreateOrConnectWithoutUsuariosInput = {
    where: ClinicaWhereUniqueInput
    create: XOR<ClinicaCreateWithoutUsuariosInput, ClinicaUncheckedCreateWithoutUsuariosInput>
  }

  export type ProfissionalDaSaudeCreateWithoutUsuarioInput = {
    nome_profissional: string
    imagem_profissional?: string | null
    data_nascimento: Date | string
    cpf: string
    conselho?: string | null
    numero_conselho?: string | null
    uf_conselho?: string | null
    rqe?: string | null
    telefone: string
    email: string
    telemedicina?: boolean
    especialidade?: string | null
    ativo?: boolean
    clinica: ClinicaCreateNestedOneWithoutProfissionaisInput
    consultas?: ConsultaCreateNestedManyWithoutProfissionalInput
    agenda?: AgendaCreateNestedManyWithoutProfissionalInput
  }

  export type ProfissionalDaSaudeUncheckedCreateWithoutUsuarioInput = {
    id_profissional_saude?: number
    nome_profissional: string
    imagem_profissional?: string | null
    data_nascimento: Date | string
    cpf: string
    conselho?: string | null
    numero_conselho?: string | null
    uf_conselho?: string | null
    rqe?: string | null
    telefone: string
    email: string
    telemedicina?: boolean
    especialidade?: string | null
    ativo?: boolean
    id_clinica: number
    consultas?: ConsultaUncheckedCreateNestedManyWithoutProfissionalInput
    agenda?: AgendaUncheckedCreateNestedManyWithoutProfissionalInput
  }

  export type ProfissionalDaSaudeCreateOrConnectWithoutUsuarioInput = {
    where: ProfissionalDaSaudeWhereUniqueInput
    create: XOR<ProfissionalDaSaudeCreateWithoutUsuarioInput, ProfissionalDaSaudeUncheckedCreateWithoutUsuarioInput>
  }

  export type ClinicaUpsertWithoutUsuariosInput = {
    update: XOR<ClinicaUpdateWithoutUsuariosInput, ClinicaUncheckedUpdateWithoutUsuariosInput>
    create: XOR<ClinicaCreateWithoutUsuariosInput, ClinicaUncheckedCreateWithoutUsuariosInput>
    where?: ClinicaWhereInput
  }

  export type ClinicaUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: ClinicaWhereInput
    data: XOR<ClinicaUpdateWithoutUsuariosInput, ClinicaUncheckedUpdateWithoutUsuariosInput>
  }

  export type ClinicaUpdateWithoutUsuariosInput = {
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    profissionais?: ProfissionalDaSaudeUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUpdateManyWithoutClinicaNestedInput
  }

  export type ClinicaUncheckedUpdateWithoutUsuariosInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    profissionais?: ProfissionalDaSaudeUncheckedUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUncheckedUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUncheckedUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUncheckedUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUncheckedUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUncheckedUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUncheckedUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUncheckedUpdateManyWithoutClinicaNestedInput
  }

  export type ProfissionalDaSaudeUpsertWithoutUsuarioInput = {
    update: XOR<ProfissionalDaSaudeUpdateWithoutUsuarioInput, ProfissionalDaSaudeUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ProfissionalDaSaudeCreateWithoutUsuarioInput, ProfissionalDaSaudeUncheckedCreateWithoutUsuarioInput>
    where?: ProfissionalDaSaudeWhereInput
  }

  export type ProfissionalDaSaudeUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: ProfissionalDaSaudeWhereInput
    data: XOR<ProfissionalDaSaudeUpdateWithoutUsuarioInput, ProfissionalDaSaudeUncheckedUpdateWithoutUsuarioInput>
  }

  export type ProfissionalDaSaudeUpdateWithoutUsuarioInput = {
    nome_profissional?: StringFieldUpdateOperationsInput | string
    imagem_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    conselho?: NullableStringFieldUpdateOperationsInput | string | null
    numero_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    uf_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    rqe?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    clinica?: ClinicaUpdateOneRequiredWithoutProfissionaisNestedInput
    consultas?: ConsultaUpdateManyWithoutProfissionalNestedInput
    agenda?: AgendaUpdateManyWithoutProfissionalNestedInput
  }

  export type ProfissionalDaSaudeUncheckedUpdateWithoutUsuarioInput = {
    id_profissional_saude?: IntFieldUpdateOperationsInput | number
    nome_profissional?: StringFieldUpdateOperationsInput | string
    imagem_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    conselho?: NullableStringFieldUpdateOperationsInput | string | null
    numero_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    uf_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    rqe?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    id_clinica?: IntFieldUpdateOperationsInput | number
    consultas?: ConsultaUncheckedUpdateManyWithoutProfissionalNestedInput
    agenda?: AgendaUncheckedUpdateManyWithoutProfissionalNestedInput
  }

  export type ClinicaCreateWithoutPacientesInput = {
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoCreateNestedManyWithoutClinicaInput
    agendas?: AgendaCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaUncheckedCreateWithoutPacientesInput = {
    id_clinica?: number
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeUncheckedCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaUncheckedCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoUncheckedCreateNestedManyWithoutClinicaInput
    agendas?: AgendaUncheckedCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalUncheckedCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioUncheckedCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaCreateOrConnectWithoutPacientesInput = {
    where: ClinicaWhereUniqueInput
    create: XOR<ClinicaCreateWithoutPacientesInput, ClinicaUncheckedCreateWithoutPacientesInput>
  }

  export type ConsultaCreateWithoutPacienteInput = {
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    clinica: ClinicaCreateNestedOneWithoutConsultasInput
    profissional: ProfissionalDaSaudeCreateNestedOneWithoutConsultasInput
    procedimentos?: ConsultaProcedimentoCreateNestedManyWithoutConsultaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutConsultaInput
    convenio?: ConvenioCreateNestedOneWithoutConsultasInput
  }

  export type ConsultaUncheckedCreateWithoutPacienteInput = {
    id_consulta?: number
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    profissional_id: number
    id_clinica: number
    id_convenio?: number | null
    procedimentos?: ConsultaProcedimentoUncheckedCreateNestedManyWithoutConsultaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutConsultaInput
  }

  export type ConsultaCreateOrConnectWithoutPacienteInput = {
    where: ConsultaWhereUniqueInput
    create: XOR<ConsultaCreateWithoutPacienteInput, ConsultaUncheckedCreateWithoutPacienteInput>
  }

  export type ConsultaCreateManyPacienteInputEnvelope = {
    data: ConsultaCreateManyPacienteInput | ConsultaCreateManyPacienteInput[]
    skipDuplicates?: boolean
  }

  export type InteracaoRoboCreateWithoutPacienteInput = {
    tipo: string
    data_interacao?: Date | string
    clinica: ClinicaCreateNestedOneWithoutInteracao_roboInput
    convenio?: ConvenioCreateNestedOneWithoutInteracoes_roboInput
  }

  export type InteracaoRoboUncheckedCreateWithoutPacienteInput = {
    id_interacao?: number
    id_clinica: number
    tipo: string
    data_interacao?: Date | string
    id_convenio?: number | null
  }

  export type InteracaoRoboCreateOrConnectWithoutPacienteInput = {
    where: InteracaoRoboWhereUniqueInput
    create: XOR<InteracaoRoboCreateWithoutPacienteInput, InteracaoRoboUncheckedCreateWithoutPacienteInput>
  }

  export type InteracaoRoboCreateManyPacienteInputEnvelope = {
    data: InteracaoRoboCreateManyPacienteInput | InteracaoRoboCreateManyPacienteInput[]
    skipDuplicates?: boolean
  }

  export type ClinicaUpsertWithoutPacientesInput = {
    update: XOR<ClinicaUpdateWithoutPacientesInput, ClinicaUncheckedUpdateWithoutPacientesInput>
    create: XOR<ClinicaCreateWithoutPacientesInput, ClinicaUncheckedCreateWithoutPacientesInput>
    where?: ClinicaWhereInput
  }

  export type ClinicaUpdateToOneWithWhereWithoutPacientesInput = {
    where?: ClinicaWhereInput
    data: XOR<ClinicaUpdateWithoutPacientesInput, ClinicaUncheckedUpdateWithoutPacientesInput>
  }

  export type ClinicaUpdateWithoutPacientesInput = {
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUpdateManyWithoutClinicaNestedInput
  }

  export type ClinicaUncheckedUpdateWithoutPacientesInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUncheckedUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUncheckedUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUncheckedUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUncheckedUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUncheckedUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUncheckedUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUncheckedUpdateManyWithoutClinicaNestedInput
  }

  export type ConsultaUpsertWithWhereUniqueWithoutPacienteInput = {
    where: ConsultaWhereUniqueInput
    update: XOR<ConsultaUpdateWithoutPacienteInput, ConsultaUncheckedUpdateWithoutPacienteInput>
    create: XOR<ConsultaCreateWithoutPacienteInput, ConsultaUncheckedCreateWithoutPacienteInput>
  }

  export type ConsultaUpdateWithWhereUniqueWithoutPacienteInput = {
    where: ConsultaWhereUniqueInput
    data: XOR<ConsultaUpdateWithoutPacienteInput, ConsultaUncheckedUpdateWithoutPacienteInput>
  }

  export type ConsultaUpdateManyWithWhereWithoutPacienteInput = {
    where: ConsultaScalarWhereInput
    data: XOR<ConsultaUpdateManyMutationInput, ConsultaUncheckedUpdateManyWithoutPacienteInput>
  }

  export type InteracaoRoboUpsertWithWhereUniqueWithoutPacienteInput = {
    where: InteracaoRoboWhereUniqueInput
    update: XOR<InteracaoRoboUpdateWithoutPacienteInput, InteracaoRoboUncheckedUpdateWithoutPacienteInput>
    create: XOR<InteracaoRoboCreateWithoutPacienteInput, InteracaoRoboUncheckedCreateWithoutPacienteInput>
  }

  export type InteracaoRoboUpdateWithWhereUniqueWithoutPacienteInput = {
    where: InteracaoRoboWhereUniqueInput
    data: XOR<InteracaoRoboUpdateWithoutPacienteInput, InteracaoRoboUncheckedUpdateWithoutPacienteInput>
  }

  export type InteracaoRoboUpdateManyWithWhereWithoutPacienteInput = {
    where: InteracaoRoboScalarWhereInput
    data: XOR<InteracaoRoboUpdateManyMutationInput, InteracaoRoboUncheckedUpdateManyWithoutPacienteInput>
  }

  export type ClinicaCreateWithoutProfissionaisInput = {
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoCreateNestedManyWithoutClinicaInput
    agendas?: AgendaCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaUncheckedCreateWithoutProfissionaisInput = {
    id_clinica?: number
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteUncheckedCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaUncheckedCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoUncheckedCreateNestedManyWithoutClinicaInput
    agendas?: AgendaUncheckedCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalUncheckedCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioUncheckedCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaCreateOrConnectWithoutProfissionaisInput = {
    where: ClinicaWhereUniqueInput
    create: XOR<ClinicaCreateWithoutProfissionaisInput, ClinicaUncheckedCreateWithoutProfissionaisInput>
  }

  export type UsuarioCreateWithoutProfissionalInput = {
    nome: string
    email: string
    senha: string
    tipo: string
    ativo?: boolean
    criado_em?: Date | string
    clinica: ClinicaCreateNestedOneWithoutUsuariosInput
  }

  export type UsuarioUncheckedCreateWithoutProfissionalInput = {
    id_usuario?: number
    nome: string
    email: string
    senha: string
    tipo: string
    ativo?: boolean
    criado_em?: Date | string
    id_clinica: number
  }

  export type UsuarioCreateOrConnectWithoutProfissionalInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutProfissionalInput, UsuarioUncheckedCreateWithoutProfissionalInput>
  }

  export type ConsultaCreateWithoutProfissionalInput = {
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    clinica: ClinicaCreateNestedOneWithoutConsultasInput
    paciente: PacienteCreateNestedOneWithoutConsultasInput
    procedimentos?: ConsultaProcedimentoCreateNestedManyWithoutConsultaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutConsultaInput
    convenio?: ConvenioCreateNestedOneWithoutConsultasInput
  }

  export type ConsultaUncheckedCreateWithoutProfissionalInput = {
    id_consulta?: number
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    paciente_id: number
    id_clinica: number
    id_convenio?: number | null
    procedimentos?: ConsultaProcedimentoUncheckedCreateNestedManyWithoutConsultaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutConsultaInput
  }

  export type ConsultaCreateOrConnectWithoutProfissionalInput = {
    where: ConsultaWhereUniqueInput
    create: XOR<ConsultaCreateWithoutProfissionalInput, ConsultaUncheckedCreateWithoutProfissionalInput>
  }

  export type ConsultaCreateManyProfissionalInputEnvelope = {
    data: ConsultaCreateManyProfissionalInput | ConsultaCreateManyProfissionalInput[]
    skipDuplicates?: boolean
  }

  export type AgendaCreateWithoutProfissionalInput = {
    data: Date | string
    hora_inicio: Date | string
    hora_fim: Date | string
    status: string
    tipo_bloqueio?: string | null
    criado_em?: Date | string
    clinica: ClinicaCreateNestedOneWithoutAgendasInput
  }

  export type AgendaUncheckedCreateWithoutProfissionalInput = {
    id_agenda?: number
    data: Date | string
    hora_inicio: Date | string
    hora_fim: Date | string
    status: string
    tipo_bloqueio?: string | null
    criado_em?: Date | string
    id_clinica: number
  }

  export type AgendaCreateOrConnectWithoutProfissionalInput = {
    where: AgendaWhereUniqueInput
    create: XOR<AgendaCreateWithoutProfissionalInput, AgendaUncheckedCreateWithoutProfissionalInput>
  }

  export type AgendaCreateManyProfissionalInputEnvelope = {
    data: AgendaCreateManyProfissionalInput | AgendaCreateManyProfissionalInput[]
    skipDuplicates?: boolean
  }

  export type ClinicaUpsertWithoutProfissionaisInput = {
    update: XOR<ClinicaUpdateWithoutProfissionaisInput, ClinicaUncheckedUpdateWithoutProfissionaisInput>
    create: XOR<ClinicaCreateWithoutProfissionaisInput, ClinicaUncheckedCreateWithoutProfissionaisInput>
    where?: ClinicaWhereInput
  }

  export type ClinicaUpdateToOneWithWhereWithoutProfissionaisInput = {
    where?: ClinicaWhereInput
    data: XOR<ClinicaUpdateWithoutProfissionaisInput, ClinicaUncheckedUpdateWithoutProfissionaisInput>
  }

  export type ClinicaUpdateWithoutProfissionaisInput = {
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUpdateManyWithoutClinicaNestedInput
  }

  export type ClinicaUncheckedUpdateWithoutProfissionaisInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUncheckedUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUncheckedUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUncheckedUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUncheckedUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUncheckedUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUncheckedUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUncheckedUpdateManyWithoutClinicaNestedInput
  }

  export type UsuarioUpsertWithoutProfissionalInput = {
    update: XOR<UsuarioUpdateWithoutProfissionalInput, UsuarioUncheckedUpdateWithoutProfissionalInput>
    create: XOR<UsuarioCreateWithoutProfissionalInput, UsuarioUncheckedCreateWithoutProfissionalInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutProfissionalInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutProfissionalInput, UsuarioUncheckedUpdateWithoutProfissionalInput>
  }

  export type UsuarioUpdateWithoutProfissionalInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    clinica?: ClinicaUpdateOneRequiredWithoutUsuariosNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutProfissionalInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type ConsultaUpsertWithWhereUniqueWithoutProfissionalInput = {
    where: ConsultaWhereUniqueInput
    update: XOR<ConsultaUpdateWithoutProfissionalInput, ConsultaUncheckedUpdateWithoutProfissionalInput>
    create: XOR<ConsultaCreateWithoutProfissionalInput, ConsultaUncheckedCreateWithoutProfissionalInput>
  }

  export type ConsultaUpdateWithWhereUniqueWithoutProfissionalInput = {
    where: ConsultaWhereUniqueInput
    data: XOR<ConsultaUpdateWithoutProfissionalInput, ConsultaUncheckedUpdateWithoutProfissionalInput>
  }

  export type ConsultaUpdateManyWithWhereWithoutProfissionalInput = {
    where: ConsultaScalarWhereInput
    data: XOR<ConsultaUpdateManyMutationInput, ConsultaUncheckedUpdateManyWithoutProfissionalInput>
  }

  export type AgendaUpsertWithWhereUniqueWithoutProfissionalInput = {
    where: AgendaWhereUniqueInput
    update: XOR<AgendaUpdateWithoutProfissionalInput, AgendaUncheckedUpdateWithoutProfissionalInput>
    create: XOR<AgendaCreateWithoutProfissionalInput, AgendaUncheckedCreateWithoutProfissionalInput>
  }

  export type AgendaUpdateWithWhereUniqueWithoutProfissionalInput = {
    where: AgendaWhereUniqueInput
    data: XOR<AgendaUpdateWithoutProfissionalInput, AgendaUncheckedUpdateWithoutProfissionalInput>
  }

  export type AgendaUpdateManyWithWhereWithoutProfissionalInput = {
    where: AgendaScalarWhereInput
    data: XOR<AgendaUpdateManyMutationInput, AgendaUncheckedUpdateManyWithoutProfissionalInput>
  }

  export type ClinicaCreateWithoutConsultasInput = {
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoCreateNestedManyWithoutClinicaInput
    agendas?: AgendaCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaUncheckedCreateWithoutConsultasInput = {
    id_clinica?: number
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeUncheckedCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteUncheckedCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoUncheckedCreateNestedManyWithoutClinicaInput
    agendas?: AgendaUncheckedCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalUncheckedCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioUncheckedCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaCreateOrConnectWithoutConsultasInput = {
    where: ClinicaWhereUniqueInput
    create: XOR<ClinicaCreateWithoutConsultasInput, ClinicaUncheckedCreateWithoutConsultasInput>
  }

  export type PacienteCreateWithoutConsultasInput = {
    cpf: string
    nome: string
    data_nascimento: Date | string
    email: string
    telefone: string
    codigo_ibge?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    senha?: string | null
    ativo?: boolean
    clinica: ClinicaCreateNestedOneWithoutPacientesInput
    interacao_robo?: InteracaoRoboCreateNestedManyWithoutPacienteInput
  }

  export type PacienteUncheckedCreateWithoutConsultasInput = {
    id_paciente?: number
    cpf: string
    nome: string
    data_nascimento: Date | string
    email: string
    telefone: string
    codigo_ibge?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    senha?: string | null
    ativo?: boolean
    id_clinica: number
    interacao_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutPacienteInput
  }

  export type PacienteCreateOrConnectWithoutConsultasInput = {
    where: PacienteWhereUniqueInput
    create: XOR<PacienteCreateWithoutConsultasInput, PacienteUncheckedCreateWithoutConsultasInput>
  }

  export type ProfissionalDaSaudeCreateWithoutConsultasInput = {
    nome_profissional: string
    imagem_profissional?: string | null
    data_nascimento: Date | string
    cpf: string
    conselho?: string | null
    numero_conselho?: string | null
    uf_conselho?: string | null
    rqe?: string | null
    telefone: string
    email: string
    telemedicina?: boolean
    especialidade?: string | null
    ativo?: boolean
    clinica: ClinicaCreateNestedOneWithoutProfissionaisInput
    usuario?: UsuarioCreateNestedOneWithoutProfissionalInput
    agenda?: AgendaCreateNestedManyWithoutProfissionalInput
  }

  export type ProfissionalDaSaudeUncheckedCreateWithoutConsultasInput = {
    id_profissional_saude?: number
    nome_profissional: string
    imagem_profissional?: string | null
    data_nascimento: Date | string
    cpf: string
    conselho?: string | null
    numero_conselho?: string | null
    uf_conselho?: string | null
    rqe?: string | null
    telefone: string
    email: string
    telemedicina?: boolean
    especialidade?: string | null
    ativo?: boolean
    id_clinica: number
    usuario_id?: number | null
    agenda?: AgendaUncheckedCreateNestedManyWithoutProfissionalInput
  }

  export type ProfissionalDaSaudeCreateOrConnectWithoutConsultasInput = {
    where: ProfissionalDaSaudeWhereUniqueInput
    create: XOR<ProfissionalDaSaudeCreateWithoutConsultasInput, ProfissionalDaSaudeUncheckedCreateWithoutConsultasInput>
  }

  export type ConsultaProcedimentoCreateWithoutConsultaInput = {
    procedimento: ProcedimentoCreateNestedOneWithoutConsultasInput
  }

  export type ConsultaProcedimentoUncheckedCreateWithoutConsultaInput = {
    procedimento_id: number
  }

  export type ConsultaProcedimentoCreateOrConnectWithoutConsultaInput = {
    where: ConsultaProcedimentoWhereUniqueInput
    create: XOR<ConsultaProcedimentoCreateWithoutConsultaInput, ConsultaProcedimentoUncheckedCreateWithoutConsultaInput>
  }

  export type ConsultaProcedimentoCreateManyConsultaInputEnvelope = {
    data: ConsultaProcedimentoCreateManyConsultaInput | ConsultaProcedimentoCreateManyConsultaInput[]
    skipDuplicates?: boolean
  }

  export type AvaliacaoCreateWithoutConsultaInput = {
    data_avaliacao: Date | string
    descricao?: string | null
    parecer_profissional?: string | null
    clinica: ClinicaCreateNestedOneWithoutAvaliacoesInput
  }

  export type AvaliacaoUncheckedCreateWithoutConsultaInput = {
    id_avaliacao?: number
    data_avaliacao: Date | string
    descricao?: string | null
    parecer_profissional?: string | null
    id_clinica: number
  }

  export type AvaliacaoCreateOrConnectWithoutConsultaInput = {
    where: AvaliacaoWhereUniqueInput
    create: XOR<AvaliacaoCreateWithoutConsultaInput, AvaliacaoUncheckedCreateWithoutConsultaInput>
  }

  export type AvaliacaoCreateManyConsultaInputEnvelope = {
    data: AvaliacaoCreateManyConsultaInput | AvaliacaoCreateManyConsultaInput[]
    skipDuplicates?: boolean
  }

  export type ConvenioCreateWithoutConsultasInput = {
    nome: string
    ativo?: boolean
    criado_em?: Date | string
    clinica: ClinicaCreateNestedOneWithoutConveniosInput
    interacoes_robo?: InteracaoRoboCreateNestedManyWithoutConvenioInput
  }

  export type ConvenioUncheckedCreateWithoutConsultasInput = {
    id_convenio?: number
    nome: string
    ativo?: boolean
    id_clinica: number
    criado_em?: Date | string
    interacoes_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutConvenioInput
  }

  export type ConvenioCreateOrConnectWithoutConsultasInput = {
    where: ConvenioWhereUniqueInput
    create: XOR<ConvenioCreateWithoutConsultasInput, ConvenioUncheckedCreateWithoutConsultasInput>
  }

  export type ClinicaUpsertWithoutConsultasInput = {
    update: XOR<ClinicaUpdateWithoutConsultasInput, ClinicaUncheckedUpdateWithoutConsultasInput>
    create: XOR<ClinicaCreateWithoutConsultasInput, ClinicaUncheckedCreateWithoutConsultasInput>
    where?: ClinicaWhereInput
  }

  export type ClinicaUpdateToOneWithWhereWithoutConsultasInput = {
    where?: ClinicaWhereInput
    data: XOR<ClinicaUpdateWithoutConsultasInput, ClinicaUncheckedUpdateWithoutConsultasInput>
  }

  export type ClinicaUpdateWithoutConsultasInput = {
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUpdateManyWithoutClinicaNestedInput
  }

  export type ClinicaUncheckedUpdateWithoutConsultasInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUncheckedUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUncheckedUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUncheckedUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUncheckedUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUncheckedUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUncheckedUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUncheckedUpdateManyWithoutClinicaNestedInput
  }

  export type PacienteUpsertWithoutConsultasInput = {
    update: XOR<PacienteUpdateWithoutConsultasInput, PacienteUncheckedUpdateWithoutConsultasInput>
    create: XOR<PacienteCreateWithoutConsultasInput, PacienteUncheckedCreateWithoutConsultasInput>
    where?: PacienteWhereInput
  }

  export type PacienteUpdateToOneWithWhereWithoutConsultasInput = {
    where?: PacienteWhereInput
    data: XOR<PacienteUpdateWithoutConsultasInput, PacienteUncheckedUpdateWithoutConsultasInput>
  }

  export type PacienteUpdateWithoutConsultasInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    clinica?: ClinicaUpdateOneRequiredWithoutPacientesNestedInput
    interacao_robo?: InteracaoRoboUpdateManyWithoutPacienteNestedInput
  }

  export type PacienteUncheckedUpdateWithoutConsultasInput = {
    id_paciente?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    id_clinica?: IntFieldUpdateOperationsInput | number
    interacao_robo?: InteracaoRoboUncheckedUpdateManyWithoutPacienteNestedInput
  }

  export type ProfissionalDaSaudeUpsertWithoutConsultasInput = {
    update: XOR<ProfissionalDaSaudeUpdateWithoutConsultasInput, ProfissionalDaSaudeUncheckedUpdateWithoutConsultasInput>
    create: XOR<ProfissionalDaSaudeCreateWithoutConsultasInput, ProfissionalDaSaudeUncheckedCreateWithoutConsultasInput>
    where?: ProfissionalDaSaudeWhereInput
  }

  export type ProfissionalDaSaudeUpdateToOneWithWhereWithoutConsultasInput = {
    where?: ProfissionalDaSaudeWhereInput
    data: XOR<ProfissionalDaSaudeUpdateWithoutConsultasInput, ProfissionalDaSaudeUncheckedUpdateWithoutConsultasInput>
  }

  export type ProfissionalDaSaudeUpdateWithoutConsultasInput = {
    nome_profissional?: StringFieldUpdateOperationsInput | string
    imagem_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    conselho?: NullableStringFieldUpdateOperationsInput | string | null
    numero_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    uf_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    rqe?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    clinica?: ClinicaUpdateOneRequiredWithoutProfissionaisNestedInput
    usuario?: UsuarioUpdateOneWithoutProfissionalNestedInput
    agenda?: AgendaUpdateManyWithoutProfissionalNestedInput
  }

  export type ProfissionalDaSaudeUncheckedUpdateWithoutConsultasInput = {
    id_profissional_saude?: IntFieldUpdateOperationsInput | number
    nome_profissional?: StringFieldUpdateOperationsInput | string
    imagem_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    conselho?: NullableStringFieldUpdateOperationsInput | string | null
    numero_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    uf_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    rqe?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    id_clinica?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    agenda?: AgendaUncheckedUpdateManyWithoutProfissionalNestedInput
  }

  export type ConsultaProcedimentoUpsertWithWhereUniqueWithoutConsultaInput = {
    where: ConsultaProcedimentoWhereUniqueInput
    update: XOR<ConsultaProcedimentoUpdateWithoutConsultaInput, ConsultaProcedimentoUncheckedUpdateWithoutConsultaInput>
    create: XOR<ConsultaProcedimentoCreateWithoutConsultaInput, ConsultaProcedimentoUncheckedCreateWithoutConsultaInput>
  }

  export type ConsultaProcedimentoUpdateWithWhereUniqueWithoutConsultaInput = {
    where: ConsultaProcedimentoWhereUniqueInput
    data: XOR<ConsultaProcedimentoUpdateWithoutConsultaInput, ConsultaProcedimentoUncheckedUpdateWithoutConsultaInput>
  }

  export type ConsultaProcedimentoUpdateManyWithWhereWithoutConsultaInput = {
    where: ConsultaProcedimentoScalarWhereInput
    data: XOR<ConsultaProcedimentoUpdateManyMutationInput, ConsultaProcedimentoUncheckedUpdateManyWithoutConsultaInput>
  }

  export type ConsultaProcedimentoScalarWhereInput = {
    AND?: ConsultaProcedimentoScalarWhereInput | ConsultaProcedimentoScalarWhereInput[]
    OR?: ConsultaProcedimentoScalarWhereInput[]
    NOT?: ConsultaProcedimentoScalarWhereInput | ConsultaProcedimentoScalarWhereInput[]
    consulta_id?: IntFilter<"ConsultaProcedimento"> | number
    procedimento_id?: IntFilter<"ConsultaProcedimento"> | number
  }

  export type AvaliacaoUpsertWithWhereUniqueWithoutConsultaInput = {
    where: AvaliacaoWhereUniqueInput
    update: XOR<AvaliacaoUpdateWithoutConsultaInput, AvaliacaoUncheckedUpdateWithoutConsultaInput>
    create: XOR<AvaliacaoCreateWithoutConsultaInput, AvaliacaoUncheckedCreateWithoutConsultaInput>
  }

  export type AvaliacaoUpdateWithWhereUniqueWithoutConsultaInput = {
    where: AvaliacaoWhereUniqueInput
    data: XOR<AvaliacaoUpdateWithoutConsultaInput, AvaliacaoUncheckedUpdateWithoutConsultaInput>
  }

  export type AvaliacaoUpdateManyWithWhereWithoutConsultaInput = {
    where: AvaliacaoScalarWhereInput
    data: XOR<AvaliacaoUpdateManyMutationInput, AvaliacaoUncheckedUpdateManyWithoutConsultaInput>
  }

  export type ConvenioUpsertWithoutConsultasInput = {
    update: XOR<ConvenioUpdateWithoutConsultasInput, ConvenioUncheckedUpdateWithoutConsultasInput>
    create: XOR<ConvenioCreateWithoutConsultasInput, ConvenioUncheckedCreateWithoutConsultasInput>
    where?: ConvenioWhereInput
  }

  export type ConvenioUpdateToOneWithWhereWithoutConsultasInput = {
    where?: ConvenioWhereInput
    data: XOR<ConvenioUpdateWithoutConsultasInput, ConvenioUncheckedUpdateWithoutConsultasInput>
  }

  export type ConvenioUpdateWithoutConsultasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    clinica?: ClinicaUpdateOneRequiredWithoutConveniosNestedInput
    interacoes_robo?: InteracaoRoboUpdateManyWithoutConvenioNestedInput
  }

  export type ConvenioUncheckedUpdateWithoutConsultasInput = {
    id_convenio?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    id_clinica?: IntFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    interacoes_robo?: InteracaoRoboUncheckedUpdateManyWithoutConvenioNestedInput
  }

  export type ClinicaCreateWithoutAvaliacoesInput = {
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoCreateNestedManyWithoutClinicaInput
    agendas?: AgendaCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaUncheckedCreateWithoutAvaliacoesInput = {
    id_clinica?: number
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeUncheckedCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteUncheckedCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaUncheckedCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoUncheckedCreateNestedManyWithoutClinicaInput
    agendas?: AgendaUncheckedCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalUncheckedCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioUncheckedCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaCreateOrConnectWithoutAvaliacoesInput = {
    where: ClinicaWhereUniqueInput
    create: XOR<ClinicaCreateWithoutAvaliacoesInput, ClinicaUncheckedCreateWithoutAvaliacoesInput>
  }

  export type ConsultaCreateWithoutAvaliacoesInput = {
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    clinica: ClinicaCreateNestedOneWithoutConsultasInput
    paciente: PacienteCreateNestedOneWithoutConsultasInput
    profissional: ProfissionalDaSaudeCreateNestedOneWithoutConsultasInput
    procedimentos?: ConsultaProcedimentoCreateNestedManyWithoutConsultaInput
    convenio?: ConvenioCreateNestedOneWithoutConsultasInput
  }

  export type ConsultaUncheckedCreateWithoutAvaliacoesInput = {
    id_consulta?: number
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    paciente_id: number
    profissional_id: number
    id_clinica: number
    id_convenio?: number | null
    procedimentos?: ConsultaProcedimentoUncheckedCreateNestedManyWithoutConsultaInput
  }

  export type ConsultaCreateOrConnectWithoutAvaliacoesInput = {
    where: ConsultaWhereUniqueInput
    create: XOR<ConsultaCreateWithoutAvaliacoesInput, ConsultaUncheckedCreateWithoutAvaliacoesInput>
  }

  export type ClinicaUpsertWithoutAvaliacoesInput = {
    update: XOR<ClinicaUpdateWithoutAvaliacoesInput, ClinicaUncheckedUpdateWithoutAvaliacoesInput>
    create: XOR<ClinicaCreateWithoutAvaliacoesInput, ClinicaUncheckedCreateWithoutAvaliacoesInput>
    where?: ClinicaWhereInput
  }

  export type ClinicaUpdateToOneWithWhereWithoutAvaliacoesInput = {
    where?: ClinicaWhereInput
    data: XOR<ClinicaUpdateWithoutAvaliacoesInput, ClinicaUncheckedUpdateWithoutAvaliacoesInput>
  }

  export type ClinicaUpdateWithoutAvaliacoesInput = {
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUpdateManyWithoutClinicaNestedInput
  }

  export type ClinicaUncheckedUpdateWithoutAvaliacoesInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUncheckedUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUncheckedUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUncheckedUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUncheckedUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUncheckedUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUncheckedUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUncheckedUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUncheckedUpdateManyWithoutClinicaNestedInput
  }

  export type ConsultaUpsertWithoutAvaliacoesInput = {
    update: XOR<ConsultaUpdateWithoutAvaliacoesInput, ConsultaUncheckedUpdateWithoutAvaliacoesInput>
    create: XOR<ConsultaCreateWithoutAvaliacoesInput, ConsultaUncheckedCreateWithoutAvaliacoesInput>
    where?: ConsultaWhereInput
  }

  export type ConsultaUpdateToOneWithWhereWithoutAvaliacoesInput = {
    where?: ConsultaWhereInput
    data: XOR<ConsultaUpdateWithoutAvaliacoesInput, ConsultaUncheckedUpdateWithoutAvaliacoesInput>
  }

  export type ConsultaUpdateWithoutAvaliacoesInput = {
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    clinica?: ClinicaUpdateOneRequiredWithoutConsultasNestedInput
    paciente?: PacienteUpdateOneRequiredWithoutConsultasNestedInput
    profissional?: ProfissionalDaSaudeUpdateOneRequiredWithoutConsultasNestedInput
    procedimentos?: ConsultaProcedimentoUpdateManyWithoutConsultaNestedInput
    convenio?: ConvenioUpdateOneWithoutConsultasNestedInput
  }

  export type ConsultaUncheckedUpdateWithoutAvaliacoesInput = {
    id_consulta?: IntFieldUpdateOperationsInput | number
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    paciente_id?: IntFieldUpdateOperationsInput | number
    profissional_id?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
    procedimentos?: ConsultaProcedimentoUncheckedUpdateManyWithoutConsultaNestedInput
  }

  export type ClinicaCreateWithoutProcedimentosInput = {
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaCreateNestedManyWithoutClinicaInput
    agendas?: AgendaCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaUncheckedCreateWithoutProcedimentosInput = {
    id_clinica?: number
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeUncheckedCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteUncheckedCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaUncheckedCreateNestedManyWithoutClinicaInput
    agendas?: AgendaUncheckedCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalUncheckedCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioUncheckedCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaCreateOrConnectWithoutProcedimentosInput = {
    where: ClinicaWhereUniqueInput
    create: XOR<ClinicaCreateWithoutProcedimentosInput, ClinicaUncheckedCreateWithoutProcedimentosInput>
  }

  export type ConsultaProcedimentoCreateWithoutProcedimentoInput = {
    consulta: ConsultaCreateNestedOneWithoutProcedimentosInput
  }

  export type ConsultaProcedimentoUncheckedCreateWithoutProcedimentoInput = {
    consulta_id: number
  }

  export type ConsultaProcedimentoCreateOrConnectWithoutProcedimentoInput = {
    where: ConsultaProcedimentoWhereUniqueInput
    create: XOR<ConsultaProcedimentoCreateWithoutProcedimentoInput, ConsultaProcedimentoUncheckedCreateWithoutProcedimentoInput>
  }

  export type ConsultaProcedimentoCreateManyProcedimentoInputEnvelope = {
    data: ConsultaProcedimentoCreateManyProcedimentoInput | ConsultaProcedimentoCreateManyProcedimentoInput[]
    skipDuplicates?: boolean
  }

  export type ClinicaUpsertWithoutProcedimentosInput = {
    update: XOR<ClinicaUpdateWithoutProcedimentosInput, ClinicaUncheckedUpdateWithoutProcedimentosInput>
    create: XOR<ClinicaCreateWithoutProcedimentosInput, ClinicaUncheckedCreateWithoutProcedimentosInput>
    where?: ClinicaWhereInput
  }

  export type ClinicaUpdateToOneWithWhereWithoutProcedimentosInput = {
    where?: ClinicaWhereInput
    data: XOR<ClinicaUpdateWithoutProcedimentosInput, ClinicaUncheckedUpdateWithoutProcedimentosInput>
  }

  export type ClinicaUpdateWithoutProcedimentosInput = {
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUpdateManyWithoutClinicaNestedInput
  }

  export type ClinicaUncheckedUpdateWithoutProcedimentosInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUncheckedUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUncheckedUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUncheckedUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUncheckedUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUncheckedUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUncheckedUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUncheckedUpdateManyWithoutClinicaNestedInput
  }

  export type ConsultaProcedimentoUpsertWithWhereUniqueWithoutProcedimentoInput = {
    where: ConsultaProcedimentoWhereUniqueInput
    update: XOR<ConsultaProcedimentoUpdateWithoutProcedimentoInput, ConsultaProcedimentoUncheckedUpdateWithoutProcedimentoInput>
    create: XOR<ConsultaProcedimentoCreateWithoutProcedimentoInput, ConsultaProcedimentoUncheckedCreateWithoutProcedimentoInput>
  }

  export type ConsultaProcedimentoUpdateWithWhereUniqueWithoutProcedimentoInput = {
    where: ConsultaProcedimentoWhereUniqueInput
    data: XOR<ConsultaProcedimentoUpdateWithoutProcedimentoInput, ConsultaProcedimentoUncheckedUpdateWithoutProcedimentoInput>
  }

  export type ConsultaProcedimentoUpdateManyWithWhereWithoutProcedimentoInput = {
    where: ConsultaProcedimentoScalarWhereInput
    data: XOR<ConsultaProcedimentoUpdateManyMutationInput, ConsultaProcedimentoUncheckedUpdateManyWithoutProcedimentoInput>
  }

  export type ConsultaCreateWithoutProcedimentosInput = {
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    clinica: ClinicaCreateNestedOneWithoutConsultasInput
    paciente: PacienteCreateNestedOneWithoutConsultasInput
    profissional: ProfissionalDaSaudeCreateNestedOneWithoutConsultasInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutConsultaInput
    convenio?: ConvenioCreateNestedOneWithoutConsultasInput
  }

  export type ConsultaUncheckedCreateWithoutProcedimentosInput = {
    id_consulta?: number
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    paciente_id: number
    profissional_id: number
    id_clinica: number
    id_convenio?: number | null
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutConsultaInput
  }

  export type ConsultaCreateOrConnectWithoutProcedimentosInput = {
    where: ConsultaWhereUniqueInput
    create: XOR<ConsultaCreateWithoutProcedimentosInput, ConsultaUncheckedCreateWithoutProcedimentosInput>
  }

  export type ProcedimentoCreateWithoutConsultasInput = {
    nome_procedimento: string
    tipo: string
    valor: number
    duracao_minutos: number
    telemedicina?: boolean
    descricao?: string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string | null
    clinica: ClinicaCreateNestedOneWithoutProcedimentosInput
  }

  export type ProcedimentoUncheckedCreateWithoutConsultasInput = {
    id_procedimento?: number
    nome_procedimento: string
    tipo: string
    valor: number
    duracao_minutos: number
    telemedicina?: boolean
    descricao?: string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string | null
    id_clinica: number
  }

  export type ProcedimentoCreateOrConnectWithoutConsultasInput = {
    where: ProcedimentoWhereUniqueInput
    create: XOR<ProcedimentoCreateWithoutConsultasInput, ProcedimentoUncheckedCreateWithoutConsultasInput>
  }

  export type ConsultaUpsertWithoutProcedimentosInput = {
    update: XOR<ConsultaUpdateWithoutProcedimentosInput, ConsultaUncheckedUpdateWithoutProcedimentosInput>
    create: XOR<ConsultaCreateWithoutProcedimentosInput, ConsultaUncheckedCreateWithoutProcedimentosInput>
    where?: ConsultaWhereInput
  }

  export type ConsultaUpdateToOneWithWhereWithoutProcedimentosInput = {
    where?: ConsultaWhereInput
    data: XOR<ConsultaUpdateWithoutProcedimentosInput, ConsultaUncheckedUpdateWithoutProcedimentosInput>
  }

  export type ConsultaUpdateWithoutProcedimentosInput = {
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    clinica?: ClinicaUpdateOneRequiredWithoutConsultasNestedInput
    paciente?: PacienteUpdateOneRequiredWithoutConsultasNestedInput
    profissional?: ProfissionalDaSaudeUpdateOneRequiredWithoutConsultasNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutConsultaNestedInput
    convenio?: ConvenioUpdateOneWithoutConsultasNestedInput
  }

  export type ConsultaUncheckedUpdateWithoutProcedimentosInput = {
    id_consulta?: IntFieldUpdateOperationsInput | number
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    paciente_id?: IntFieldUpdateOperationsInput | number
    profissional_id?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutConsultaNestedInput
  }

  export type ProcedimentoUpsertWithoutConsultasInput = {
    update: XOR<ProcedimentoUpdateWithoutConsultasInput, ProcedimentoUncheckedUpdateWithoutConsultasInput>
    create: XOR<ProcedimentoCreateWithoutConsultasInput, ProcedimentoUncheckedCreateWithoutConsultasInput>
    where?: ProcedimentoWhereInput
  }

  export type ProcedimentoUpdateToOneWithWhereWithoutConsultasInput = {
    where?: ProcedimentoWhereInput
    data: XOR<ProcedimentoUpdateWithoutConsultasInput, ProcedimentoUncheckedUpdateWithoutConsultasInput>
  }

  export type ProcedimentoUpdateWithoutConsultasInput = {
    nome_procedimento?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    duracao_minutos?: IntFieldUpdateOperationsInput | number
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clinica?: ClinicaUpdateOneRequiredWithoutProcedimentosNestedInput
  }

  export type ProcedimentoUncheckedUpdateWithoutConsultasInput = {
    id_procedimento?: IntFieldUpdateOperationsInput | number
    nome_procedimento?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    duracao_minutos?: IntFieldUpdateOperationsInput | number
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type ClinicaCreateWithoutAgendasInput = {
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaUncheckedCreateWithoutAgendasInput = {
    id_clinica?: number
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeUncheckedCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteUncheckedCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaUncheckedCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoUncheckedCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalUncheckedCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioUncheckedCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaCreateOrConnectWithoutAgendasInput = {
    where: ClinicaWhereUniqueInput
    create: XOR<ClinicaCreateWithoutAgendasInput, ClinicaUncheckedCreateWithoutAgendasInput>
  }

  export type ProfissionalDaSaudeCreateWithoutAgendaInput = {
    nome_profissional: string
    imagem_profissional?: string | null
    data_nascimento: Date | string
    cpf: string
    conselho?: string | null
    numero_conselho?: string | null
    uf_conselho?: string | null
    rqe?: string | null
    telefone: string
    email: string
    telemedicina?: boolean
    especialidade?: string | null
    ativo?: boolean
    clinica: ClinicaCreateNestedOneWithoutProfissionaisInput
    usuario?: UsuarioCreateNestedOneWithoutProfissionalInput
    consultas?: ConsultaCreateNestedManyWithoutProfissionalInput
  }

  export type ProfissionalDaSaudeUncheckedCreateWithoutAgendaInput = {
    id_profissional_saude?: number
    nome_profissional: string
    imagem_profissional?: string | null
    data_nascimento: Date | string
    cpf: string
    conselho?: string | null
    numero_conselho?: string | null
    uf_conselho?: string | null
    rqe?: string | null
    telefone: string
    email: string
    telemedicina?: boolean
    especialidade?: string | null
    ativo?: boolean
    id_clinica: number
    usuario_id?: number | null
    consultas?: ConsultaUncheckedCreateNestedManyWithoutProfissionalInput
  }

  export type ProfissionalDaSaudeCreateOrConnectWithoutAgendaInput = {
    where: ProfissionalDaSaudeWhereUniqueInput
    create: XOR<ProfissionalDaSaudeCreateWithoutAgendaInput, ProfissionalDaSaudeUncheckedCreateWithoutAgendaInput>
  }

  export type ClinicaUpsertWithoutAgendasInput = {
    update: XOR<ClinicaUpdateWithoutAgendasInput, ClinicaUncheckedUpdateWithoutAgendasInput>
    create: XOR<ClinicaCreateWithoutAgendasInput, ClinicaUncheckedCreateWithoutAgendasInput>
    where?: ClinicaWhereInput
  }

  export type ClinicaUpdateToOneWithWhereWithoutAgendasInput = {
    where?: ClinicaWhereInput
    data: XOR<ClinicaUpdateWithoutAgendasInput, ClinicaUncheckedUpdateWithoutAgendasInput>
  }

  export type ClinicaUpdateWithoutAgendasInput = {
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUpdateManyWithoutClinicaNestedInput
  }

  export type ClinicaUncheckedUpdateWithoutAgendasInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUncheckedUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUncheckedUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUncheckedUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUncheckedUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUncheckedUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUncheckedUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUncheckedUpdateManyWithoutClinicaNestedInput
  }

  export type ProfissionalDaSaudeUpsertWithoutAgendaInput = {
    update: XOR<ProfissionalDaSaudeUpdateWithoutAgendaInput, ProfissionalDaSaudeUncheckedUpdateWithoutAgendaInput>
    create: XOR<ProfissionalDaSaudeCreateWithoutAgendaInput, ProfissionalDaSaudeUncheckedCreateWithoutAgendaInput>
    where?: ProfissionalDaSaudeWhereInput
  }

  export type ProfissionalDaSaudeUpdateToOneWithWhereWithoutAgendaInput = {
    where?: ProfissionalDaSaudeWhereInput
    data: XOR<ProfissionalDaSaudeUpdateWithoutAgendaInput, ProfissionalDaSaudeUncheckedUpdateWithoutAgendaInput>
  }

  export type ProfissionalDaSaudeUpdateWithoutAgendaInput = {
    nome_profissional?: StringFieldUpdateOperationsInput | string
    imagem_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    conselho?: NullableStringFieldUpdateOperationsInput | string | null
    numero_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    uf_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    rqe?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    clinica?: ClinicaUpdateOneRequiredWithoutProfissionaisNestedInput
    usuario?: UsuarioUpdateOneWithoutProfissionalNestedInput
    consultas?: ConsultaUpdateManyWithoutProfissionalNestedInput
  }

  export type ProfissionalDaSaudeUncheckedUpdateWithoutAgendaInput = {
    id_profissional_saude?: IntFieldUpdateOperationsInput | number
    nome_profissional?: StringFieldUpdateOperationsInput | string
    imagem_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    conselho?: NullableStringFieldUpdateOperationsInput | string | null
    numero_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    uf_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    rqe?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    id_clinica?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    consultas?: ConsultaUncheckedUpdateManyWithoutProfissionalNestedInput
  }

  export type ClinicaCreateWithoutControle_operacionalInput = {
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoCreateNestedManyWithoutClinicaInput
    agendas?: AgendaCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaUncheckedCreateWithoutControle_operacionalInput = {
    id_clinica?: number
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeUncheckedCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteUncheckedCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaUncheckedCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoUncheckedCreateNestedManyWithoutClinicaInput
    agendas?: AgendaUncheckedCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioUncheckedCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaCreateOrConnectWithoutControle_operacionalInput = {
    where: ClinicaWhereUniqueInput
    create: XOR<ClinicaCreateWithoutControle_operacionalInput, ClinicaUncheckedCreateWithoutControle_operacionalInput>
  }

  export type ClinicaUpsertWithoutControle_operacionalInput = {
    update: XOR<ClinicaUpdateWithoutControle_operacionalInput, ClinicaUncheckedUpdateWithoutControle_operacionalInput>
    create: XOR<ClinicaCreateWithoutControle_operacionalInput, ClinicaUncheckedCreateWithoutControle_operacionalInput>
    where?: ClinicaWhereInput
  }

  export type ClinicaUpdateToOneWithWhereWithoutControle_operacionalInput = {
    where?: ClinicaWhereInput
    data: XOR<ClinicaUpdateWithoutControle_operacionalInput, ClinicaUncheckedUpdateWithoutControle_operacionalInput>
  }

  export type ClinicaUpdateWithoutControle_operacionalInput = {
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUpdateManyWithoutClinicaNestedInput
  }

  export type ClinicaUncheckedUpdateWithoutControle_operacionalInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUncheckedUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUncheckedUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUncheckedUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUncheckedUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUncheckedUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUncheckedUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUncheckedUpdateManyWithoutClinicaNestedInput
  }

  export type PacienteCreateWithoutInteracao_roboInput = {
    cpf: string
    nome: string
    data_nascimento: Date | string
    email: string
    telefone: string
    codigo_ibge?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    senha?: string | null
    ativo?: boolean
    clinica: ClinicaCreateNestedOneWithoutPacientesInput
    consultas?: ConsultaCreateNestedManyWithoutPacienteInput
  }

  export type PacienteUncheckedCreateWithoutInteracao_roboInput = {
    id_paciente?: number
    cpf: string
    nome: string
    data_nascimento: Date | string
    email: string
    telefone: string
    codigo_ibge?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    senha?: string | null
    ativo?: boolean
    id_clinica: number
    consultas?: ConsultaUncheckedCreateNestedManyWithoutPacienteInput
  }

  export type PacienteCreateOrConnectWithoutInteracao_roboInput = {
    where: PacienteWhereUniqueInput
    create: XOR<PacienteCreateWithoutInteracao_roboInput, PacienteUncheckedCreateWithoutInteracao_roboInput>
  }

  export type ClinicaCreateWithoutInteracao_roboInput = {
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoCreateNestedManyWithoutClinicaInput
    agendas?: AgendaCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaUncheckedCreateWithoutInteracao_roboInput = {
    id_clinica?: number
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeUncheckedCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteUncheckedCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaUncheckedCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoUncheckedCreateNestedManyWithoutClinicaInput
    agendas?: AgendaUncheckedCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalUncheckedCreateNestedManyWithoutClinicaInput
    convenios?: ConvenioUncheckedCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaCreateOrConnectWithoutInteracao_roboInput = {
    where: ClinicaWhereUniqueInput
    create: XOR<ClinicaCreateWithoutInteracao_roboInput, ClinicaUncheckedCreateWithoutInteracao_roboInput>
  }

  export type ConvenioCreateWithoutInteracoes_roboInput = {
    nome: string
    ativo?: boolean
    criado_em?: Date | string
    clinica: ClinicaCreateNestedOneWithoutConveniosInput
    consultas?: ConsultaCreateNestedManyWithoutConvenioInput
  }

  export type ConvenioUncheckedCreateWithoutInteracoes_roboInput = {
    id_convenio?: number
    nome: string
    ativo?: boolean
    id_clinica: number
    criado_em?: Date | string
    consultas?: ConsultaUncheckedCreateNestedManyWithoutConvenioInput
  }

  export type ConvenioCreateOrConnectWithoutInteracoes_roboInput = {
    where: ConvenioWhereUniqueInput
    create: XOR<ConvenioCreateWithoutInteracoes_roboInput, ConvenioUncheckedCreateWithoutInteracoes_roboInput>
  }

  export type PacienteUpsertWithoutInteracao_roboInput = {
    update: XOR<PacienteUpdateWithoutInteracao_roboInput, PacienteUncheckedUpdateWithoutInteracao_roboInput>
    create: XOR<PacienteCreateWithoutInteracao_roboInput, PacienteUncheckedCreateWithoutInteracao_roboInput>
    where?: PacienteWhereInput
  }

  export type PacienteUpdateToOneWithWhereWithoutInteracao_roboInput = {
    where?: PacienteWhereInput
    data: XOR<PacienteUpdateWithoutInteracao_roboInput, PacienteUncheckedUpdateWithoutInteracao_roboInput>
  }

  export type PacienteUpdateWithoutInteracao_roboInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    clinica?: ClinicaUpdateOneRequiredWithoutPacientesNestedInput
    consultas?: ConsultaUpdateManyWithoutPacienteNestedInput
  }

  export type PacienteUncheckedUpdateWithoutInteracao_roboInput = {
    id_paciente?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    id_clinica?: IntFieldUpdateOperationsInput | number
    consultas?: ConsultaUncheckedUpdateManyWithoutPacienteNestedInput
  }

  export type ClinicaUpsertWithoutInteracao_roboInput = {
    update: XOR<ClinicaUpdateWithoutInteracao_roboInput, ClinicaUncheckedUpdateWithoutInteracao_roboInput>
    create: XOR<ClinicaCreateWithoutInteracao_roboInput, ClinicaUncheckedCreateWithoutInteracao_roboInput>
    where?: ClinicaWhereInput
  }

  export type ClinicaUpdateToOneWithWhereWithoutInteracao_roboInput = {
    where?: ClinicaWhereInput
    data: XOR<ClinicaUpdateWithoutInteracao_roboInput, ClinicaUncheckedUpdateWithoutInteracao_roboInput>
  }

  export type ClinicaUpdateWithoutInteracao_roboInput = {
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUpdateManyWithoutClinicaNestedInput
  }

  export type ClinicaUncheckedUpdateWithoutInteracao_roboInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUncheckedUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUncheckedUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUncheckedUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUncheckedUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUncheckedUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUncheckedUpdateManyWithoutClinicaNestedInput
    convenios?: ConvenioUncheckedUpdateManyWithoutClinicaNestedInput
  }

  export type ConvenioUpsertWithoutInteracoes_roboInput = {
    update: XOR<ConvenioUpdateWithoutInteracoes_roboInput, ConvenioUncheckedUpdateWithoutInteracoes_roboInput>
    create: XOR<ConvenioCreateWithoutInteracoes_roboInput, ConvenioUncheckedCreateWithoutInteracoes_roboInput>
    where?: ConvenioWhereInput
  }

  export type ConvenioUpdateToOneWithWhereWithoutInteracoes_roboInput = {
    where?: ConvenioWhereInput
    data: XOR<ConvenioUpdateWithoutInteracoes_roboInput, ConvenioUncheckedUpdateWithoutInteracoes_roboInput>
  }

  export type ConvenioUpdateWithoutInteracoes_roboInput = {
    nome?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    clinica?: ClinicaUpdateOneRequiredWithoutConveniosNestedInput
    consultas?: ConsultaUpdateManyWithoutConvenioNestedInput
  }

  export type ConvenioUncheckedUpdateWithoutInteracoes_roboInput = {
    id_convenio?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    id_clinica?: IntFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    consultas?: ConsultaUncheckedUpdateManyWithoutConvenioNestedInput
  }

  export type ClinicaCreateWithoutConveniosInput = {
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoCreateNestedManyWithoutClinicaInput
    agendas?: AgendaCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaUncheckedCreateWithoutConveniosInput = {
    id_clinica?: number
    nome_clinica: string
    telefone?: string | null
    email?: string | null
    cnpj?: string | null
    razao_social?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    codigo_ibge?: string | null
    plano?: string
    ativo?: boolean
    criado_em?: Date | string
    usuarios?: UsuarioUncheckedCreateNestedManyWithoutClinicaInput
    profissionais?: ProfissionalDaSaudeUncheckedCreateNestedManyWithoutClinicaInput
    pacientes?: PacienteUncheckedCreateNestedManyWithoutClinicaInput
    consultas?: ConsultaUncheckedCreateNestedManyWithoutClinicaInput
    procedimentos?: ProcedimentoUncheckedCreateNestedManyWithoutClinicaInput
    agendas?: AgendaUncheckedCreateNestedManyWithoutClinicaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutClinicaInput
    controle_operacional?: ControleOperacionalUncheckedCreateNestedManyWithoutClinicaInput
    interacao_robo?: InteracaoRoboUncheckedCreateNestedManyWithoutClinicaInput
  }

  export type ClinicaCreateOrConnectWithoutConveniosInput = {
    where: ClinicaWhereUniqueInput
    create: XOR<ClinicaCreateWithoutConveniosInput, ClinicaUncheckedCreateWithoutConveniosInput>
  }

  export type ConsultaCreateWithoutConvenioInput = {
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    clinica: ClinicaCreateNestedOneWithoutConsultasInput
    paciente: PacienteCreateNestedOneWithoutConsultasInput
    profissional: ProfissionalDaSaudeCreateNestedOneWithoutConsultasInput
    procedimentos?: ConsultaProcedimentoCreateNestedManyWithoutConsultaInput
    avaliacoes?: AvaliacaoCreateNestedManyWithoutConsultaInput
  }

  export type ConsultaUncheckedCreateWithoutConvenioInput = {
    id_consulta?: number
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    paciente_id: number
    profissional_id: number
    id_clinica: number
    procedimentos?: ConsultaProcedimentoUncheckedCreateNestedManyWithoutConsultaInput
    avaliacoes?: AvaliacaoUncheckedCreateNestedManyWithoutConsultaInput
  }

  export type ConsultaCreateOrConnectWithoutConvenioInput = {
    where: ConsultaWhereUniqueInput
    create: XOR<ConsultaCreateWithoutConvenioInput, ConsultaUncheckedCreateWithoutConvenioInput>
  }

  export type ConsultaCreateManyConvenioInputEnvelope = {
    data: ConsultaCreateManyConvenioInput | ConsultaCreateManyConvenioInput[]
    skipDuplicates?: boolean
  }

  export type InteracaoRoboCreateWithoutConvenioInput = {
    tipo: string
    data_interacao?: Date | string
    paciente: PacienteCreateNestedOneWithoutInteracao_roboInput
    clinica: ClinicaCreateNestedOneWithoutInteracao_roboInput
  }

  export type InteracaoRoboUncheckedCreateWithoutConvenioInput = {
    id_interacao?: number
    id_clinica: number
    id_paciente: number
    tipo: string
    data_interacao?: Date | string
  }

  export type InteracaoRoboCreateOrConnectWithoutConvenioInput = {
    where: InteracaoRoboWhereUniqueInput
    create: XOR<InteracaoRoboCreateWithoutConvenioInput, InteracaoRoboUncheckedCreateWithoutConvenioInput>
  }

  export type InteracaoRoboCreateManyConvenioInputEnvelope = {
    data: InteracaoRoboCreateManyConvenioInput | InteracaoRoboCreateManyConvenioInput[]
    skipDuplicates?: boolean
  }

  export type ClinicaUpsertWithoutConveniosInput = {
    update: XOR<ClinicaUpdateWithoutConveniosInput, ClinicaUncheckedUpdateWithoutConveniosInput>
    create: XOR<ClinicaCreateWithoutConveniosInput, ClinicaUncheckedCreateWithoutConveniosInput>
    where?: ClinicaWhereInput
  }

  export type ClinicaUpdateToOneWithWhereWithoutConveniosInput = {
    where?: ClinicaWhereInput
    data: XOR<ClinicaUpdateWithoutConveniosInput, ClinicaUncheckedUpdateWithoutConveniosInput>
  }

  export type ClinicaUpdateWithoutConveniosInput = {
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUpdateManyWithoutClinicaNestedInput
  }

  export type ClinicaUncheckedUpdateWithoutConveniosInput = {
    id_clinica?: IntFieldUpdateOperationsInput | number
    nome_clinica?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    razao_social?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    plano?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuarioUncheckedUpdateManyWithoutClinicaNestedInput
    profissionais?: ProfissionalDaSaudeUncheckedUpdateManyWithoutClinicaNestedInput
    pacientes?: PacienteUncheckedUpdateManyWithoutClinicaNestedInput
    consultas?: ConsultaUncheckedUpdateManyWithoutClinicaNestedInput
    procedimentos?: ProcedimentoUncheckedUpdateManyWithoutClinicaNestedInput
    agendas?: AgendaUncheckedUpdateManyWithoutClinicaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutClinicaNestedInput
    controle_operacional?: ControleOperacionalUncheckedUpdateManyWithoutClinicaNestedInput
    interacao_robo?: InteracaoRoboUncheckedUpdateManyWithoutClinicaNestedInput
  }

  export type ConsultaUpsertWithWhereUniqueWithoutConvenioInput = {
    where: ConsultaWhereUniqueInput
    update: XOR<ConsultaUpdateWithoutConvenioInput, ConsultaUncheckedUpdateWithoutConvenioInput>
    create: XOR<ConsultaCreateWithoutConvenioInput, ConsultaUncheckedCreateWithoutConvenioInput>
  }

  export type ConsultaUpdateWithWhereUniqueWithoutConvenioInput = {
    where: ConsultaWhereUniqueInput
    data: XOR<ConsultaUpdateWithoutConvenioInput, ConsultaUncheckedUpdateWithoutConvenioInput>
  }

  export type ConsultaUpdateManyWithWhereWithoutConvenioInput = {
    where: ConsultaScalarWhereInput
    data: XOR<ConsultaUpdateManyMutationInput, ConsultaUncheckedUpdateManyWithoutConvenioInput>
  }

  export type InteracaoRoboUpsertWithWhereUniqueWithoutConvenioInput = {
    where: InteracaoRoboWhereUniqueInput
    update: XOR<InteracaoRoboUpdateWithoutConvenioInput, InteracaoRoboUncheckedUpdateWithoutConvenioInput>
    create: XOR<InteracaoRoboCreateWithoutConvenioInput, InteracaoRoboUncheckedCreateWithoutConvenioInput>
  }

  export type InteracaoRoboUpdateWithWhereUniqueWithoutConvenioInput = {
    where: InteracaoRoboWhereUniqueInput
    data: XOR<InteracaoRoboUpdateWithoutConvenioInput, InteracaoRoboUncheckedUpdateWithoutConvenioInput>
  }

  export type InteracaoRoboUpdateManyWithWhereWithoutConvenioInput = {
    where: InteracaoRoboScalarWhereInput
    data: XOR<InteracaoRoboUpdateManyMutationInput, InteracaoRoboUncheckedUpdateManyWithoutConvenioInput>
  }

  export type UsuarioCreateManyClinicaInput = {
    id_usuario?: number
    nome: string
    email: string
    senha: string
    tipo: string
    ativo?: boolean
    criado_em?: Date | string
  }

  export type ProfissionalDaSaudeCreateManyClinicaInput = {
    id_profissional_saude?: number
    nome_profissional: string
    imagem_profissional?: string | null
    data_nascimento: Date | string
    cpf: string
    conselho?: string | null
    numero_conselho?: string | null
    uf_conselho?: string | null
    rqe?: string | null
    telefone: string
    email: string
    telemedicina?: boolean
    especialidade?: string | null
    ativo?: boolean
    usuario_id?: number | null
  }

  export type PacienteCreateManyClinicaInput = {
    id_paciente?: number
    cpf: string
    nome: string
    data_nascimento: Date | string
    email: string
    telefone: string
    codigo_ibge?: string | null
    cep?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    bairro?: string | null
    cidade?: string | null
    uf?: string | null
    senha?: string | null
    ativo?: boolean
  }

  export type ConsultaCreateManyClinicaInput = {
    id_consulta?: number
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    paciente_id: number
    profissional_id: number
    id_convenio?: number | null
  }

  export type ProcedimentoCreateManyClinicaInput = {
    id_procedimento?: number
    nome_procedimento: string
    tipo: string
    valor: number
    duracao_minutos: number
    telemedicina?: boolean
    descricao?: string | null
    ativo?: boolean
    criado_em?: Date | string
    atualizado_em?: Date | string | null
  }

  export type AgendaCreateManyClinicaInput = {
    id_agenda?: number
    data: Date | string
    hora_inicio: Date | string
    hora_fim: Date | string
    status: string
    tipo_bloqueio?: string | null
    criado_em?: Date | string
    profissional_id: number
  }

  export type AvaliacaoCreateManyClinicaInput = {
    id_avaliacao?: number
    consulta_id: number
    data_avaliacao: Date | string
    descricao?: string | null
    parecer_profissional?: string | null
  }

  export type ControleOperacionalCreateManyClinicaInput = {
    id_controle?: number
    data_referencia?: Date | string
    pacientes_agendados?: number
    pacientes_nao_agendados?: number
    pacientes_faltantes?: number
    nps?: number | null
    total_consultas?: number
    total_procedimentos?: number
    valor_arrecadado?: number
    horas_robo_trabalhadas?: number
    economia_estimada?: number
    criado_em?: Date | string
  }

  export type InteracaoRoboCreateManyClinicaInput = {
    id_interacao?: number
    id_paciente: number
    tipo: string
    data_interacao?: Date | string
    id_convenio?: number | null
  }

  export type ConvenioCreateManyClinicaInput = {
    id_convenio?: number
    nome: string
    ativo?: boolean
    criado_em?: Date | string
  }

  export type UsuarioUpdateWithoutClinicaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    profissional?: ProfissionalDaSaudeUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutClinicaInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    profissional?: ProfissionalDaSaudeUncheckedUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutClinicaInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfissionalDaSaudeUpdateWithoutClinicaInput = {
    nome_profissional?: StringFieldUpdateOperationsInput | string
    imagem_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    conselho?: NullableStringFieldUpdateOperationsInput | string | null
    numero_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    uf_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    rqe?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    usuario?: UsuarioUpdateOneWithoutProfissionalNestedInput
    consultas?: ConsultaUpdateManyWithoutProfissionalNestedInput
    agenda?: AgendaUpdateManyWithoutProfissionalNestedInput
  }

  export type ProfissionalDaSaudeUncheckedUpdateWithoutClinicaInput = {
    id_profissional_saude?: IntFieldUpdateOperationsInput | number
    nome_profissional?: StringFieldUpdateOperationsInput | string
    imagem_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    conselho?: NullableStringFieldUpdateOperationsInput | string | null
    numero_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    uf_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    rqe?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    consultas?: ConsultaUncheckedUpdateManyWithoutProfissionalNestedInput
    agenda?: AgendaUncheckedUpdateManyWithoutProfissionalNestedInput
  }

  export type ProfissionalDaSaudeUncheckedUpdateManyWithoutClinicaInput = {
    id_profissional_saude?: IntFieldUpdateOperationsInput | number
    nome_profissional?: StringFieldUpdateOperationsInput | string
    imagem_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    cpf?: StringFieldUpdateOperationsInput | string
    conselho?: NullableStringFieldUpdateOperationsInput | string | null
    numero_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    uf_conselho?: NullableStringFieldUpdateOperationsInput | string | null
    rqe?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    especialidade?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PacienteUpdateWithoutClinicaInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    consultas?: ConsultaUpdateManyWithoutPacienteNestedInput
    interacao_robo?: InteracaoRoboUpdateManyWithoutPacienteNestedInput
  }

  export type PacienteUncheckedUpdateWithoutClinicaInput = {
    id_paciente?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    consultas?: ConsultaUncheckedUpdateManyWithoutPacienteNestedInput
    interacao_robo?: InteracaoRoboUncheckedUpdateManyWithoutPacienteNestedInput
  }

  export type PacienteUncheckedUpdateManyWithoutClinicaInput = {
    id_paciente?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    codigo_ibge?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    uf?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ConsultaUpdateWithoutClinicaInput = {
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    paciente?: PacienteUpdateOneRequiredWithoutConsultasNestedInput
    profissional?: ProfissionalDaSaudeUpdateOneRequiredWithoutConsultasNestedInput
    procedimentos?: ConsultaProcedimentoUpdateManyWithoutConsultaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutConsultaNestedInput
    convenio?: ConvenioUpdateOneWithoutConsultasNestedInput
  }

  export type ConsultaUncheckedUpdateWithoutClinicaInput = {
    id_consulta?: IntFieldUpdateOperationsInput | number
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    paciente_id?: IntFieldUpdateOperationsInput | number
    profissional_id?: IntFieldUpdateOperationsInput | number
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
    procedimentos?: ConsultaProcedimentoUncheckedUpdateManyWithoutConsultaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutConsultaNestedInput
  }

  export type ConsultaUncheckedUpdateManyWithoutClinicaInput = {
    id_consulta?: IntFieldUpdateOperationsInput | number
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    paciente_id?: IntFieldUpdateOperationsInput | number
    profissional_id?: IntFieldUpdateOperationsInput | number
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ProcedimentoUpdateWithoutClinicaInput = {
    nome_procedimento?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    duracao_minutos?: IntFieldUpdateOperationsInput | number
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultas?: ConsultaProcedimentoUpdateManyWithoutProcedimentoNestedInput
  }

  export type ProcedimentoUncheckedUpdateWithoutClinicaInput = {
    id_procedimento?: IntFieldUpdateOperationsInput | number
    nome_procedimento?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    duracao_minutos?: IntFieldUpdateOperationsInput | number
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultas?: ConsultaProcedimentoUncheckedUpdateManyWithoutProcedimentoNestedInput
  }

  export type ProcedimentoUncheckedUpdateManyWithoutClinicaInput = {
    id_procedimento?: IntFieldUpdateOperationsInput | number
    nome_procedimento?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    duracao_minutos?: IntFieldUpdateOperationsInput | number
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado_em?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgendaUpdateWithoutClinicaInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    tipo_bloqueio?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    profissional?: ProfissionalDaSaudeUpdateOneRequiredWithoutAgendaNestedInput
  }

  export type AgendaUncheckedUpdateWithoutClinicaInput = {
    id_agenda?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    tipo_bloqueio?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    profissional_id?: IntFieldUpdateOperationsInput | number
  }

  export type AgendaUncheckedUpdateManyWithoutClinicaInput = {
    id_agenda?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    tipo_bloqueio?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    profissional_id?: IntFieldUpdateOperationsInput | number
  }

  export type AvaliacaoUpdateWithoutClinicaInput = {
    data_avaliacao?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    parecer_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    consulta?: ConsultaUpdateOneRequiredWithoutAvaliacoesNestedInput
  }

  export type AvaliacaoUncheckedUpdateWithoutClinicaInput = {
    id_avaliacao?: IntFieldUpdateOperationsInput | number
    consulta_id?: IntFieldUpdateOperationsInput | number
    data_avaliacao?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    parecer_profissional?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AvaliacaoUncheckedUpdateManyWithoutClinicaInput = {
    id_avaliacao?: IntFieldUpdateOperationsInput | number
    consulta_id?: IntFieldUpdateOperationsInput | number
    data_avaliacao?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    parecer_profissional?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ControleOperacionalUpdateWithoutClinicaInput = {
    data_referencia?: DateTimeFieldUpdateOperationsInput | Date | string
    pacientes_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_nao_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_faltantes?: IntFieldUpdateOperationsInput | number
    nps?: NullableIntFieldUpdateOperationsInput | number | null
    total_consultas?: IntFieldUpdateOperationsInput | number
    total_procedimentos?: IntFieldUpdateOperationsInput | number
    valor_arrecadado?: FloatFieldUpdateOperationsInput | number
    horas_robo_trabalhadas?: FloatFieldUpdateOperationsInput | number
    economia_estimada?: FloatFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ControleOperacionalUncheckedUpdateWithoutClinicaInput = {
    id_controle?: IntFieldUpdateOperationsInput | number
    data_referencia?: DateTimeFieldUpdateOperationsInput | Date | string
    pacientes_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_nao_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_faltantes?: IntFieldUpdateOperationsInput | number
    nps?: NullableIntFieldUpdateOperationsInput | number | null
    total_consultas?: IntFieldUpdateOperationsInput | number
    total_procedimentos?: IntFieldUpdateOperationsInput | number
    valor_arrecadado?: FloatFieldUpdateOperationsInput | number
    horas_robo_trabalhadas?: FloatFieldUpdateOperationsInput | number
    economia_estimada?: FloatFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ControleOperacionalUncheckedUpdateManyWithoutClinicaInput = {
    id_controle?: IntFieldUpdateOperationsInput | number
    data_referencia?: DateTimeFieldUpdateOperationsInput | Date | string
    pacientes_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_nao_agendados?: IntFieldUpdateOperationsInput | number
    pacientes_faltantes?: IntFieldUpdateOperationsInput | number
    nps?: NullableIntFieldUpdateOperationsInput | number | null
    total_consultas?: IntFieldUpdateOperationsInput | number
    total_procedimentos?: IntFieldUpdateOperationsInput | number
    valor_arrecadado?: FloatFieldUpdateOperationsInput | number
    horas_robo_trabalhadas?: FloatFieldUpdateOperationsInput | number
    economia_estimada?: FloatFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InteracaoRoboUpdateWithoutClinicaInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    data_interacao?: DateTimeFieldUpdateOperationsInput | Date | string
    paciente?: PacienteUpdateOneRequiredWithoutInteracao_roboNestedInput
    convenio?: ConvenioUpdateOneWithoutInteracoes_roboNestedInput
  }

  export type InteracaoRoboUncheckedUpdateWithoutClinicaInput = {
    id_interacao?: IntFieldUpdateOperationsInput | number
    id_paciente?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    data_interacao?: DateTimeFieldUpdateOperationsInput | Date | string
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InteracaoRoboUncheckedUpdateManyWithoutClinicaInput = {
    id_interacao?: IntFieldUpdateOperationsInput | number
    id_paciente?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    data_interacao?: DateTimeFieldUpdateOperationsInput | Date | string
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ConvenioUpdateWithoutClinicaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    consultas?: ConsultaUpdateManyWithoutConvenioNestedInput
    interacoes_robo?: InteracaoRoboUpdateManyWithoutConvenioNestedInput
  }

  export type ConvenioUncheckedUpdateWithoutClinicaInput = {
    id_convenio?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    consultas?: ConsultaUncheckedUpdateManyWithoutConvenioNestedInput
    interacoes_robo?: InteracaoRoboUncheckedUpdateManyWithoutConvenioNestedInput
  }

  export type ConvenioUncheckedUpdateManyWithoutClinicaInput = {
    id_convenio?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    ativo?: BoolFieldUpdateOperationsInput | boolean
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConsultaCreateManyPacienteInput = {
    id_consulta?: number
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    profissional_id: number
    id_clinica: number
    id_convenio?: number | null
  }

  export type InteracaoRoboCreateManyPacienteInput = {
    id_interacao?: number
    id_clinica: number
    tipo: string
    data_interacao?: Date | string
    id_convenio?: number | null
  }

  export type ConsultaUpdateWithoutPacienteInput = {
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    clinica?: ClinicaUpdateOneRequiredWithoutConsultasNestedInput
    profissional?: ProfissionalDaSaudeUpdateOneRequiredWithoutConsultasNestedInput
    procedimentos?: ConsultaProcedimentoUpdateManyWithoutConsultaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutConsultaNestedInput
    convenio?: ConvenioUpdateOneWithoutConsultasNestedInput
  }

  export type ConsultaUncheckedUpdateWithoutPacienteInput = {
    id_consulta?: IntFieldUpdateOperationsInput | number
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    profissional_id?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
    procedimentos?: ConsultaProcedimentoUncheckedUpdateManyWithoutConsultaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutConsultaNestedInput
  }

  export type ConsultaUncheckedUpdateManyWithoutPacienteInput = {
    id_consulta?: IntFieldUpdateOperationsInput | number
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    profissional_id?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InteracaoRoboUpdateWithoutPacienteInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    data_interacao?: DateTimeFieldUpdateOperationsInput | Date | string
    clinica?: ClinicaUpdateOneRequiredWithoutInteracao_roboNestedInput
    convenio?: ConvenioUpdateOneWithoutInteracoes_roboNestedInput
  }

  export type InteracaoRoboUncheckedUpdateWithoutPacienteInput = {
    id_interacao?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    data_interacao?: DateTimeFieldUpdateOperationsInput | Date | string
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InteracaoRoboUncheckedUpdateManyWithoutPacienteInput = {
    id_interacao?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    data_interacao?: DateTimeFieldUpdateOperationsInput | Date | string
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ConsultaCreateManyProfissionalInput = {
    id_consulta?: number
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    paciente_id: number
    id_clinica: number
    id_convenio?: number | null
  }

  export type AgendaCreateManyProfissionalInput = {
    id_agenda?: number
    data: Date | string
    hora_inicio: Date | string
    hora_fim: Date | string
    status: string
    tipo_bloqueio?: string | null
    criado_em?: Date | string
    id_clinica: number
  }

  export type ConsultaUpdateWithoutProfissionalInput = {
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    clinica?: ClinicaUpdateOneRequiredWithoutConsultasNestedInput
    paciente?: PacienteUpdateOneRequiredWithoutConsultasNestedInput
    procedimentos?: ConsultaProcedimentoUpdateManyWithoutConsultaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutConsultaNestedInput
    convenio?: ConvenioUpdateOneWithoutConsultasNestedInput
  }

  export type ConsultaUncheckedUpdateWithoutProfissionalInput = {
    id_consulta?: IntFieldUpdateOperationsInput | number
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    paciente_id?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
    procedimentos?: ConsultaProcedimentoUncheckedUpdateManyWithoutConsultaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutConsultaNestedInput
  }

  export type ConsultaUncheckedUpdateManyWithoutProfissionalInput = {
    id_consulta?: IntFieldUpdateOperationsInput | number
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    paciente_id?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    id_convenio?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AgendaUpdateWithoutProfissionalInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    tipo_bloqueio?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    clinica?: ClinicaUpdateOneRequiredWithoutAgendasNestedInput
  }

  export type AgendaUncheckedUpdateWithoutProfissionalInput = {
    id_agenda?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    tipo_bloqueio?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type AgendaUncheckedUpdateManyWithoutProfissionalInput = {
    id_agenda?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    hora_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    tipo_bloqueio?: NullableStringFieldUpdateOperationsInput | string | null
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type ConsultaProcedimentoCreateManyConsultaInput = {
    procedimento_id: number
  }

  export type AvaliacaoCreateManyConsultaInput = {
    id_avaliacao?: number
    data_avaliacao: Date | string
    descricao?: string | null
    parecer_profissional?: string | null
    id_clinica: number
  }

  export type ConsultaProcedimentoUpdateWithoutConsultaInput = {
    procedimento?: ProcedimentoUpdateOneRequiredWithoutConsultasNestedInput
  }

  export type ConsultaProcedimentoUncheckedUpdateWithoutConsultaInput = {
    procedimento_id?: IntFieldUpdateOperationsInput | number
  }

  export type ConsultaProcedimentoUncheckedUpdateManyWithoutConsultaInput = {
    procedimento_id?: IntFieldUpdateOperationsInput | number
  }

  export type AvaliacaoUpdateWithoutConsultaInput = {
    data_avaliacao?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    parecer_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    clinica?: ClinicaUpdateOneRequiredWithoutAvaliacoesNestedInput
  }

  export type AvaliacaoUncheckedUpdateWithoutConsultaInput = {
    id_avaliacao?: IntFieldUpdateOperationsInput | number
    data_avaliacao?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    parecer_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type AvaliacaoUncheckedUpdateManyWithoutConsultaInput = {
    id_avaliacao?: IntFieldUpdateOperationsInput | number
    data_avaliacao?: DateTimeFieldUpdateOperationsInput | Date | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    parecer_profissional?: NullableStringFieldUpdateOperationsInput | string | null
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type ConsultaProcedimentoCreateManyProcedimentoInput = {
    consulta_id: number
  }

  export type ConsultaProcedimentoUpdateWithoutProcedimentoInput = {
    consulta?: ConsultaUpdateOneRequiredWithoutProcedimentosNestedInput
  }

  export type ConsultaProcedimentoUncheckedUpdateWithoutProcedimentoInput = {
    consulta_id?: IntFieldUpdateOperationsInput | number
  }

  export type ConsultaProcedimentoUncheckedUpdateManyWithoutProcedimentoInput = {
    consulta_id?: IntFieldUpdateOperationsInput | number
  }

  export type ConsultaCreateManyConvenioInput = {
    id_consulta?: number
    data_hora_inicio: Date | string
    data_hora_fim?: Date | string | null
    valor?: number | null
    telemedicina?: boolean
    status: string
    observacoes?: string | null
    paciente_id: number
    profissional_id: number
    id_clinica: number
  }

  export type InteracaoRoboCreateManyConvenioInput = {
    id_interacao?: number
    id_clinica: number
    id_paciente: number
    tipo: string
    data_interacao?: Date | string
  }

  export type ConsultaUpdateWithoutConvenioInput = {
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    clinica?: ClinicaUpdateOneRequiredWithoutConsultasNestedInput
    paciente?: PacienteUpdateOneRequiredWithoutConsultasNestedInput
    profissional?: ProfissionalDaSaudeUpdateOneRequiredWithoutConsultasNestedInput
    procedimentos?: ConsultaProcedimentoUpdateManyWithoutConsultaNestedInput
    avaliacoes?: AvaliacaoUpdateManyWithoutConsultaNestedInput
  }

  export type ConsultaUncheckedUpdateWithoutConvenioInput = {
    id_consulta?: IntFieldUpdateOperationsInput | number
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    paciente_id?: IntFieldUpdateOperationsInput | number
    profissional_id?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    procedimentos?: ConsultaProcedimentoUncheckedUpdateManyWithoutConsultaNestedInput
    avaliacoes?: AvaliacaoUncheckedUpdateManyWithoutConsultaNestedInput
  }

  export type ConsultaUncheckedUpdateManyWithoutConvenioInput = {
    id_consulta?: IntFieldUpdateOperationsInput | number
    data_hora_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    data_hora_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    valor?: NullableFloatFieldUpdateOperationsInput | number | null
    telemedicina?: BoolFieldUpdateOperationsInput | boolean
    status?: StringFieldUpdateOperationsInput | string
    observacoes?: NullableStringFieldUpdateOperationsInput | string | null
    paciente_id?: IntFieldUpdateOperationsInput | number
    profissional_id?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
  }

  export type InteracaoRoboUpdateWithoutConvenioInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    data_interacao?: DateTimeFieldUpdateOperationsInput | Date | string
    paciente?: PacienteUpdateOneRequiredWithoutInteracao_roboNestedInput
    clinica?: ClinicaUpdateOneRequiredWithoutInteracao_roboNestedInput
  }

  export type InteracaoRoboUncheckedUpdateWithoutConvenioInput = {
    id_interacao?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    id_paciente?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    data_interacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InteracaoRoboUncheckedUpdateManyWithoutConvenioInput = {
    id_interacao?: IntFieldUpdateOperationsInput | number
    id_clinica?: IntFieldUpdateOperationsInput | number
    id_paciente?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    data_interacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}